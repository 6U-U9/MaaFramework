syntax = "proto3";

package maa;

message RpcStatus { optional bool success = 1; }

message Id { optional uint64 id = 1; }
message Handle { optional uint64 handle = 1; }
message Point {
  optional int32 x = 1;
  optional int32 y = 2;
}
message Size {
  optional int32 width = 1;
  optional int32 height = 2;
}
message Rect {
  optional Point xy = 1;
  optional Size wh = 2;
}
enum Status {
  invalid = 0;
  pending = 1000;
  running = 2000;
  success = 3000;
  failed = 4000;
}
message Callback {
  optional string msg = 1;
  optional string detail = 2;
}

message ClickParam { optional Point point = 1; }
message SwipeParam {
  optional Point from = 1;
  optional Point to = 2;
  optional int32 duration = 3;
}
message KeyParam { optional int32 key = 1; }
message TouchParam {
  optional int32 contact = 1;
  optional Point pos = 2;
  optional int32 pressure = 3;
}

message EmptyRequest {}
message IdRequest { optional Id id = 1; }
message HandleRequest { optional Handle handle = 1; }
message BufferRequest { optional bytes buffer = 1; }
message HandleBufferRequest {
  optional Handle handle = 1;
  optional bytes buffer = 2;
}
message HandleStringRequest {
  optional Handle handle = 1;
  optional string str = 2;
}
message HandleIdRequest {
  optional Handle handle = 1;
  optional Id id = 2;
}

message EmptyResponse { optional RpcStatus status = 101; }
message IdResponse {
  optional Id id = 1;
  optional RpcStatus status = 101;
}
message BoolResponse {
  optional bool value = 1;
  optional RpcStatus status = 101;
}
message StringResponse {
  optional string value = 1;
  optional RpcStatus status = 101;
}
message HandleResponse {
  optional Handle value = 1;
  optional RpcStatus status = 101;
}
message BufferResponse {
  optional bytes value = 1;
  optional RpcStatus status = 101;
}
message StatusResponse {
  optional Status value = 1;
  optional RpcStatus status = 101;
}
