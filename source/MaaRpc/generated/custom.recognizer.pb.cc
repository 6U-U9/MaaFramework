// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: custom.recognizer.proto

#include "custom.recognizer.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace maarpc {
PROTOBUF_CONSTEXPR CustomRecognizerInit::CustomRecognizerInit(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.reco_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct CustomRecognizerInitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomRecognizerInitDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomRecognizerInitDefaultTypeInternal() {}
  union {
    CustomRecognizerInit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomRecognizerInitDefaultTypeInternal _CustomRecognizerInit_default_instance_;
PROTOBUF_CONSTEXPR CustomRecognizerAnalyzeResult::CustomRecognizerAnalyzeResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.detail_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.box_)*/nullptr
  , /*decltype(_impl_.match_)*/false} {}
struct CustomRecognizerAnalyzeResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomRecognizerAnalyzeResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomRecognizerAnalyzeResultDefaultTypeInternal() {}
  union {
    CustomRecognizerAnalyzeResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomRecognizerAnalyzeResultDefaultTypeInternal _CustomRecognizerAnalyzeResult_default_instance_;
PROTOBUF_CONSTEXPR CustomRecognizerSubmit::CustomRecognizerSubmit(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.cmd_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ok_)*/false
  , /*decltype(_impl_.result_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct CustomRecognizerSubmitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomRecognizerSubmitDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomRecognizerSubmitDefaultTypeInternal() {}
  union {
    CustomRecognizerSubmit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomRecognizerSubmitDefaultTypeInternal _CustomRecognizerSubmit_default_instance_;
PROTOBUF_CONSTEXPR CustomRecognizerRequest::CustomRecognizerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.payload_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct CustomRecognizerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomRecognizerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomRecognizerRequestDefaultTypeInternal() {}
  union {
    CustomRecognizerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomRecognizerRequestDefaultTypeInternal _CustomRecognizerRequest_default_instance_;
PROTOBUF_CONSTEXPR CustomRecognizerAnalyzeParam::CustomRecognizerAnalyzeParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.context_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.image_handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.task_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.param_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct CustomRecognizerAnalyzeParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomRecognizerAnalyzeParamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomRecognizerAnalyzeParamDefaultTypeInternal() {}
  union {
    CustomRecognizerAnalyzeParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomRecognizerAnalyzeParamDefaultTypeInternal _CustomRecognizerAnalyzeParam_default_instance_;
PROTOBUF_CONSTEXPR CustomRecognizerResponse::CustomRecognizerResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.reco_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.cmd_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.command_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct CustomRecognizerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomRecognizerResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomRecognizerResponseDefaultTypeInternal() {}
  union {
    CustomRecognizerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomRecognizerResponseDefaultTypeInternal _CustomRecognizerResponse_default_instance_;
}  // namespace maarpc
static ::_pb::Metadata file_level_metadata_custom_2erecognizer_2eproto[6];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_custom_2erecognizer_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_custom_2erecognizer_2eproto = nullptr;

const uint32_t TableStruct_custom_2erecognizer_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerInit, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerInit, _impl_.handle_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerInit, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerInit, _impl_.reco_id_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerAnalyzeResult, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerAnalyzeResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerAnalyzeResult, _impl_.match_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerAnalyzeResult, _impl_.box_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerAnalyzeResult, _impl_.detail_),
  2,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerSubmit, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerSubmit, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerSubmit, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerSubmit, _impl_.handle_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerSubmit, _impl_.cmd_id_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerSubmit, _impl_.ok_),
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerSubmit, _impl_.result_),
  0,
  1,
  2,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerRequest, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerRequest, _impl_.payload_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerAnalyzeParam, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerAnalyzeParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerAnalyzeParam, _impl_.context_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerAnalyzeParam, _impl_.image_handle_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerAnalyzeParam, _impl_.task_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerAnalyzeParam, _impl_.param_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerResponse, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerResponse, _impl_.reco_id_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerResponse, _impl_.cmd_id_),
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomRecognizerResponse, _impl_.command_),
  0,
  1,
  ~0u,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, -1, sizeof(::maarpc::CustomRecognizerInit)},
  { 12, 21, -1, sizeof(::maarpc::CustomRecognizerAnalyzeResult)},
  { 24, 35, -1, sizeof(::maarpc::CustomRecognizerSubmit)},
  { 39, -1, -1, sizeof(::maarpc::CustomRecognizerRequest)},
  { 48, 58, -1, sizeof(::maarpc::CustomRecognizerAnalyzeParam)},
  { 62, 72, -1, sizeof(::maarpc::CustomRecognizerResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::maarpc::_CustomRecognizerInit_default_instance_._instance,
  &::maarpc::_CustomRecognizerAnalyzeResult_default_instance_._instance,
  &::maarpc::_CustomRecognizerSubmit_default_instance_._instance,
  &::maarpc::_CustomRecognizerRequest_default_instance_._instance,
  &::maarpc::_CustomRecognizerAnalyzeParam_default_instance_._instance,
  &::maarpc::_CustomRecognizerResponse_default_instance_._instance,
};

const char descriptor_table_protodef_custom_2erecognizer_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027custom.recognizer.proto\022\006maarpc\032\013types"
  ".proto\"t\n\024CustomRecognizerInit\022\023\n\006handle"
  "\030\001 \001(\tH\000\210\001\001\022\021\n\004name\030\002 \001(\tH\001\210\001\001\022\024\n\007reco_i"
  "d\030\003 \001(\tH\002\210\001\001B\t\n\007_handleB\007\n\005_nameB\n\n\010_rec"
  "o_id\"\205\001\n\035CustomRecognizerAnalyzeResult\022\022"
  "\n\005match\030\001 \001(\010H\000\210\001\001\022\036\n\003box\030\002 \001(\0132\014.maarpc"
  ".RectH\001\210\001\001\022\023\n\006detail\030\003 \001(\tH\002\210\001\001B\010\n\006_matc"
  "hB\006\n\004_boxB\t\n\007_detail\"\264\001\n\026CustomRecognize"
  "rSubmit\022\023\n\006handle\030\001 \001(\tH\001\210\001\001\022\023\n\006cmd_id\030\002"
  " \001(\tH\002\210\001\001\022\017\n\002ok\030\003 \001(\010H\003\210\001\001\0228\n\007analyze\030e "
  "\001(\0132%.maarpc.CustomRecognizerAnalyzeResu"
  "ltH\000B\010\n\006resultB\t\n\007_handleB\t\n\007_cmd_idB\005\n\003"
  "_ok\"\204\001\n\027CustomRecognizerRequest\022,\n\004init\030"
  "\001 \001(\0132\034.maarpc.CustomRecognizerInitH\000\0220\n"
  "\006submit\030\002 \001(\0132\036.maarpc.CustomRecognizerS"
  "ubmitH\000B\t\n\007payload\"\246\001\n\034CustomRecognizerA"
  "nalyzeParam\022\024\n\007context\030\001 \001(\tH\000\210\001\001\022\031\n\014ima"
  "ge_handle\030\002 \001(\tH\001\210\001\001\022\021\n\004task\030\003 \001(\tH\002\210\001\001\022"
  "\022\n\005param\030\004 \001(\tH\003\210\001\001B\n\n\010_contextB\017\n\r_imag"
  "e_handleB\007\n\005_taskB\010\n\006_param\"\240\001\n\030CustomRe"
  "cognizerResponse\022\024\n\007reco_id\030\001 \001(\tH\001\210\001\001\022\023"
  "\n\006cmd_id\030\002 \001(\tH\002\210\001\001\0227\n\007analyze\030e \001(\0132$.m"
  "aarpc.CustomRecognizerAnalyzeParamH\000B\t\n\007"
  "commandB\n\n\010_reco_idB\t\n\007_cmd_idb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_custom_2erecognizer_2eproto_deps[1] = {
  &::descriptor_table_types_2eproto,
};
static ::_pbi::once_flag descriptor_table_custom_2erecognizer_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_custom_2erecognizer_2eproto = {
    false, false, 958, descriptor_table_protodef_custom_2erecognizer_2eproto,
    "custom.recognizer.proto",
    &descriptor_table_custom_2erecognizer_2eproto_once, descriptor_table_custom_2erecognizer_2eproto_deps, 1, 6,
    schemas, file_default_instances, TableStruct_custom_2erecognizer_2eproto::offsets,
    file_level_metadata_custom_2erecognizer_2eproto, file_level_enum_descriptors_custom_2erecognizer_2eproto,
    file_level_service_descriptors_custom_2erecognizer_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_custom_2erecognizer_2eproto_getter() {
  return &descriptor_table_custom_2erecognizer_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_custom_2erecognizer_2eproto(&descriptor_table_custom_2erecognizer_2eproto);
namespace maarpc {

// ===================================================================

class CustomRecognizerInit::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomRecognizerInit>()._impl_._has_bits_);
  static void set_has_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_reco_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CustomRecognizerInit::CustomRecognizerInit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.CustomRecognizerInit)
}
CustomRecognizerInit::CustomRecognizerInit(const CustomRecognizerInit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomRecognizerInit* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.reco_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_handle()) {
    _this->_impl_.handle_.Set(from._internal_handle(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.reco_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reco_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_reco_id()) {
    _this->_impl_.reco_id_.Set(from._internal_reco_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.CustomRecognizerInit)
}

inline void CustomRecognizerInit::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.reco_id_){}
  };
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.reco_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reco_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CustomRecognizerInit::~CustomRecognizerInit() {
  // @@protoc_insertion_point(destructor:maarpc.CustomRecognizerInit)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomRecognizerInit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.handle_.Destroy();
  _impl_.name_.Destroy();
  _impl_.reco_id_.Destroy();
}

void CustomRecognizerInit::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomRecognizerInit::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.CustomRecognizerInit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.handle_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.reco_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomRecognizerInit::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomRecognizerInit.handle"));
        } else
          goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomRecognizerInit.name"));
        } else
          goto handle_unusual;
        continue;
      // optional string reco_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_reco_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomRecognizerInit.reco_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomRecognizerInit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.CustomRecognizerInit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string handle = 1;
  if (_internal_has_handle()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_handle().data(), static_cast<int>(this->_internal_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomRecognizerInit.handle");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_handle(), target);
  }

  // optional string name = 2;
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomRecognizerInit.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // optional string reco_id = 3;
  if (_internal_has_reco_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reco_id().data(), static_cast<int>(this->_internal_reco_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomRecognizerInit.reco_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_reco_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.CustomRecognizerInit)
  return target;
}

size_t CustomRecognizerInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.CustomRecognizerInit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string handle = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_handle());
    }

    // optional string name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string reco_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_reco_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomRecognizerInit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomRecognizerInit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomRecognizerInit::GetClassData() const { return &_class_data_; }


void CustomRecognizerInit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomRecognizerInit*>(&to_msg);
  auto& from = static_cast<const CustomRecognizerInit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.CustomRecognizerInit)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_handle(from._internal_handle());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_reco_id(from._internal_reco_id());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomRecognizerInit::CopyFrom(const CustomRecognizerInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.CustomRecognizerInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomRecognizerInit::IsInitialized() const {
  return true;
}

void CustomRecognizerInit::InternalSwap(CustomRecognizerInit* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.handle_, lhs_arena,
      &other->_impl_.handle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reco_id_, lhs_arena,
      &other->_impl_.reco_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomRecognizerInit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_custom_2erecognizer_2eproto_getter, &descriptor_table_custom_2erecognizer_2eproto_once,
      file_level_metadata_custom_2erecognizer_2eproto[0]);
}

// ===================================================================

class CustomRecognizerAnalyzeResult::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomRecognizerAnalyzeResult>()._impl_._has_bits_);
  static void set_has_match(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::maarpc::Rect& box(const CustomRecognizerAnalyzeResult* msg);
  static void set_has_box(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_detail(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::maarpc::Rect&
CustomRecognizerAnalyzeResult::_Internal::box(const CustomRecognizerAnalyzeResult* msg) {
  return *msg->_impl_.box_;
}
void CustomRecognizerAnalyzeResult::clear_box() {
  if (_impl_.box_ != nullptr) _impl_.box_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CustomRecognizerAnalyzeResult::CustomRecognizerAnalyzeResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.CustomRecognizerAnalyzeResult)
}
CustomRecognizerAnalyzeResult::CustomRecognizerAnalyzeResult(const CustomRecognizerAnalyzeResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomRecognizerAnalyzeResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.detail_){}
    , decltype(_impl_.box_){nullptr}
    , decltype(_impl_.match_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.detail_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.detail_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_detail()) {
    _this->_impl_.detail_.Set(from._internal_detail(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_box()) {
    _this->_impl_.box_ = new ::maarpc::Rect(*from._impl_.box_);
  }
  _this->_impl_.match_ = from._impl_.match_;
  // @@protoc_insertion_point(copy_constructor:maarpc.CustomRecognizerAnalyzeResult)
}

inline void CustomRecognizerAnalyzeResult::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.detail_){}
    , decltype(_impl_.box_){nullptr}
    , decltype(_impl_.match_){false}
  };
  _impl_.detail_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.detail_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CustomRecognizerAnalyzeResult::~CustomRecognizerAnalyzeResult() {
  // @@protoc_insertion_point(destructor:maarpc.CustomRecognizerAnalyzeResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomRecognizerAnalyzeResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.detail_.Destroy();
  if (this != internal_default_instance()) delete _impl_.box_;
}

void CustomRecognizerAnalyzeResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomRecognizerAnalyzeResult::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.CustomRecognizerAnalyzeResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.detail_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.box_ != nullptr);
      _impl_.box_->Clear();
    }
  }
  _impl_.match_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomRecognizerAnalyzeResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool match = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_match(&has_bits);
          _impl_.match_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .maarpc.Rect box = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_box(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string detail = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_detail();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomRecognizerAnalyzeResult.detail"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomRecognizerAnalyzeResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.CustomRecognizerAnalyzeResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional bool match = 1;
  if (_internal_has_match()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_match(), target);
  }

  // optional .maarpc.Rect box = 2;
  if (_internal_has_box()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::box(this),
        _Internal::box(this).GetCachedSize(), target, stream);
  }

  // optional string detail = 3;
  if (_internal_has_detail()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_detail().data(), static_cast<int>(this->_internal_detail().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomRecognizerAnalyzeResult.detail");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_detail(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.CustomRecognizerAnalyzeResult)
  return target;
}

size_t CustomRecognizerAnalyzeResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.CustomRecognizerAnalyzeResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string detail = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_detail());
    }

    // optional .maarpc.Rect box = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.box_);
    }

    // optional bool match = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomRecognizerAnalyzeResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomRecognizerAnalyzeResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomRecognizerAnalyzeResult::GetClassData() const { return &_class_data_; }


void CustomRecognizerAnalyzeResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomRecognizerAnalyzeResult*>(&to_msg);
  auto& from = static_cast<const CustomRecognizerAnalyzeResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.CustomRecognizerAnalyzeResult)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_detail(from._internal_detail());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_box()->::maarpc::Rect::MergeFrom(
          from._internal_box());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.match_ = from._impl_.match_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomRecognizerAnalyzeResult::CopyFrom(const CustomRecognizerAnalyzeResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.CustomRecognizerAnalyzeResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomRecognizerAnalyzeResult::IsInitialized() const {
  return true;
}

void CustomRecognizerAnalyzeResult::InternalSwap(CustomRecognizerAnalyzeResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.detail_, lhs_arena,
      &other->_impl_.detail_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CustomRecognizerAnalyzeResult, _impl_.match_)
      + sizeof(CustomRecognizerAnalyzeResult::_impl_.match_)
      - PROTOBUF_FIELD_OFFSET(CustomRecognizerAnalyzeResult, _impl_.box_)>(
          reinterpret_cast<char*>(&_impl_.box_),
          reinterpret_cast<char*>(&other->_impl_.box_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomRecognizerAnalyzeResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_custom_2erecognizer_2eproto_getter, &descriptor_table_custom_2erecognizer_2eproto_once,
      file_level_metadata_custom_2erecognizer_2eproto[1]);
}

// ===================================================================

class CustomRecognizerSubmit::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomRecognizerSubmit>()._impl_._has_bits_);
  static void set_has_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_cmd_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ok(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::maarpc::CustomRecognizerAnalyzeResult& analyze(const CustomRecognizerSubmit* msg);
};

const ::maarpc::CustomRecognizerAnalyzeResult&
CustomRecognizerSubmit::_Internal::analyze(const CustomRecognizerSubmit* msg) {
  return *msg->_impl_.result_.analyze_;
}
void CustomRecognizerSubmit::set_allocated_analyze(::maarpc::CustomRecognizerAnalyzeResult* analyze) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_result();
  if (analyze) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(analyze);
    if (message_arena != submessage_arena) {
      analyze = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, analyze, submessage_arena);
    }
    set_has_analyze();
    _impl_.result_.analyze_ = analyze;
  }
  // @@protoc_insertion_point(field_set_allocated:maarpc.CustomRecognizerSubmit.analyze)
}
CustomRecognizerSubmit::CustomRecognizerSubmit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.CustomRecognizerSubmit)
}
CustomRecognizerSubmit::CustomRecognizerSubmit(const CustomRecognizerSubmit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomRecognizerSubmit* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.cmd_id_){}
    , decltype(_impl_.ok_){}
    , decltype(_impl_.result_){}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_handle()) {
    _this->_impl_.handle_.Set(from._internal_handle(), 
      _this->GetArenaForAllocation());
  }
  _impl_.cmd_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cmd_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_cmd_id()) {
    _this->_impl_.cmd_id_.Set(from._internal_cmd_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  clear_has_result();
  switch (from.result_case()) {
    case kAnalyze: {
      _this->_internal_mutable_analyze()->::maarpc::CustomRecognizerAnalyzeResult::MergeFrom(
          from._internal_analyze());
      break;
    }
    case RESULT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.CustomRecognizerSubmit)
}

inline void CustomRecognizerSubmit::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.cmd_id_){}
    , decltype(_impl_.ok_){false}
    , decltype(_impl_.result_){}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.cmd_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cmd_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_result();
}

CustomRecognizerSubmit::~CustomRecognizerSubmit() {
  // @@protoc_insertion_point(destructor:maarpc.CustomRecognizerSubmit)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomRecognizerSubmit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.handle_.Destroy();
  _impl_.cmd_id_.Destroy();
  if (has_result()) {
    clear_result();
  }
}

void CustomRecognizerSubmit::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomRecognizerSubmit::clear_result() {
// @@protoc_insertion_point(one_of_clear_start:maarpc.CustomRecognizerSubmit)
  switch (result_case()) {
    case kAnalyze: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.result_.analyze_;
      }
      break;
    }
    case RESULT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}


void CustomRecognizerSubmit::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.CustomRecognizerSubmit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.handle_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.cmd_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.ok_ = false;
  clear_result();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomRecognizerSubmit::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomRecognizerSubmit.handle"));
        } else
          goto handle_unusual;
        continue;
      // optional string cmd_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_cmd_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomRecognizerSubmit.cmd_id"));
        } else
          goto handle_unusual;
        continue;
      // optional bool ok = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_ok(&has_bits);
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .maarpc.CustomRecognizerAnalyzeResult analyze = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_analyze(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomRecognizerSubmit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.CustomRecognizerSubmit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string handle = 1;
  if (_internal_has_handle()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_handle().data(), static_cast<int>(this->_internal_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomRecognizerSubmit.handle");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_handle(), target);
  }

  // optional string cmd_id = 2;
  if (_internal_has_cmd_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cmd_id().data(), static_cast<int>(this->_internal_cmd_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomRecognizerSubmit.cmd_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_cmd_id(), target);
  }

  // optional bool ok = 3;
  if (_internal_has_ok()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_ok(), target);
  }

  // .maarpc.CustomRecognizerAnalyzeResult analyze = 101;
  if (_internal_has_analyze()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(101, _Internal::analyze(this),
        _Internal::analyze(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.CustomRecognizerSubmit)
  return target;
}

size_t CustomRecognizerSubmit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.CustomRecognizerSubmit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string handle = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_handle());
    }

    // optional string cmd_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_cmd_id());
    }

    // optional bool ok = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  switch (result_case()) {
    // .maarpc.CustomRecognizerAnalyzeResult analyze = 101;
    case kAnalyze: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.result_.analyze_);
      break;
    }
    case RESULT_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomRecognizerSubmit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomRecognizerSubmit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomRecognizerSubmit::GetClassData() const { return &_class_data_; }


void CustomRecognizerSubmit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomRecognizerSubmit*>(&to_msg);
  auto& from = static_cast<const CustomRecognizerSubmit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.CustomRecognizerSubmit)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_handle(from._internal_handle());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_cmd_id(from._internal_cmd_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.ok_ = from._impl_.ok_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  switch (from.result_case()) {
    case kAnalyze: {
      _this->_internal_mutable_analyze()->::maarpc::CustomRecognizerAnalyzeResult::MergeFrom(
          from._internal_analyze());
      break;
    }
    case RESULT_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomRecognizerSubmit::CopyFrom(const CustomRecognizerSubmit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.CustomRecognizerSubmit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomRecognizerSubmit::IsInitialized() const {
  return true;
}

void CustomRecognizerSubmit::InternalSwap(CustomRecognizerSubmit* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.handle_, lhs_arena,
      &other->_impl_.handle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.cmd_id_, lhs_arena,
      &other->_impl_.cmd_id_, rhs_arena
  );
  swap(_impl_.ok_, other->_impl_.ok_);
  swap(_impl_.result_, other->_impl_.result_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomRecognizerSubmit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_custom_2erecognizer_2eproto_getter, &descriptor_table_custom_2erecognizer_2eproto_once,
      file_level_metadata_custom_2erecognizer_2eproto[2]);
}

// ===================================================================

class CustomRecognizerRequest::_Internal {
 public:
  static const ::maarpc::CustomRecognizerInit& init(const CustomRecognizerRequest* msg);
  static const ::maarpc::CustomRecognizerSubmit& submit(const CustomRecognizerRequest* msg);
};

const ::maarpc::CustomRecognizerInit&
CustomRecognizerRequest::_Internal::init(const CustomRecognizerRequest* msg) {
  return *msg->_impl_.payload_.init_;
}
const ::maarpc::CustomRecognizerSubmit&
CustomRecognizerRequest::_Internal::submit(const CustomRecognizerRequest* msg) {
  return *msg->_impl_.payload_.submit_;
}
void CustomRecognizerRequest::set_allocated_init(::maarpc::CustomRecognizerInit* init) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (init) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(init);
    if (message_arena != submessage_arena) {
      init = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, init, submessage_arena);
    }
    set_has_init();
    _impl_.payload_.init_ = init;
  }
  // @@protoc_insertion_point(field_set_allocated:maarpc.CustomRecognizerRequest.init)
}
void CustomRecognizerRequest::set_allocated_submit(::maarpc::CustomRecognizerSubmit* submit) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (submit) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(submit);
    if (message_arena != submessage_arena) {
      submit = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, submit, submessage_arena);
    }
    set_has_submit();
    _impl_.payload_.submit_ = submit;
  }
  // @@protoc_insertion_point(field_set_allocated:maarpc.CustomRecognizerRequest.submit)
}
CustomRecognizerRequest::CustomRecognizerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.CustomRecognizerRequest)
}
CustomRecognizerRequest::CustomRecognizerRequest(const CustomRecognizerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomRecognizerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kInit: {
      _this->_internal_mutable_init()->::maarpc::CustomRecognizerInit::MergeFrom(
          from._internal_init());
      break;
    }
    case kSubmit: {
      _this->_internal_mutable_submit()->::maarpc::CustomRecognizerSubmit::MergeFrom(
          from._internal_submit());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.CustomRecognizerRequest)
}

inline void CustomRecognizerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_payload();
}

CustomRecognizerRequest::~CustomRecognizerRequest() {
  // @@protoc_insertion_point(destructor:maarpc.CustomRecognizerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomRecognizerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
}

void CustomRecognizerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomRecognizerRequest::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:maarpc.CustomRecognizerRequest)
  switch (payload_case()) {
    case kInit: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.init_;
      }
      break;
    }
    case kSubmit: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.submit_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


void CustomRecognizerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.CustomRecognizerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomRecognizerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .maarpc.CustomRecognizerInit init = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_init(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .maarpc.CustomRecognizerSubmit submit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_submit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomRecognizerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.CustomRecognizerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .maarpc.CustomRecognizerInit init = 1;
  if (_internal_has_init()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::init(this),
        _Internal::init(this).GetCachedSize(), target, stream);
  }

  // .maarpc.CustomRecognizerSubmit submit = 2;
  if (_internal_has_submit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::submit(this),
        _Internal::submit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.CustomRecognizerRequest)
  return target;
}

size_t CustomRecognizerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.CustomRecognizerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (payload_case()) {
    // .maarpc.CustomRecognizerInit init = 1;
    case kInit: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.init_);
      break;
    }
    // .maarpc.CustomRecognizerSubmit submit = 2;
    case kSubmit: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.submit_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomRecognizerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomRecognizerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomRecognizerRequest::GetClassData() const { return &_class_data_; }


void CustomRecognizerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomRecognizerRequest*>(&to_msg);
  auto& from = static_cast<const CustomRecognizerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.CustomRecognizerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kInit: {
      _this->_internal_mutable_init()->::maarpc::CustomRecognizerInit::MergeFrom(
          from._internal_init());
      break;
    }
    case kSubmit: {
      _this->_internal_mutable_submit()->::maarpc::CustomRecognizerSubmit::MergeFrom(
          from._internal_submit());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomRecognizerRequest::CopyFrom(const CustomRecognizerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.CustomRecognizerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomRecognizerRequest::IsInitialized() const {
  return true;
}

void CustomRecognizerRequest::InternalSwap(CustomRecognizerRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomRecognizerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_custom_2erecognizer_2eproto_getter, &descriptor_table_custom_2erecognizer_2eproto_once,
      file_level_metadata_custom_2erecognizer_2eproto[3]);
}

// ===================================================================

class CustomRecognizerAnalyzeParam::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomRecognizerAnalyzeParam>()._impl_._has_bits_);
  static void set_has_context(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_image_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_task(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_param(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CustomRecognizerAnalyzeParam::CustomRecognizerAnalyzeParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.CustomRecognizerAnalyzeParam)
}
CustomRecognizerAnalyzeParam::CustomRecognizerAnalyzeParam(const CustomRecognizerAnalyzeParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomRecognizerAnalyzeParam* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.context_){}
    , decltype(_impl_.image_handle_){}
    , decltype(_impl_.task_){}
    , decltype(_impl_.param_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.context_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.context_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_context()) {
    _this->_impl_.context_.Set(from._internal_context(), 
      _this->GetArenaForAllocation());
  }
  _impl_.image_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.image_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_image_handle()) {
    _this->_impl_.image_handle_.Set(from._internal_image_handle(), 
      _this->GetArenaForAllocation());
  }
  _impl_.task_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.task_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_task()) {
    _this->_impl_.task_.Set(from._internal_task(), 
      _this->GetArenaForAllocation());
  }
  _impl_.param_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.param_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_param()) {
    _this->_impl_.param_.Set(from._internal_param(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.CustomRecognizerAnalyzeParam)
}

inline void CustomRecognizerAnalyzeParam::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.context_){}
    , decltype(_impl_.image_handle_){}
    , decltype(_impl_.task_){}
    , decltype(_impl_.param_){}
  };
  _impl_.context_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.context_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.image_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.image_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.task_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.task_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.param_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.param_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CustomRecognizerAnalyzeParam::~CustomRecognizerAnalyzeParam() {
  // @@protoc_insertion_point(destructor:maarpc.CustomRecognizerAnalyzeParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomRecognizerAnalyzeParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.context_.Destroy();
  _impl_.image_handle_.Destroy();
  _impl_.task_.Destroy();
  _impl_.param_.Destroy();
}

void CustomRecognizerAnalyzeParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomRecognizerAnalyzeParam::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.CustomRecognizerAnalyzeParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.context_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.image_handle_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.task_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.param_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomRecognizerAnalyzeParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string context = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_context();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomRecognizerAnalyzeParam.context"));
        } else
          goto handle_unusual;
        continue;
      // optional string image_handle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_image_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomRecognizerAnalyzeParam.image_handle"));
        } else
          goto handle_unusual;
        continue;
      // optional string task = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_task();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomRecognizerAnalyzeParam.task"));
        } else
          goto handle_unusual;
        continue;
      // optional string param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_param();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomRecognizerAnalyzeParam.param"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomRecognizerAnalyzeParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.CustomRecognizerAnalyzeParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string context = 1;
  if (_internal_has_context()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_context().data(), static_cast<int>(this->_internal_context().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomRecognizerAnalyzeParam.context");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_context(), target);
  }

  // optional string image_handle = 2;
  if (_internal_has_image_handle()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_handle().data(), static_cast<int>(this->_internal_image_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomRecognizerAnalyzeParam.image_handle");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_image_handle(), target);
  }

  // optional string task = 3;
  if (_internal_has_task()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_task().data(), static_cast<int>(this->_internal_task().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomRecognizerAnalyzeParam.task");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_task(), target);
  }

  // optional string param = 4;
  if (_internal_has_param()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_param().data(), static_cast<int>(this->_internal_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomRecognizerAnalyzeParam.param");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_param(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.CustomRecognizerAnalyzeParam)
  return target;
}

size_t CustomRecognizerAnalyzeParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.CustomRecognizerAnalyzeParam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string context = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_context());
    }

    // optional string image_handle = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_image_handle());
    }

    // optional string task = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_task());
    }

    // optional string param = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomRecognizerAnalyzeParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomRecognizerAnalyzeParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomRecognizerAnalyzeParam::GetClassData() const { return &_class_data_; }


void CustomRecognizerAnalyzeParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomRecognizerAnalyzeParam*>(&to_msg);
  auto& from = static_cast<const CustomRecognizerAnalyzeParam&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.CustomRecognizerAnalyzeParam)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_context(from._internal_context());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_image_handle(from._internal_image_handle());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_task(from._internal_task());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_param(from._internal_param());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomRecognizerAnalyzeParam::CopyFrom(const CustomRecognizerAnalyzeParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.CustomRecognizerAnalyzeParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomRecognizerAnalyzeParam::IsInitialized() const {
  return true;
}

void CustomRecognizerAnalyzeParam::InternalSwap(CustomRecognizerAnalyzeParam* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.context_, lhs_arena,
      &other->_impl_.context_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.image_handle_, lhs_arena,
      &other->_impl_.image_handle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.task_, lhs_arena,
      &other->_impl_.task_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.param_, lhs_arena,
      &other->_impl_.param_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomRecognizerAnalyzeParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_custom_2erecognizer_2eproto_getter, &descriptor_table_custom_2erecognizer_2eproto_once,
      file_level_metadata_custom_2erecognizer_2eproto[4]);
}

// ===================================================================

class CustomRecognizerResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomRecognizerResponse>()._impl_._has_bits_);
  static void set_has_reco_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_cmd_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::maarpc::CustomRecognizerAnalyzeParam& analyze(const CustomRecognizerResponse* msg);
};

const ::maarpc::CustomRecognizerAnalyzeParam&
CustomRecognizerResponse::_Internal::analyze(const CustomRecognizerResponse* msg) {
  return *msg->_impl_.command_.analyze_;
}
void CustomRecognizerResponse::set_allocated_analyze(::maarpc::CustomRecognizerAnalyzeParam* analyze) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_command();
  if (analyze) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(analyze);
    if (message_arena != submessage_arena) {
      analyze = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, analyze, submessage_arena);
    }
    set_has_analyze();
    _impl_.command_.analyze_ = analyze;
  }
  // @@protoc_insertion_point(field_set_allocated:maarpc.CustomRecognizerResponse.analyze)
}
CustomRecognizerResponse::CustomRecognizerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.CustomRecognizerResponse)
}
CustomRecognizerResponse::CustomRecognizerResponse(const CustomRecognizerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomRecognizerResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reco_id_){}
    , decltype(_impl_.cmd_id_){}
    , decltype(_impl_.command_){}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.reco_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reco_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_reco_id()) {
    _this->_impl_.reco_id_.Set(from._internal_reco_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.cmd_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cmd_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_cmd_id()) {
    _this->_impl_.cmd_id_.Set(from._internal_cmd_id(), 
      _this->GetArenaForAllocation());
  }
  clear_has_command();
  switch (from.command_case()) {
    case kAnalyze: {
      _this->_internal_mutable_analyze()->::maarpc::CustomRecognizerAnalyzeParam::MergeFrom(
          from._internal_analyze());
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.CustomRecognizerResponse)
}

inline void CustomRecognizerResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reco_id_){}
    , decltype(_impl_.cmd_id_){}
    , decltype(_impl_.command_){}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.reco_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reco_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.cmd_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cmd_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_command();
}

CustomRecognizerResponse::~CustomRecognizerResponse() {
  // @@protoc_insertion_point(destructor:maarpc.CustomRecognizerResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomRecognizerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reco_id_.Destroy();
  _impl_.cmd_id_.Destroy();
  if (has_command()) {
    clear_command();
  }
}

void CustomRecognizerResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomRecognizerResponse::clear_command() {
// @@protoc_insertion_point(one_of_clear_start:maarpc.CustomRecognizerResponse)
  switch (command_case()) {
    case kAnalyze: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.command_.analyze_;
      }
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = COMMAND_NOT_SET;
}


void CustomRecognizerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.CustomRecognizerResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.reco_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.cmd_id_.ClearNonDefaultToEmpty();
    }
  }
  clear_command();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomRecognizerResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string reco_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_reco_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomRecognizerResponse.reco_id"));
        } else
          goto handle_unusual;
        continue;
      // optional string cmd_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_cmd_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomRecognizerResponse.cmd_id"));
        } else
          goto handle_unusual;
        continue;
      // .maarpc.CustomRecognizerAnalyzeParam analyze = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_analyze(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomRecognizerResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.CustomRecognizerResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string reco_id = 1;
  if (_internal_has_reco_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reco_id().data(), static_cast<int>(this->_internal_reco_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomRecognizerResponse.reco_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reco_id(), target);
  }

  // optional string cmd_id = 2;
  if (_internal_has_cmd_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cmd_id().data(), static_cast<int>(this->_internal_cmd_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomRecognizerResponse.cmd_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_cmd_id(), target);
  }

  // .maarpc.CustomRecognizerAnalyzeParam analyze = 101;
  if (_internal_has_analyze()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(101, _Internal::analyze(this),
        _Internal::analyze(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.CustomRecognizerResponse)
  return target;
}

size_t CustomRecognizerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.CustomRecognizerResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string reco_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_reco_id());
    }

    // optional string cmd_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_cmd_id());
    }

  }
  switch (command_case()) {
    // .maarpc.CustomRecognizerAnalyzeParam analyze = 101;
    case kAnalyze: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.command_.analyze_);
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomRecognizerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomRecognizerResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomRecognizerResponse::GetClassData() const { return &_class_data_; }


void CustomRecognizerResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomRecognizerResponse*>(&to_msg);
  auto& from = static_cast<const CustomRecognizerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.CustomRecognizerResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_reco_id(from._internal_reco_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_cmd_id(from._internal_cmd_id());
    }
  }
  switch (from.command_case()) {
    case kAnalyze: {
      _this->_internal_mutable_analyze()->::maarpc::CustomRecognizerAnalyzeParam::MergeFrom(
          from._internal_analyze());
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomRecognizerResponse::CopyFrom(const CustomRecognizerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.CustomRecognizerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomRecognizerResponse::IsInitialized() const {
  return true;
}

void CustomRecognizerResponse::InternalSwap(CustomRecognizerResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reco_id_, lhs_arena,
      &other->_impl_.reco_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.cmd_id_, lhs_arena,
      &other->_impl_.cmd_id_, rhs_arena
  );
  swap(_impl_.command_, other->_impl_.command_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomRecognizerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_custom_2erecognizer_2eproto_getter, &descriptor_table_custom_2erecognizer_2eproto_once,
      file_level_metadata_custom_2erecognizer_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace maarpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::maarpc::CustomRecognizerInit*
Arena::CreateMaybeMessage< ::maarpc::CustomRecognizerInit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::CustomRecognizerInit >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::CustomRecognizerAnalyzeResult*
Arena::CreateMaybeMessage< ::maarpc::CustomRecognizerAnalyzeResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::CustomRecognizerAnalyzeResult >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::CustomRecognizerSubmit*
Arena::CreateMaybeMessage< ::maarpc::CustomRecognizerSubmit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::CustomRecognizerSubmit >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::CustomRecognizerRequest*
Arena::CreateMaybeMessage< ::maarpc::CustomRecognizerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::CustomRecognizerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::CustomRecognizerAnalyzeParam*
Arena::CreateMaybeMessage< ::maarpc::CustomRecognizerAnalyzeParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::CustomRecognizerAnalyzeParam >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::CustomRecognizerResponse*
Arena::CreateMaybeMessage< ::maarpc::CustomRecognizerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::CustomRecognizerResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
