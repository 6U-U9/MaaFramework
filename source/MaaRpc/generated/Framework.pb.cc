// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Framework.proto

#include "Framework.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace maa {
PROTOBUF_CONSTEXPR SetGlobalOptionRequest::SetGlobalOptionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.option_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct SetGlobalOptionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetGlobalOptionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetGlobalOptionRequestDefaultTypeInternal() {}
  union {
    SetGlobalOptionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetGlobalOptionRequestDefaultTypeInternal _SetGlobalOptionRequest_default_instance_;
}  // namespace maa
static ::_pb::Metadata file_level_metadata_Framework_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Framework_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Framework_2eproto = nullptr;

const uint32_t TableStruct_Framework_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::maa::SetGlobalOptionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::maa::SetGlobalOptionRequest, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::maa::SetGlobalOptionRequest, _impl_.option_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::maa::SetGlobalOptionRequest)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::maa::_SetGlobalOptionRequest_default_instance_._instance,
};

const char descriptor_table_protodef_Framework_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017Framework.proto\022\003maa\032\013Types.proto\"K\n\026S"
  "etGlobalOptionRequest\022\021\n\007logging\030\001 \001(\tH\000"
  "\022\024\n\ndebug_mode\030\002 \001(\010H\000B\010\n\006option2\261\002\n\014Maa"
  "Framework\0221\n\007version\022\021.maa.EmptyRequest\032"
  "\023.maa.StringResponse\022C\n\021set_global_optio"
  "n\022\033.maa.SetGlobalOptionRequest\032\021.maa.Boo"
  "lResponse\0229\n\023acquire_callback_id\022\021.maa.E"
  "mptyRequest\032\017.maa.IdResponse\0224\n\021register"
  "_callback\022\016.maa.IdRequest\032\r.maa.Callback"
  "0\001\0228\n\023unregister_callback\022\016.maa.IdReques"
  "t\032\021.maa.BoolResponse2\203\003\n\021MaaFrameworkIma"
  "ge\0220\n\006create\022\021.maa.EmptyRequest\032\023.maa.Ha"
  "ndleResponse\0221\n\007destroy\022\022.maa.HandleRequ"
  "est\032\022.maa.EmptyResponse\0221\n\010is_empty\022\022.ma"
  "a.HandleRequest\032\021.maa.BoolResponse\022.\n\005cl"
  "ear\022\022.maa.HandleRequest\032\021.maa.BoolRespon"
  "se\0222\n\004info\022\022.maa.HandleRequest\032\026.maa.Ima"
  "geInfoResponse\0226\n\013get_encoded\022\022.maa.Hand"
  "leRequest\032\023.maa.BufferResponse\022:\n\013set_en"
  "coded\022\030.maa.HandleBufferRequest\032\021.maa.Bo"
  "olResponse2\372\002\n\024MaaFrameworkResource\022-\n\006c"
  "reate\022\016.maa.IdRequest\032\023.maa.HandleRespon"
  "se\0221\n\007destroy\022\022.maa.HandleRequest\032\022.maa."
  "EmptyResponse\0226\n\tpost_path\022\030.maa.HandleS"
  "tringRequest\032\017.maa.IdResponse\0223\n\006status\022"
  "\024.maa.HandleIdRequest\032\023.maa.StatusRespon"
  "se\0221\n\004wait\022\024.maa.HandleIdRequest\032\023.maa.S"
  "tatusResponse\022/\n\006loaded\022\022.maa.HandleRequ"
  "est\032\021.maa.BoolResponse\022/\n\004hash\022\022.maa.Han"
  "dleRequest\032\023.maa.StringResponseb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_Framework_2eproto_deps[1] = {
  &::descriptor_table_Types_2eproto,
};
static ::_pbi::once_flag descriptor_table_Framework_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Framework_2eproto = {
    false, false, 1199, descriptor_table_protodef_Framework_2eproto,
    "Framework.proto",
    &descriptor_table_Framework_2eproto_once, descriptor_table_Framework_2eproto_deps, 1, 1,
    schemas, file_default_instances, TableStruct_Framework_2eproto::offsets,
    file_level_metadata_Framework_2eproto, file_level_enum_descriptors_Framework_2eproto,
    file_level_service_descriptors_Framework_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Framework_2eproto_getter() {
  return &descriptor_table_Framework_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Framework_2eproto(&descriptor_table_Framework_2eproto);
namespace maa {

// ===================================================================

class SetGlobalOptionRequest::_Internal {
 public:
};

SetGlobalOptionRequest::SetGlobalOptionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maa.SetGlobalOptionRequest)
}
SetGlobalOptionRequest::SetGlobalOptionRequest(const SetGlobalOptionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetGlobalOptionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.option_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_option();
  switch (from.option_case()) {
    case kLogging: {
      _this->_internal_set_logging(from._internal_logging());
      break;
    }
    case kDebugMode: {
      _this->_internal_set_debug_mode(from._internal_debug_mode());
      break;
    }
    case OPTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:maa.SetGlobalOptionRequest)
}

inline void SetGlobalOptionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.option_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_option();
}

SetGlobalOptionRequest::~SetGlobalOptionRequest() {
  // @@protoc_insertion_point(destructor:maa.SetGlobalOptionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetGlobalOptionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_option()) {
    clear_option();
  }
}

void SetGlobalOptionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetGlobalOptionRequest::clear_option() {
// @@protoc_insertion_point(one_of_clear_start:maa.SetGlobalOptionRequest)
  switch (option_case()) {
    case kLogging: {
      _impl_.option_.logging_.Destroy();
      break;
    }
    case kDebugMode: {
      // No need to clear
      break;
    }
    case OPTION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = OPTION_NOT_SET;
}


void SetGlobalOptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:maa.SetGlobalOptionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_option();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetGlobalOptionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string logging = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_logging();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maa.SetGlobalOptionRequest.logging"));
        } else
          goto handle_unusual;
        continue;
      // bool debug_mode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _internal_set_debug_mode(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetGlobalOptionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maa.SetGlobalOptionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string logging = 1;
  if (_internal_has_logging()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_logging().data(), static_cast<int>(this->_internal_logging().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maa.SetGlobalOptionRequest.logging");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_logging(), target);
  }

  // bool debug_mode = 2;
  if (_internal_has_debug_mode()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_debug_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maa.SetGlobalOptionRequest)
  return target;
}

size_t SetGlobalOptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maa.SetGlobalOptionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (option_case()) {
    // string logging = 1;
    case kLogging: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_logging());
      break;
    }
    // bool debug_mode = 2;
    case kDebugMode: {
      total_size += 1 + 1;
      break;
    }
    case OPTION_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetGlobalOptionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetGlobalOptionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetGlobalOptionRequest::GetClassData() const { return &_class_data_; }


void SetGlobalOptionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetGlobalOptionRequest*>(&to_msg);
  auto& from = static_cast<const SetGlobalOptionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maa.SetGlobalOptionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.option_case()) {
    case kLogging: {
      _this->_internal_set_logging(from._internal_logging());
      break;
    }
    case kDebugMode: {
      _this->_internal_set_debug_mode(from._internal_debug_mode());
      break;
    }
    case OPTION_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetGlobalOptionRequest::CopyFrom(const SetGlobalOptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maa.SetGlobalOptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGlobalOptionRequest::IsInitialized() const {
  return true;
}

void SetGlobalOptionRequest::InternalSwap(SetGlobalOptionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.option_, other->_impl_.option_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetGlobalOptionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Framework_2eproto_getter, &descriptor_table_Framework_2eproto_once,
      file_level_metadata_Framework_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace maa
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::maa::SetGlobalOptionRequest*
Arena::CreateMaybeMessage< ::maa::SetGlobalOptionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maa::SetGlobalOptionRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
