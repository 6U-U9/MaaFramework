// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync.context.proto

#include "sync.context.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace maarpc {
PROTOBUF_CONSTEXPR SyncContextRunTaskRequest::SyncContextRunTaskRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.task_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.param_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct SyncContextRunTaskRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncContextRunTaskRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncContextRunTaskRequestDefaultTypeInternal() {}
  union {
    SyncContextRunTaskRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncContextRunTaskRequestDefaultTypeInternal _SyncContextRunTaskRequest_default_instance_;
PROTOBUF_CONSTEXPR SyncContextRunRecognizerRequest::SyncContextRunRecognizerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.task_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.param_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.image_handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct SyncContextRunRecognizerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncContextRunRecognizerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncContextRunRecognizerRequestDefaultTypeInternal() {}
  union {
    SyncContextRunRecognizerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncContextRunRecognizerRequestDefaultTypeInternal _SyncContextRunRecognizerRequest_default_instance_;
PROTOBUF_CONSTEXPR SyncContextRunRecognizerResponse::SyncContextRunRecognizerResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.detail_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.box_)*/nullptr
  , /*decltype(_impl_.match_)*/false} {}
struct SyncContextRunRecognizerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncContextRunRecognizerResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncContextRunRecognizerResponseDefaultTypeInternal() {}
  union {
    SyncContextRunRecognizerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncContextRunRecognizerResponseDefaultTypeInternal _SyncContextRunRecognizerResponse_default_instance_;
PROTOBUF_CONSTEXPR SyncContextRunActionRequest::SyncContextRunActionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.task_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.param_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.detail_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.box_)*/nullptr} {}
struct SyncContextRunActionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncContextRunActionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncContextRunActionRequestDefaultTypeInternal() {}
  union {
    SyncContextRunActionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncContextRunActionRequestDefaultTypeInternal _SyncContextRunActionRequest_default_instance_;
PROTOBUF_CONSTEXPR SyncContextClickRequest::SyncContextClickRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.param_)*/nullptr} {}
struct SyncContextClickRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncContextClickRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncContextClickRequestDefaultTypeInternal() {}
  union {
    SyncContextClickRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncContextClickRequestDefaultTypeInternal _SyncContextClickRequest_default_instance_;
PROTOBUF_CONSTEXPR SyncContextSwipeRequest::SyncContextSwipeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.param_)*/nullptr} {}
struct SyncContextSwipeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncContextSwipeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncContextSwipeRequestDefaultTypeInternal() {}
  union {
    SyncContextSwipeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncContextSwipeRequestDefaultTypeInternal _SyncContextSwipeRequest_default_instance_;
PROTOBUF_CONSTEXPR SyncContextKeyRequest::SyncContextKeyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.param_)*/nullptr} {}
struct SyncContextKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncContextKeyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncContextKeyRequestDefaultTypeInternal() {}
  union {
    SyncContextKeyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncContextKeyRequestDefaultTypeInternal _SyncContextKeyRequest_default_instance_;
PROTOBUF_CONSTEXPR SyncContextTouchRequest::SyncContextTouchRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.param_)*/nullptr} {}
struct SyncContextTouchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncContextTouchRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncContextTouchRequestDefaultTypeInternal() {}
  union {
    SyncContextTouchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncContextTouchRequestDefaultTypeInternal _SyncContextTouchRequest_default_instance_;
PROTOBUF_CONSTEXPR SyncContextScreencapRequest::SyncContextScreencapRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.image_handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct SyncContextScreencapRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncContextScreencapRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncContextScreencapRequestDefaultTypeInternal() {}
  union {
    SyncContextScreencapRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncContextScreencapRequestDefaultTypeInternal _SyncContextScreencapRequest_default_instance_;
}  // namespace maarpc
static ::_pb::Metadata file_level_metadata_sync_2econtext_2eproto[9];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_sync_2econtext_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_sync_2econtext_2eproto = nullptr;

const uint32_t TableStruct_sync_2econtext_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunTaskRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunTaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunTaskRequest, _impl_.handle_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunTaskRequest, _impl_.task_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunTaskRequest, _impl_.param_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunRecognizerRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunRecognizerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunRecognizerRequest, _impl_.handle_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunRecognizerRequest, _impl_.task_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunRecognizerRequest, _impl_.param_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunRecognizerRequest, _impl_.image_handle_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunRecognizerResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunRecognizerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunRecognizerResponse, _impl_.match_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunRecognizerResponse, _impl_.box_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunRecognizerResponse, _impl_.detail_),
  2,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunActionRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunActionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunActionRequest, _impl_.handle_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunActionRequest, _impl_.task_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunActionRequest, _impl_.param_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunActionRequest, _impl_.box_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextRunActionRequest, _impl_.detail_),
  0,
  1,
  2,
  4,
  3,
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextClickRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextClickRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextClickRequest, _impl_.handle_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextClickRequest, _impl_.param_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextSwipeRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextSwipeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextSwipeRequest, _impl_.handle_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextSwipeRequest, _impl_.param_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextKeyRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextKeyRequest, _impl_.handle_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextKeyRequest, _impl_.param_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextTouchRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextTouchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextTouchRequest, _impl_.handle_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextTouchRequest, _impl_.param_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextScreencapRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextScreencapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextScreencapRequest, _impl_.handle_),
  PROTOBUF_FIELD_OFFSET(::maarpc::SyncContextScreencapRequest, _impl_.image_handle_),
  0,
  1,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, -1, sizeof(::maarpc::SyncContextRunTaskRequest)},
  { 12, 22, -1, sizeof(::maarpc::SyncContextRunRecognizerRequest)},
  { 26, 35, -1, sizeof(::maarpc::SyncContextRunRecognizerResponse)},
  { 38, 49, -1, sizeof(::maarpc::SyncContextRunActionRequest)},
  { 54, 62, -1, sizeof(::maarpc::SyncContextClickRequest)},
  { 64, 72, -1, sizeof(::maarpc::SyncContextSwipeRequest)},
  { 74, 82, -1, sizeof(::maarpc::SyncContextKeyRequest)},
  { 84, 92, -1, sizeof(::maarpc::SyncContextTouchRequest)},
  { 94, 102, -1, sizeof(::maarpc::SyncContextScreencapRequest)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::maarpc::_SyncContextRunTaskRequest_default_instance_._instance,
  &::maarpc::_SyncContextRunRecognizerRequest_default_instance_._instance,
  &::maarpc::_SyncContextRunRecognizerResponse_default_instance_._instance,
  &::maarpc::_SyncContextRunActionRequest_default_instance_._instance,
  &::maarpc::_SyncContextClickRequest_default_instance_._instance,
  &::maarpc::_SyncContextSwipeRequest_default_instance_._instance,
  &::maarpc::_SyncContextKeyRequest_default_instance_._instance,
  &::maarpc::_SyncContextTouchRequest_default_instance_._instance,
  &::maarpc::_SyncContextScreencapRequest_default_instance_._instance,
};

const char descriptor_table_protodef_sync_2econtext_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022sync.context.proto\022\006maarpc\032\013types.prot"
  "o\"u\n\031SyncContextRunTaskRequest\022\023\n\006handle"
  "\030\001 \001(\tH\000\210\001\001\022\021\n\004task\030\002 \001(\tH\001\210\001\001\022\022\n\005param\030"
  "\003 \001(\tH\002\210\001\001B\t\n\007_handleB\007\n\005_taskB\010\n\006_param"
  "\"\247\001\n\037SyncContextRunRecognizerRequest\022\023\n\006"
  "handle\030\001 \001(\tH\000\210\001\001\022\021\n\004task\030\002 \001(\tH\001\210\001\001\022\022\n\005"
  "param\030\003 \001(\tH\002\210\001\001\022\031\n\014image_handle\030\004 \001(\tH\003"
  "\210\001\001B\t\n\007_handleB\007\n\005_taskB\010\n\006_paramB\017\n\r_im"
  "age_handle\"\210\001\n SyncContextRunRecognizerR"
  "esponse\022\022\n\005match\030\001 \001(\010H\000\210\001\001\022\036\n\003box\030\002 \001(\013"
  "2\014.maarpc.RectH\001\210\001\001\022\023\n\006detail\030\003 \001(\tH\002\210\001\001"
  "B\010\n\006_matchB\006\n\004_boxB\t\n\007_detail\"\277\001\n\033SyncCo"
  "ntextRunActionRequest\022\023\n\006handle\030\001 \001(\tH\000\210"
  "\001\001\022\021\n\004task\030\002 \001(\tH\001\210\001\001\022\022\n\005param\030\003 \001(\tH\002\210\001"
  "\001\022\036\n\003box\030\004 \001(\0132\014.maarpc.RectH\003\210\001\001\022\023\n\006det"
  "ail\030\005 \001(\tH\004\210\001\001B\t\n\007_handleB\007\n\005_taskB\010\n\006_p"
  "aramB\006\n\004_boxB\t\n\007_detail\"k\n\027SyncContextCl"
  "ickRequest\022\023\n\006handle\030\001 \001(\tH\000\210\001\001\022&\n\005param"
  "\030\002 \001(\0132\022.maarpc.ClickParamH\001\210\001\001B\t\n\007_hand"
  "leB\010\n\006_param\"k\n\027SyncContextSwipeRequest\022"
  "\023\n\006handle\030\001 \001(\tH\000\210\001\001\022&\n\005param\030\002 \001(\0132\022.ma"
  "arpc.SwipeParamH\001\210\001\001B\t\n\007_handleB\010\n\006_para"
  "m\"g\n\025SyncContextKeyRequest\022\023\n\006handle\030\001 \001"
  "(\tH\000\210\001\001\022$\n\005param\030\002 \001(\0132\020.maarpc.KeyParam"
  "H\001\210\001\001B\t\n\007_handleB\010\n\006_param\"k\n\027SyncContex"
  "tTouchRequest\022\023\n\006handle\030\001 \001(\tH\000\210\001\001\022&\n\005pa"
  "ram\030\002 \001(\0132\022.maarpc.TouchParamH\001\210\001\001B\t\n\007_h"
  "andleB\010\n\006_param\"i\n\033SyncContextScreencapR"
  "equest\022\023\n\006handle\030\001 \001(\tH\000\210\001\001\022\031\n\014image_han"
  "dle\030\002 \001(\tH\001\210\001\001B\t\n\007_handleB\017\n\r_image_hand"
  "le2\230\006\n\013SyncContext\022D\n\010run_task\022!.maarpc."
  "SyncContextRunTaskRequest\032\025.maarpc.Empty"
  "Response\022c\n\016run_recognizer\022\'.maarpc.Sync"
  "ContextRunRecognizerRequest\032(.maarpc.Syn"
  "cContextRunRecognizerResponse\022H\n\nrun_act"
  "ion\022#.maarpc.SyncContextRunActionRequest"
  "\032\025.maarpc.EmptyResponse\022>\n\005click\022\037.maarp"
  "c.SyncContextClickRequest\032\024.maarpc.Empty"
  "Request\022>\n\005swipe\022\037.maarpc.SyncContextSwi"
  "peRequest\032\024.maarpc.EmptyRequest\022:\n\003key\022\035"
  ".maarpc.SyncContextKeyRequest\032\024.maarpc.E"
  "mptyRequest\022C\n\ntouch_down\022\037.maarpc.SyncC"
  "ontextTouchRequest\032\024.maarpc.EmptyRequest"
  "\022C\n\ntouch_move\022\037.maarpc.SyncContextTouch"
  "Request\032\024.maarpc.EmptyRequest\022A\n\010touch_u"
  "p\022\037.maarpc.SyncContextTouchRequest\032\024.maa"
  "rpc.EmptyRequest\022G\n\tscreencap\022#.maarpc.S"
  "yncContextScreencapRequest\032\025.maarpc.Empt"
  "yResponse\022B\n\013task_result\022\033.maarpc.Handle"
  "StringRequest\032\026.maarpc.StringResponseb\006p"
  "roto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_sync_2econtext_2eproto_deps[1] = {
  &::descriptor_table_types_2eproto,
};
static ::_pbi::once_flag descriptor_table_sync_2econtext_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sync_2econtext_2eproto = {
    false, false, 2005, descriptor_table_protodef_sync_2econtext_2eproto,
    "sync.context.proto",
    &descriptor_table_sync_2econtext_2eproto_once, descriptor_table_sync_2econtext_2eproto_deps, 1, 9,
    schemas, file_default_instances, TableStruct_sync_2econtext_2eproto::offsets,
    file_level_metadata_sync_2econtext_2eproto, file_level_enum_descriptors_sync_2econtext_2eproto,
    file_level_service_descriptors_sync_2econtext_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sync_2econtext_2eproto_getter() {
  return &descriptor_table_sync_2econtext_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sync_2econtext_2eproto(&descriptor_table_sync_2econtext_2eproto);
namespace maarpc {

// ===================================================================

class SyncContextRunTaskRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncContextRunTaskRequest>()._impl_._has_bits_);
  static void set_has_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_task(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_param(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

SyncContextRunTaskRequest::SyncContextRunTaskRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.SyncContextRunTaskRequest)
}
SyncContextRunTaskRequest::SyncContextRunTaskRequest(const SyncContextRunTaskRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncContextRunTaskRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.task_){}
    , decltype(_impl_.param_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_handle()) {
    _this->_impl_.handle_.Set(from._internal_handle(), 
      _this->GetArenaForAllocation());
  }
  _impl_.task_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.task_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_task()) {
    _this->_impl_.task_.Set(from._internal_task(), 
      _this->GetArenaForAllocation());
  }
  _impl_.param_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.param_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_param()) {
    _this->_impl_.param_.Set(from._internal_param(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.SyncContextRunTaskRequest)
}

inline void SyncContextRunTaskRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.task_){}
    , decltype(_impl_.param_){}
  };
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.task_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.task_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.param_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.param_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncContextRunTaskRequest::~SyncContextRunTaskRequest() {
  // @@protoc_insertion_point(destructor:maarpc.SyncContextRunTaskRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncContextRunTaskRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.handle_.Destroy();
  _impl_.task_.Destroy();
  _impl_.param_.Destroy();
}

void SyncContextRunTaskRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncContextRunTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.SyncContextRunTaskRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.handle_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.task_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.param_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncContextRunTaskRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextRunTaskRequest.handle"));
        } else
          goto handle_unusual;
        continue;
      // optional string task = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_task();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextRunTaskRequest.task"));
        } else
          goto handle_unusual;
        continue;
      // optional string param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_param();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextRunTaskRequest.param"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncContextRunTaskRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.SyncContextRunTaskRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string handle = 1;
  if (_internal_has_handle()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_handle().data(), static_cast<int>(this->_internal_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextRunTaskRequest.handle");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_handle(), target);
  }

  // optional string task = 2;
  if (_internal_has_task()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_task().data(), static_cast<int>(this->_internal_task().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextRunTaskRequest.task");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_task(), target);
  }

  // optional string param = 3;
  if (_internal_has_param()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_param().data(), static_cast<int>(this->_internal_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextRunTaskRequest.param");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_param(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.SyncContextRunTaskRequest)
  return target;
}

size_t SyncContextRunTaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.SyncContextRunTaskRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string handle = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_handle());
    }

    // optional string task = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_task());
    }

    // optional string param = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncContextRunTaskRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncContextRunTaskRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncContextRunTaskRequest::GetClassData() const { return &_class_data_; }


void SyncContextRunTaskRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncContextRunTaskRequest*>(&to_msg);
  auto& from = static_cast<const SyncContextRunTaskRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.SyncContextRunTaskRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_handle(from._internal_handle());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_task(from._internal_task());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_param(from._internal_param());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncContextRunTaskRequest::CopyFrom(const SyncContextRunTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.SyncContextRunTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncContextRunTaskRequest::IsInitialized() const {
  return true;
}

void SyncContextRunTaskRequest::InternalSwap(SyncContextRunTaskRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.handle_, lhs_arena,
      &other->_impl_.handle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.task_, lhs_arena,
      &other->_impl_.task_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.param_, lhs_arena,
      &other->_impl_.param_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncContextRunTaskRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_2econtext_2eproto_getter, &descriptor_table_sync_2econtext_2eproto_once,
      file_level_metadata_sync_2econtext_2eproto[0]);
}

// ===================================================================

class SyncContextRunRecognizerRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncContextRunRecognizerRequest>()._impl_._has_bits_);
  static void set_has_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_task(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_param(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_image_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

SyncContextRunRecognizerRequest::SyncContextRunRecognizerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.SyncContextRunRecognizerRequest)
}
SyncContextRunRecognizerRequest::SyncContextRunRecognizerRequest(const SyncContextRunRecognizerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncContextRunRecognizerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.task_){}
    , decltype(_impl_.param_){}
    , decltype(_impl_.image_handle_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_handle()) {
    _this->_impl_.handle_.Set(from._internal_handle(), 
      _this->GetArenaForAllocation());
  }
  _impl_.task_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.task_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_task()) {
    _this->_impl_.task_.Set(from._internal_task(), 
      _this->GetArenaForAllocation());
  }
  _impl_.param_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.param_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_param()) {
    _this->_impl_.param_.Set(from._internal_param(), 
      _this->GetArenaForAllocation());
  }
  _impl_.image_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.image_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_image_handle()) {
    _this->_impl_.image_handle_.Set(from._internal_image_handle(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.SyncContextRunRecognizerRequest)
}

inline void SyncContextRunRecognizerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.task_){}
    , decltype(_impl_.param_){}
    , decltype(_impl_.image_handle_){}
  };
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.task_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.task_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.param_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.param_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.image_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.image_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncContextRunRecognizerRequest::~SyncContextRunRecognizerRequest() {
  // @@protoc_insertion_point(destructor:maarpc.SyncContextRunRecognizerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncContextRunRecognizerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.handle_.Destroy();
  _impl_.task_.Destroy();
  _impl_.param_.Destroy();
  _impl_.image_handle_.Destroy();
}

void SyncContextRunRecognizerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncContextRunRecognizerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.SyncContextRunRecognizerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.handle_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.task_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.param_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.image_handle_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncContextRunRecognizerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextRunRecognizerRequest.handle"));
        } else
          goto handle_unusual;
        continue;
      // optional string task = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_task();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextRunRecognizerRequest.task"));
        } else
          goto handle_unusual;
        continue;
      // optional string param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_param();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextRunRecognizerRequest.param"));
        } else
          goto handle_unusual;
        continue;
      // optional string image_handle = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_image_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextRunRecognizerRequest.image_handle"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncContextRunRecognizerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.SyncContextRunRecognizerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string handle = 1;
  if (_internal_has_handle()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_handle().data(), static_cast<int>(this->_internal_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextRunRecognizerRequest.handle");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_handle(), target);
  }

  // optional string task = 2;
  if (_internal_has_task()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_task().data(), static_cast<int>(this->_internal_task().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextRunRecognizerRequest.task");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_task(), target);
  }

  // optional string param = 3;
  if (_internal_has_param()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_param().data(), static_cast<int>(this->_internal_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextRunRecognizerRequest.param");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_param(), target);
  }

  // optional string image_handle = 4;
  if (_internal_has_image_handle()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_handle().data(), static_cast<int>(this->_internal_image_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextRunRecognizerRequest.image_handle");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_image_handle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.SyncContextRunRecognizerRequest)
  return target;
}

size_t SyncContextRunRecognizerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.SyncContextRunRecognizerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string handle = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_handle());
    }

    // optional string task = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_task());
    }

    // optional string param = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param());
    }

    // optional string image_handle = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_image_handle());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncContextRunRecognizerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncContextRunRecognizerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncContextRunRecognizerRequest::GetClassData() const { return &_class_data_; }


void SyncContextRunRecognizerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncContextRunRecognizerRequest*>(&to_msg);
  auto& from = static_cast<const SyncContextRunRecognizerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.SyncContextRunRecognizerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_handle(from._internal_handle());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_task(from._internal_task());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_param(from._internal_param());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_image_handle(from._internal_image_handle());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncContextRunRecognizerRequest::CopyFrom(const SyncContextRunRecognizerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.SyncContextRunRecognizerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncContextRunRecognizerRequest::IsInitialized() const {
  return true;
}

void SyncContextRunRecognizerRequest::InternalSwap(SyncContextRunRecognizerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.handle_, lhs_arena,
      &other->_impl_.handle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.task_, lhs_arena,
      &other->_impl_.task_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.param_, lhs_arena,
      &other->_impl_.param_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.image_handle_, lhs_arena,
      &other->_impl_.image_handle_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncContextRunRecognizerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_2econtext_2eproto_getter, &descriptor_table_sync_2econtext_2eproto_once,
      file_level_metadata_sync_2econtext_2eproto[1]);
}

// ===================================================================

class SyncContextRunRecognizerResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncContextRunRecognizerResponse>()._impl_._has_bits_);
  static void set_has_match(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::maarpc::Rect& box(const SyncContextRunRecognizerResponse* msg);
  static void set_has_box(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_detail(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::maarpc::Rect&
SyncContextRunRecognizerResponse::_Internal::box(const SyncContextRunRecognizerResponse* msg) {
  return *msg->_impl_.box_;
}
void SyncContextRunRecognizerResponse::clear_box() {
  if (_impl_.box_ != nullptr) _impl_.box_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SyncContextRunRecognizerResponse::SyncContextRunRecognizerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.SyncContextRunRecognizerResponse)
}
SyncContextRunRecognizerResponse::SyncContextRunRecognizerResponse(const SyncContextRunRecognizerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncContextRunRecognizerResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.detail_){}
    , decltype(_impl_.box_){nullptr}
    , decltype(_impl_.match_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.detail_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.detail_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_detail()) {
    _this->_impl_.detail_.Set(from._internal_detail(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_box()) {
    _this->_impl_.box_ = new ::maarpc::Rect(*from._impl_.box_);
  }
  _this->_impl_.match_ = from._impl_.match_;
  // @@protoc_insertion_point(copy_constructor:maarpc.SyncContextRunRecognizerResponse)
}

inline void SyncContextRunRecognizerResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.detail_){}
    , decltype(_impl_.box_){nullptr}
    , decltype(_impl_.match_){false}
  };
  _impl_.detail_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.detail_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncContextRunRecognizerResponse::~SyncContextRunRecognizerResponse() {
  // @@protoc_insertion_point(destructor:maarpc.SyncContextRunRecognizerResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncContextRunRecognizerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.detail_.Destroy();
  if (this != internal_default_instance()) delete _impl_.box_;
}

void SyncContextRunRecognizerResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncContextRunRecognizerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.SyncContextRunRecognizerResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.detail_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.box_ != nullptr);
      _impl_.box_->Clear();
    }
  }
  _impl_.match_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncContextRunRecognizerResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool match = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_match(&has_bits);
          _impl_.match_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .maarpc.Rect box = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_box(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string detail = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_detail();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextRunRecognizerResponse.detail"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncContextRunRecognizerResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.SyncContextRunRecognizerResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional bool match = 1;
  if (_internal_has_match()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_match(), target);
  }

  // optional .maarpc.Rect box = 2;
  if (_internal_has_box()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::box(this),
        _Internal::box(this).GetCachedSize(), target, stream);
  }

  // optional string detail = 3;
  if (_internal_has_detail()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_detail().data(), static_cast<int>(this->_internal_detail().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextRunRecognizerResponse.detail");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_detail(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.SyncContextRunRecognizerResponse)
  return target;
}

size_t SyncContextRunRecognizerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.SyncContextRunRecognizerResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string detail = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_detail());
    }

    // optional .maarpc.Rect box = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.box_);
    }

    // optional bool match = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncContextRunRecognizerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncContextRunRecognizerResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncContextRunRecognizerResponse::GetClassData() const { return &_class_data_; }


void SyncContextRunRecognizerResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncContextRunRecognizerResponse*>(&to_msg);
  auto& from = static_cast<const SyncContextRunRecognizerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.SyncContextRunRecognizerResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_detail(from._internal_detail());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_box()->::maarpc::Rect::MergeFrom(
          from._internal_box());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.match_ = from._impl_.match_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncContextRunRecognizerResponse::CopyFrom(const SyncContextRunRecognizerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.SyncContextRunRecognizerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncContextRunRecognizerResponse::IsInitialized() const {
  return true;
}

void SyncContextRunRecognizerResponse::InternalSwap(SyncContextRunRecognizerResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.detail_, lhs_arena,
      &other->_impl_.detail_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SyncContextRunRecognizerResponse, _impl_.match_)
      + sizeof(SyncContextRunRecognizerResponse::_impl_.match_)
      - PROTOBUF_FIELD_OFFSET(SyncContextRunRecognizerResponse, _impl_.box_)>(
          reinterpret_cast<char*>(&_impl_.box_),
          reinterpret_cast<char*>(&other->_impl_.box_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncContextRunRecognizerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_2econtext_2eproto_getter, &descriptor_table_sync_2econtext_2eproto_once,
      file_level_metadata_sync_2econtext_2eproto[2]);
}

// ===================================================================

class SyncContextRunActionRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncContextRunActionRequest>()._impl_._has_bits_);
  static void set_has_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_task(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_param(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::maarpc::Rect& box(const SyncContextRunActionRequest* msg);
  static void set_has_box(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_detail(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::maarpc::Rect&
SyncContextRunActionRequest::_Internal::box(const SyncContextRunActionRequest* msg) {
  return *msg->_impl_.box_;
}
void SyncContextRunActionRequest::clear_box() {
  if (_impl_.box_ != nullptr) _impl_.box_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
SyncContextRunActionRequest::SyncContextRunActionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.SyncContextRunActionRequest)
}
SyncContextRunActionRequest::SyncContextRunActionRequest(const SyncContextRunActionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncContextRunActionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.task_){}
    , decltype(_impl_.param_){}
    , decltype(_impl_.detail_){}
    , decltype(_impl_.box_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_handle()) {
    _this->_impl_.handle_.Set(from._internal_handle(), 
      _this->GetArenaForAllocation());
  }
  _impl_.task_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.task_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_task()) {
    _this->_impl_.task_.Set(from._internal_task(), 
      _this->GetArenaForAllocation());
  }
  _impl_.param_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.param_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_param()) {
    _this->_impl_.param_.Set(from._internal_param(), 
      _this->GetArenaForAllocation());
  }
  _impl_.detail_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.detail_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_detail()) {
    _this->_impl_.detail_.Set(from._internal_detail(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_box()) {
    _this->_impl_.box_ = new ::maarpc::Rect(*from._impl_.box_);
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.SyncContextRunActionRequest)
}

inline void SyncContextRunActionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.task_){}
    , decltype(_impl_.param_){}
    , decltype(_impl_.detail_){}
    , decltype(_impl_.box_){nullptr}
  };
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.task_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.task_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.param_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.param_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.detail_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.detail_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncContextRunActionRequest::~SyncContextRunActionRequest() {
  // @@protoc_insertion_point(destructor:maarpc.SyncContextRunActionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncContextRunActionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.handle_.Destroy();
  _impl_.task_.Destroy();
  _impl_.param_.Destroy();
  _impl_.detail_.Destroy();
  if (this != internal_default_instance()) delete _impl_.box_;
}

void SyncContextRunActionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncContextRunActionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.SyncContextRunActionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.handle_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.task_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.param_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.detail_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.box_ != nullptr);
      _impl_.box_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncContextRunActionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextRunActionRequest.handle"));
        } else
          goto handle_unusual;
        continue;
      // optional string task = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_task();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextRunActionRequest.task"));
        } else
          goto handle_unusual;
        continue;
      // optional string param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_param();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextRunActionRequest.param"));
        } else
          goto handle_unusual;
        continue;
      // optional .maarpc.Rect box = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_box(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string detail = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_detail();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextRunActionRequest.detail"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncContextRunActionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.SyncContextRunActionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string handle = 1;
  if (_internal_has_handle()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_handle().data(), static_cast<int>(this->_internal_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextRunActionRequest.handle");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_handle(), target);
  }

  // optional string task = 2;
  if (_internal_has_task()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_task().data(), static_cast<int>(this->_internal_task().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextRunActionRequest.task");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_task(), target);
  }

  // optional string param = 3;
  if (_internal_has_param()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_param().data(), static_cast<int>(this->_internal_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextRunActionRequest.param");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_param(), target);
  }

  // optional .maarpc.Rect box = 4;
  if (_internal_has_box()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::box(this),
        _Internal::box(this).GetCachedSize(), target, stream);
  }

  // optional string detail = 5;
  if (_internal_has_detail()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_detail().data(), static_cast<int>(this->_internal_detail().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextRunActionRequest.detail");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_detail(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.SyncContextRunActionRequest)
  return target;
}

size_t SyncContextRunActionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.SyncContextRunActionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string handle = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_handle());
    }

    // optional string task = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_task());
    }

    // optional string param = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param());
    }

    // optional string detail = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_detail());
    }

    // optional .maarpc.Rect box = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.box_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncContextRunActionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncContextRunActionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncContextRunActionRequest::GetClassData() const { return &_class_data_; }


void SyncContextRunActionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncContextRunActionRequest*>(&to_msg);
  auto& from = static_cast<const SyncContextRunActionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.SyncContextRunActionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_handle(from._internal_handle());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_task(from._internal_task());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_param(from._internal_param());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_detail(from._internal_detail());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_box()->::maarpc::Rect::MergeFrom(
          from._internal_box());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncContextRunActionRequest::CopyFrom(const SyncContextRunActionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.SyncContextRunActionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncContextRunActionRequest::IsInitialized() const {
  return true;
}

void SyncContextRunActionRequest::InternalSwap(SyncContextRunActionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.handle_, lhs_arena,
      &other->_impl_.handle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.task_, lhs_arena,
      &other->_impl_.task_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.param_, lhs_arena,
      &other->_impl_.param_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.detail_, lhs_arena,
      &other->_impl_.detail_, rhs_arena
  );
  swap(_impl_.box_, other->_impl_.box_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncContextRunActionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_2econtext_2eproto_getter, &descriptor_table_sync_2econtext_2eproto_once,
      file_level_metadata_sync_2econtext_2eproto[3]);
}

// ===================================================================

class SyncContextClickRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncContextClickRequest>()._impl_._has_bits_);
  static void set_has_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::maarpc::ClickParam& param(const SyncContextClickRequest* msg);
  static void set_has_param(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::maarpc::ClickParam&
SyncContextClickRequest::_Internal::param(const SyncContextClickRequest* msg) {
  return *msg->_impl_.param_;
}
void SyncContextClickRequest::clear_param() {
  if (_impl_.param_ != nullptr) _impl_.param_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SyncContextClickRequest::SyncContextClickRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.SyncContextClickRequest)
}
SyncContextClickRequest::SyncContextClickRequest(const SyncContextClickRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncContextClickRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.param_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_handle()) {
    _this->_impl_.handle_.Set(from._internal_handle(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_param()) {
    _this->_impl_.param_ = new ::maarpc::ClickParam(*from._impl_.param_);
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.SyncContextClickRequest)
}

inline void SyncContextClickRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.param_){nullptr}
  };
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncContextClickRequest::~SyncContextClickRequest() {
  // @@protoc_insertion_point(destructor:maarpc.SyncContextClickRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncContextClickRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.handle_.Destroy();
  if (this != internal_default_instance()) delete _impl_.param_;
}

void SyncContextClickRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncContextClickRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.SyncContextClickRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.handle_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.param_ != nullptr);
      _impl_.param_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncContextClickRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextClickRequest.handle"));
        } else
          goto handle_unusual;
        continue;
      // optional .maarpc.ClickParam param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncContextClickRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.SyncContextClickRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string handle = 1;
  if (_internal_has_handle()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_handle().data(), static_cast<int>(this->_internal_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextClickRequest.handle");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_handle(), target);
  }

  // optional .maarpc.ClickParam param = 2;
  if (_internal_has_param()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::param(this),
        _Internal::param(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.SyncContextClickRequest)
  return target;
}

size_t SyncContextClickRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.SyncContextClickRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string handle = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_handle());
    }

    // optional .maarpc.ClickParam param = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.param_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncContextClickRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncContextClickRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncContextClickRequest::GetClassData() const { return &_class_data_; }


void SyncContextClickRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncContextClickRequest*>(&to_msg);
  auto& from = static_cast<const SyncContextClickRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.SyncContextClickRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_handle(from._internal_handle());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_param()->::maarpc::ClickParam::MergeFrom(
          from._internal_param());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncContextClickRequest::CopyFrom(const SyncContextClickRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.SyncContextClickRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncContextClickRequest::IsInitialized() const {
  return true;
}

void SyncContextClickRequest::InternalSwap(SyncContextClickRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.handle_, lhs_arena,
      &other->_impl_.handle_, rhs_arena
  );
  swap(_impl_.param_, other->_impl_.param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncContextClickRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_2econtext_2eproto_getter, &descriptor_table_sync_2econtext_2eproto_once,
      file_level_metadata_sync_2econtext_2eproto[4]);
}

// ===================================================================

class SyncContextSwipeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncContextSwipeRequest>()._impl_._has_bits_);
  static void set_has_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::maarpc::SwipeParam& param(const SyncContextSwipeRequest* msg);
  static void set_has_param(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::maarpc::SwipeParam&
SyncContextSwipeRequest::_Internal::param(const SyncContextSwipeRequest* msg) {
  return *msg->_impl_.param_;
}
void SyncContextSwipeRequest::clear_param() {
  if (_impl_.param_ != nullptr) _impl_.param_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SyncContextSwipeRequest::SyncContextSwipeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.SyncContextSwipeRequest)
}
SyncContextSwipeRequest::SyncContextSwipeRequest(const SyncContextSwipeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncContextSwipeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.param_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_handle()) {
    _this->_impl_.handle_.Set(from._internal_handle(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_param()) {
    _this->_impl_.param_ = new ::maarpc::SwipeParam(*from._impl_.param_);
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.SyncContextSwipeRequest)
}

inline void SyncContextSwipeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.param_){nullptr}
  };
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncContextSwipeRequest::~SyncContextSwipeRequest() {
  // @@protoc_insertion_point(destructor:maarpc.SyncContextSwipeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncContextSwipeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.handle_.Destroy();
  if (this != internal_default_instance()) delete _impl_.param_;
}

void SyncContextSwipeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncContextSwipeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.SyncContextSwipeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.handle_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.param_ != nullptr);
      _impl_.param_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncContextSwipeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextSwipeRequest.handle"));
        } else
          goto handle_unusual;
        continue;
      // optional .maarpc.SwipeParam param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncContextSwipeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.SyncContextSwipeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string handle = 1;
  if (_internal_has_handle()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_handle().data(), static_cast<int>(this->_internal_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextSwipeRequest.handle");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_handle(), target);
  }

  // optional .maarpc.SwipeParam param = 2;
  if (_internal_has_param()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::param(this),
        _Internal::param(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.SyncContextSwipeRequest)
  return target;
}

size_t SyncContextSwipeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.SyncContextSwipeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string handle = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_handle());
    }

    // optional .maarpc.SwipeParam param = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.param_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncContextSwipeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncContextSwipeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncContextSwipeRequest::GetClassData() const { return &_class_data_; }


void SyncContextSwipeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncContextSwipeRequest*>(&to_msg);
  auto& from = static_cast<const SyncContextSwipeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.SyncContextSwipeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_handle(from._internal_handle());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_param()->::maarpc::SwipeParam::MergeFrom(
          from._internal_param());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncContextSwipeRequest::CopyFrom(const SyncContextSwipeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.SyncContextSwipeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncContextSwipeRequest::IsInitialized() const {
  return true;
}

void SyncContextSwipeRequest::InternalSwap(SyncContextSwipeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.handle_, lhs_arena,
      &other->_impl_.handle_, rhs_arena
  );
  swap(_impl_.param_, other->_impl_.param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncContextSwipeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_2econtext_2eproto_getter, &descriptor_table_sync_2econtext_2eproto_once,
      file_level_metadata_sync_2econtext_2eproto[5]);
}

// ===================================================================

class SyncContextKeyRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncContextKeyRequest>()._impl_._has_bits_);
  static void set_has_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::maarpc::KeyParam& param(const SyncContextKeyRequest* msg);
  static void set_has_param(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::maarpc::KeyParam&
SyncContextKeyRequest::_Internal::param(const SyncContextKeyRequest* msg) {
  return *msg->_impl_.param_;
}
void SyncContextKeyRequest::clear_param() {
  if (_impl_.param_ != nullptr) _impl_.param_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SyncContextKeyRequest::SyncContextKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.SyncContextKeyRequest)
}
SyncContextKeyRequest::SyncContextKeyRequest(const SyncContextKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncContextKeyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.param_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_handle()) {
    _this->_impl_.handle_.Set(from._internal_handle(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_param()) {
    _this->_impl_.param_ = new ::maarpc::KeyParam(*from._impl_.param_);
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.SyncContextKeyRequest)
}

inline void SyncContextKeyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.param_){nullptr}
  };
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncContextKeyRequest::~SyncContextKeyRequest() {
  // @@protoc_insertion_point(destructor:maarpc.SyncContextKeyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncContextKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.handle_.Destroy();
  if (this != internal_default_instance()) delete _impl_.param_;
}

void SyncContextKeyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncContextKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.SyncContextKeyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.handle_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.param_ != nullptr);
      _impl_.param_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncContextKeyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextKeyRequest.handle"));
        } else
          goto handle_unusual;
        continue;
      // optional .maarpc.KeyParam param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncContextKeyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.SyncContextKeyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string handle = 1;
  if (_internal_has_handle()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_handle().data(), static_cast<int>(this->_internal_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextKeyRequest.handle");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_handle(), target);
  }

  // optional .maarpc.KeyParam param = 2;
  if (_internal_has_param()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::param(this),
        _Internal::param(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.SyncContextKeyRequest)
  return target;
}

size_t SyncContextKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.SyncContextKeyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string handle = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_handle());
    }

    // optional .maarpc.KeyParam param = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.param_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncContextKeyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncContextKeyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncContextKeyRequest::GetClassData() const { return &_class_data_; }


void SyncContextKeyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncContextKeyRequest*>(&to_msg);
  auto& from = static_cast<const SyncContextKeyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.SyncContextKeyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_handle(from._internal_handle());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_param()->::maarpc::KeyParam::MergeFrom(
          from._internal_param());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncContextKeyRequest::CopyFrom(const SyncContextKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.SyncContextKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncContextKeyRequest::IsInitialized() const {
  return true;
}

void SyncContextKeyRequest::InternalSwap(SyncContextKeyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.handle_, lhs_arena,
      &other->_impl_.handle_, rhs_arena
  );
  swap(_impl_.param_, other->_impl_.param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncContextKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_2econtext_2eproto_getter, &descriptor_table_sync_2econtext_2eproto_once,
      file_level_metadata_sync_2econtext_2eproto[6]);
}

// ===================================================================

class SyncContextTouchRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncContextTouchRequest>()._impl_._has_bits_);
  static void set_has_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::maarpc::TouchParam& param(const SyncContextTouchRequest* msg);
  static void set_has_param(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::maarpc::TouchParam&
SyncContextTouchRequest::_Internal::param(const SyncContextTouchRequest* msg) {
  return *msg->_impl_.param_;
}
void SyncContextTouchRequest::clear_param() {
  if (_impl_.param_ != nullptr) _impl_.param_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SyncContextTouchRequest::SyncContextTouchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.SyncContextTouchRequest)
}
SyncContextTouchRequest::SyncContextTouchRequest(const SyncContextTouchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncContextTouchRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.param_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_handle()) {
    _this->_impl_.handle_.Set(from._internal_handle(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_param()) {
    _this->_impl_.param_ = new ::maarpc::TouchParam(*from._impl_.param_);
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.SyncContextTouchRequest)
}

inline void SyncContextTouchRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.param_){nullptr}
  };
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncContextTouchRequest::~SyncContextTouchRequest() {
  // @@protoc_insertion_point(destructor:maarpc.SyncContextTouchRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncContextTouchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.handle_.Destroy();
  if (this != internal_default_instance()) delete _impl_.param_;
}

void SyncContextTouchRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncContextTouchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.SyncContextTouchRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.handle_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.param_ != nullptr);
      _impl_.param_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncContextTouchRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextTouchRequest.handle"));
        } else
          goto handle_unusual;
        continue;
      // optional .maarpc.TouchParam param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncContextTouchRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.SyncContextTouchRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string handle = 1;
  if (_internal_has_handle()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_handle().data(), static_cast<int>(this->_internal_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextTouchRequest.handle");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_handle(), target);
  }

  // optional .maarpc.TouchParam param = 2;
  if (_internal_has_param()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::param(this),
        _Internal::param(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.SyncContextTouchRequest)
  return target;
}

size_t SyncContextTouchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.SyncContextTouchRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string handle = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_handle());
    }

    // optional .maarpc.TouchParam param = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.param_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncContextTouchRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncContextTouchRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncContextTouchRequest::GetClassData() const { return &_class_data_; }


void SyncContextTouchRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncContextTouchRequest*>(&to_msg);
  auto& from = static_cast<const SyncContextTouchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.SyncContextTouchRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_handle(from._internal_handle());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_param()->::maarpc::TouchParam::MergeFrom(
          from._internal_param());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncContextTouchRequest::CopyFrom(const SyncContextTouchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.SyncContextTouchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncContextTouchRequest::IsInitialized() const {
  return true;
}

void SyncContextTouchRequest::InternalSwap(SyncContextTouchRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.handle_, lhs_arena,
      &other->_impl_.handle_, rhs_arena
  );
  swap(_impl_.param_, other->_impl_.param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncContextTouchRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_2econtext_2eproto_getter, &descriptor_table_sync_2econtext_2eproto_once,
      file_level_metadata_sync_2econtext_2eproto[7]);
}

// ===================================================================

class SyncContextScreencapRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncContextScreencapRequest>()._impl_._has_bits_);
  static void set_has_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_image_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

SyncContextScreencapRequest::SyncContextScreencapRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.SyncContextScreencapRequest)
}
SyncContextScreencapRequest::SyncContextScreencapRequest(const SyncContextScreencapRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncContextScreencapRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.image_handle_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_handle()) {
    _this->_impl_.handle_.Set(from._internal_handle(), 
      _this->GetArenaForAllocation());
  }
  _impl_.image_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.image_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_image_handle()) {
    _this->_impl_.image_handle_.Set(from._internal_image_handle(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.SyncContextScreencapRequest)
}

inline void SyncContextScreencapRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.image_handle_){}
  };
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.image_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.image_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncContextScreencapRequest::~SyncContextScreencapRequest() {
  // @@protoc_insertion_point(destructor:maarpc.SyncContextScreencapRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncContextScreencapRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.handle_.Destroy();
  _impl_.image_handle_.Destroy();
}

void SyncContextScreencapRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncContextScreencapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.SyncContextScreencapRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.handle_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.image_handle_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncContextScreencapRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextScreencapRequest.handle"));
        } else
          goto handle_unusual;
        continue;
      // optional string image_handle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_image_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.SyncContextScreencapRequest.image_handle"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncContextScreencapRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.SyncContextScreencapRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string handle = 1;
  if (_internal_has_handle()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_handle().data(), static_cast<int>(this->_internal_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextScreencapRequest.handle");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_handle(), target);
  }

  // optional string image_handle = 2;
  if (_internal_has_image_handle()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_handle().data(), static_cast<int>(this->_internal_image_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.SyncContextScreencapRequest.image_handle");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_image_handle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.SyncContextScreencapRequest)
  return target;
}

size_t SyncContextScreencapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.SyncContextScreencapRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string handle = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_handle());
    }

    // optional string image_handle = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_image_handle());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncContextScreencapRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncContextScreencapRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncContextScreencapRequest::GetClassData() const { return &_class_data_; }


void SyncContextScreencapRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncContextScreencapRequest*>(&to_msg);
  auto& from = static_cast<const SyncContextScreencapRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.SyncContextScreencapRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_handle(from._internal_handle());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_image_handle(from._internal_image_handle());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncContextScreencapRequest::CopyFrom(const SyncContextScreencapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.SyncContextScreencapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncContextScreencapRequest::IsInitialized() const {
  return true;
}

void SyncContextScreencapRequest::InternalSwap(SyncContextScreencapRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.handle_, lhs_arena,
      &other->_impl_.handle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.image_handle_, lhs_arena,
      &other->_impl_.image_handle_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncContextScreencapRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_2econtext_2eproto_getter, &descriptor_table_sync_2econtext_2eproto_once,
      file_level_metadata_sync_2econtext_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace maarpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::maarpc::SyncContextRunTaskRequest*
Arena::CreateMaybeMessage< ::maarpc::SyncContextRunTaskRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::SyncContextRunTaskRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::SyncContextRunRecognizerRequest*
Arena::CreateMaybeMessage< ::maarpc::SyncContextRunRecognizerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::SyncContextRunRecognizerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::SyncContextRunRecognizerResponse*
Arena::CreateMaybeMessage< ::maarpc::SyncContextRunRecognizerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::SyncContextRunRecognizerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::SyncContextRunActionRequest*
Arena::CreateMaybeMessage< ::maarpc::SyncContextRunActionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::SyncContextRunActionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::SyncContextClickRequest*
Arena::CreateMaybeMessage< ::maarpc::SyncContextClickRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::SyncContextClickRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::SyncContextSwipeRequest*
Arena::CreateMaybeMessage< ::maarpc::SyncContextSwipeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::SyncContextSwipeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::SyncContextKeyRequest*
Arena::CreateMaybeMessage< ::maarpc::SyncContextKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::SyncContextKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::SyncContextTouchRequest*
Arena::CreateMaybeMessage< ::maarpc::SyncContextTouchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::SyncContextTouchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::SyncContextScreencapRequest*
Arena::CreateMaybeMessage< ::maarpc::SyncContextScreencapRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::SyncContextScreencapRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
