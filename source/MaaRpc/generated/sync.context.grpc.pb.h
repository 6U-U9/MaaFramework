// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: sync.context.proto
#ifndef GRPC_sync_2econtext_2eproto__INCLUDED
#define GRPC_sync_2econtext_2eproto__INCLUDED

#include "sync.context.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace maarpc {

class SyncContext final {
 public:
  static constexpr char const* service_full_name() {
    return "maarpc.SyncContext";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status run_task(::grpc::ClientContext* context, const ::maarpc::SyncContextRunTaskRequest& request, ::maarpc::EmptyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>> Asyncrun_task(::grpc::ClientContext* context, const ::maarpc::SyncContextRunTaskRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>>(Asyncrun_taskRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>> PrepareAsyncrun_task(::grpc::ClientContext* context, const ::maarpc::SyncContextRunTaskRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>>(PrepareAsyncrun_taskRaw(context, request, cq));
    }
    virtual ::grpc::Status run_recognizer(::grpc::ClientContext* context, const ::maarpc::SyncContextRunRecognizerRequest& request, ::maarpc::SyncContextRunRecognizerResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::SyncContextRunRecognizerResponse>> Asyncrun_recognizer(::grpc::ClientContext* context, const ::maarpc::SyncContextRunRecognizerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::SyncContextRunRecognizerResponse>>(Asyncrun_recognizerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::SyncContextRunRecognizerResponse>> PrepareAsyncrun_recognizer(::grpc::ClientContext* context, const ::maarpc::SyncContextRunRecognizerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::SyncContextRunRecognizerResponse>>(PrepareAsyncrun_recognizerRaw(context, request, cq));
    }
    virtual ::grpc::Status run_action(::grpc::ClientContext* context, const ::maarpc::SyncContextRunActionRequest& request, ::maarpc::EmptyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>> Asyncrun_action(::grpc::ClientContext* context, const ::maarpc::SyncContextRunActionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>>(Asyncrun_actionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>> PrepareAsyncrun_action(::grpc::ClientContext* context, const ::maarpc::SyncContextRunActionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>>(PrepareAsyncrun_actionRaw(context, request, cq));
    }
    virtual ::grpc::Status click(::grpc::ClientContext* context, const ::maarpc::SyncContextClickRequest& request, ::maarpc::EmptyRequest* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>> Asyncclick(::grpc::ClientContext* context, const ::maarpc::SyncContextClickRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>>(AsyncclickRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>> PrepareAsyncclick(::grpc::ClientContext* context, const ::maarpc::SyncContextClickRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>>(PrepareAsyncclickRaw(context, request, cq));
    }
    virtual ::grpc::Status swipe(::grpc::ClientContext* context, const ::maarpc::SyncContextSwipeRequest& request, ::maarpc::EmptyRequest* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>> Asyncswipe(::grpc::ClientContext* context, const ::maarpc::SyncContextSwipeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>>(AsyncswipeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>> PrepareAsyncswipe(::grpc::ClientContext* context, const ::maarpc::SyncContextSwipeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>>(PrepareAsyncswipeRaw(context, request, cq));
    }
    virtual ::grpc::Status key(::grpc::ClientContext* context, const ::maarpc::SyncContextKeyRequest& request, ::maarpc::EmptyRequest* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>> Asynckey(::grpc::ClientContext* context, const ::maarpc::SyncContextKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>>(AsynckeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>> PrepareAsynckey(::grpc::ClientContext* context, const ::maarpc::SyncContextKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>>(PrepareAsynckeyRaw(context, request, cq));
    }
    virtual ::grpc::Status touch_down(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::maarpc::EmptyRequest* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>> Asynctouch_down(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>>(Asynctouch_downRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>> PrepareAsynctouch_down(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>>(PrepareAsynctouch_downRaw(context, request, cq));
    }
    virtual ::grpc::Status touch_move(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::maarpc::EmptyRequest* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>> Asynctouch_move(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>>(Asynctouch_moveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>> PrepareAsynctouch_move(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>>(PrepareAsynctouch_moveRaw(context, request, cq));
    }
    virtual ::grpc::Status touch_up(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::maarpc::EmptyRequest* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>> Asynctouch_up(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>>(Asynctouch_upRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>> PrepareAsynctouch_up(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>>(PrepareAsynctouch_upRaw(context, request, cq));
    }
    virtual ::grpc::Status screencap(::grpc::ClientContext* context, const ::maarpc::SyncContextScreencapRequest& request, ::maarpc::EmptyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>> Asyncscreencap(::grpc::ClientContext* context, const ::maarpc::SyncContextScreencapRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>>(AsyncscreencapRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>> PrepareAsyncscreencap(::grpc::ClientContext* context, const ::maarpc::SyncContextScreencapRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>>(PrepareAsyncscreencapRaw(context, request, cq));
    }
    virtual ::grpc::Status task_result(::grpc::ClientContext* context, const ::maarpc::HandleStringRequest& request, ::maarpc::StringResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StringResponse>> Asynctask_result(::grpc::ClientContext* context, const ::maarpc::HandleStringRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StringResponse>>(Asynctask_resultRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StringResponse>> PrepareAsynctask_result(::grpc::ClientContext* context, const ::maarpc::HandleStringRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StringResponse>>(PrepareAsynctask_resultRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void run_task(::grpc::ClientContext* context, const ::maarpc::SyncContextRunTaskRequest* request, ::maarpc::EmptyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void run_task(::grpc::ClientContext* context, const ::maarpc::SyncContextRunTaskRequest* request, ::maarpc::EmptyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void run_recognizer(::grpc::ClientContext* context, const ::maarpc::SyncContextRunRecognizerRequest* request, ::maarpc::SyncContextRunRecognizerResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void run_recognizer(::grpc::ClientContext* context, const ::maarpc::SyncContextRunRecognizerRequest* request, ::maarpc::SyncContextRunRecognizerResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void run_action(::grpc::ClientContext* context, const ::maarpc::SyncContextRunActionRequest* request, ::maarpc::EmptyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void run_action(::grpc::ClientContext* context, const ::maarpc::SyncContextRunActionRequest* request, ::maarpc::EmptyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void click(::grpc::ClientContext* context, const ::maarpc::SyncContextClickRequest* request, ::maarpc::EmptyRequest* response, std::function<void(::grpc::Status)>) = 0;
      virtual void click(::grpc::ClientContext* context, const ::maarpc::SyncContextClickRequest* request, ::maarpc::EmptyRequest* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void swipe(::grpc::ClientContext* context, const ::maarpc::SyncContextSwipeRequest* request, ::maarpc::EmptyRequest* response, std::function<void(::grpc::Status)>) = 0;
      virtual void swipe(::grpc::ClientContext* context, const ::maarpc::SyncContextSwipeRequest* request, ::maarpc::EmptyRequest* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void key(::grpc::ClientContext* context, const ::maarpc::SyncContextKeyRequest* request, ::maarpc::EmptyRequest* response, std::function<void(::grpc::Status)>) = 0;
      virtual void key(::grpc::ClientContext* context, const ::maarpc::SyncContextKeyRequest* request, ::maarpc::EmptyRequest* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void touch_down(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response, std::function<void(::grpc::Status)>) = 0;
      virtual void touch_down(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void touch_move(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response, std::function<void(::grpc::Status)>) = 0;
      virtual void touch_move(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void touch_up(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response, std::function<void(::grpc::Status)>) = 0;
      virtual void touch_up(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void screencap(::grpc::ClientContext* context, const ::maarpc::SyncContextScreencapRequest* request, ::maarpc::EmptyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void screencap(::grpc::ClientContext* context, const ::maarpc::SyncContextScreencapRequest* request, ::maarpc::EmptyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void task_result(::grpc::ClientContext* context, const ::maarpc::HandleStringRequest* request, ::maarpc::StringResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void task_result(::grpc::ClientContext* context, const ::maarpc::HandleStringRequest* request, ::maarpc::StringResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>* Asyncrun_taskRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextRunTaskRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>* PrepareAsyncrun_taskRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextRunTaskRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::SyncContextRunRecognizerResponse>* Asyncrun_recognizerRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextRunRecognizerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::SyncContextRunRecognizerResponse>* PrepareAsyncrun_recognizerRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextRunRecognizerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>* Asyncrun_actionRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextRunActionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>* PrepareAsyncrun_actionRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextRunActionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>* AsyncclickRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextClickRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>* PrepareAsyncclickRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextClickRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>* AsyncswipeRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextSwipeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>* PrepareAsyncswipeRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextSwipeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>* AsynckeyRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>* PrepareAsynckeyRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>* Asynctouch_downRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>* PrepareAsynctouch_downRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>* Asynctouch_moveRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>* PrepareAsynctouch_moveRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>* Asynctouch_upRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyRequest>* PrepareAsynctouch_upRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>* AsyncscreencapRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextScreencapRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>* PrepareAsyncscreencapRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextScreencapRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StringResponse>* Asynctask_resultRaw(::grpc::ClientContext* context, const ::maarpc::HandleStringRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StringResponse>* PrepareAsynctask_resultRaw(::grpc::ClientContext* context, const ::maarpc::HandleStringRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status run_task(::grpc::ClientContext* context, const ::maarpc::SyncContextRunTaskRequest& request, ::maarpc::EmptyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>> Asyncrun_task(::grpc::ClientContext* context, const ::maarpc::SyncContextRunTaskRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>>(Asyncrun_taskRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>> PrepareAsyncrun_task(::grpc::ClientContext* context, const ::maarpc::SyncContextRunTaskRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>>(PrepareAsyncrun_taskRaw(context, request, cq));
    }
    ::grpc::Status run_recognizer(::grpc::ClientContext* context, const ::maarpc::SyncContextRunRecognizerRequest& request, ::maarpc::SyncContextRunRecognizerResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::SyncContextRunRecognizerResponse>> Asyncrun_recognizer(::grpc::ClientContext* context, const ::maarpc::SyncContextRunRecognizerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::SyncContextRunRecognizerResponse>>(Asyncrun_recognizerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::SyncContextRunRecognizerResponse>> PrepareAsyncrun_recognizer(::grpc::ClientContext* context, const ::maarpc::SyncContextRunRecognizerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::SyncContextRunRecognizerResponse>>(PrepareAsyncrun_recognizerRaw(context, request, cq));
    }
    ::grpc::Status run_action(::grpc::ClientContext* context, const ::maarpc::SyncContextRunActionRequest& request, ::maarpc::EmptyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>> Asyncrun_action(::grpc::ClientContext* context, const ::maarpc::SyncContextRunActionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>>(Asyncrun_actionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>> PrepareAsyncrun_action(::grpc::ClientContext* context, const ::maarpc::SyncContextRunActionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>>(PrepareAsyncrun_actionRaw(context, request, cq));
    }
    ::grpc::Status click(::grpc::ClientContext* context, const ::maarpc::SyncContextClickRequest& request, ::maarpc::EmptyRequest* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>> Asyncclick(::grpc::ClientContext* context, const ::maarpc::SyncContextClickRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>>(AsyncclickRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>> PrepareAsyncclick(::grpc::ClientContext* context, const ::maarpc::SyncContextClickRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>>(PrepareAsyncclickRaw(context, request, cq));
    }
    ::grpc::Status swipe(::grpc::ClientContext* context, const ::maarpc::SyncContextSwipeRequest& request, ::maarpc::EmptyRequest* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>> Asyncswipe(::grpc::ClientContext* context, const ::maarpc::SyncContextSwipeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>>(AsyncswipeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>> PrepareAsyncswipe(::grpc::ClientContext* context, const ::maarpc::SyncContextSwipeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>>(PrepareAsyncswipeRaw(context, request, cq));
    }
    ::grpc::Status key(::grpc::ClientContext* context, const ::maarpc::SyncContextKeyRequest& request, ::maarpc::EmptyRequest* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>> Asynckey(::grpc::ClientContext* context, const ::maarpc::SyncContextKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>>(AsynckeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>> PrepareAsynckey(::grpc::ClientContext* context, const ::maarpc::SyncContextKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>>(PrepareAsynckeyRaw(context, request, cq));
    }
    ::grpc::Status touch_down(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::maarpc::EmptyRequest* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>> Asynctouch_down(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>>(Asynctouch_downRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>> PrepareAsynctouch_down(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>>(PrepareAsynctouch_downRaw(context, request, cq));
    }
    ::grpc::Status touch_move(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::maarpc::EmptyRequest* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>> Asynctouch_move(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>>(Asynctouch_moveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>> PrepareAsynctouch_move(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>>(PrepareAsynctouch_moveRaw(context, request, cq));
    }
    ::grpc::Status touch_up(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::maarpc::EmptyRequest* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>> Asynctouch_up(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>>(Asynctouch_upRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>> PrepareAsynctouch_up(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>>(PrepareAsynctouch_upRaw(context, request, cq));
    }
    ::grpc::Status screencap(::grpc::ClientContext* context, const ::maarpc::SyncContextScreencapRequest& request, ::maarpc::EmptyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>> Asyncscreencap(::grpc::ClientContext* context, const ::maarpc::SyncContextScreencapRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>>(AsyncscreencapRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>> PrepareAsyncscreencap(::grpc::ClientContext* context, const ::maarpc::SyncContextScreencapRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>>(PrepareAsyncscreencapRaw(context, request, cq));
    }
    ::grpc::Status task_result(::grpc::ClientContext* context, const ::maarpc::HandleStringRequest& request, ::maarpc::StringResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::StringResponse>> Asynctask_result(::grpc::ClientContext* context, const ::maarpc::HandleStringRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::StringResponse>>(Asynctask_resultRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::StringResponse>> PrepareAsynctask_result(::grpc::ClientContext* context, const ::maarpc::HandleStringRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::StringResponse>>(PrepareAsynctask_resultRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void run_task(::grpc::ClientContext* context, const ::maarpc::SyncContextRunTaskRequest* request, ::maarpc::EmptyResponse* response, std::function<void(::grpc::Status)>) override;
      void run_task(::grpc::ClientContext* context, const ::maarpc::SyncContextRunTaskRequest* request, ::maarpc::EmptyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void run_recognizer(::grpc::ClientContext* context, const ::maarpc::SyncContextRunRecognizerRequest* request, ::maarpc::SyncContextRunRecognizerResponse* response, std::function<void(::grpc::Status)>) override;
      void run_recognizer(::grpc::ClientContext* context, const ::maarpc::SyncContextRunRecognizerRequest* request, ::maarpc::SyncContextRunRecognizerResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void run_action(::grpc::ClientContext* context, const ::maarpc::SyncContextRunActionRequest* request, ::maarpc::EmptyResponse* response, std::function<void(::grpc::Status)>) override;
      void run_action(::grpc::ClientContext* context, const ::maarpc::SyncContextRunActionRequest* request, ::maarpc::EmptyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void click(::grpc::ClientContext* context, const ::maarpc::SyncContextClickRequest* request, ::maarpc::EmptyRequest* response, std::function<void(::grpc::Status)>) override;
      void click(::grpc::ClientContext* context, const ::maarpc::SyncContextClickRequest* request, ::maarpc::EmptyRequest* response, ::grpc::ClientUnaryReactor* reactor) override;
      void swipe(::grpc::ClientContext* context, const ::maarpc::SyncContextSwipeRequest* request, ::maarpc::EmptyRequest* response, std::function<void(::grpc::Status)>) override;
      void swipe(::grpc::ClientContext* context, const ::maarpc::SyncContextSwipeRequest* request, ::maarpc::EmptyRequest* response, ::grpc::ClientUnaryReactor* reactor) override;
      void key(::grpc::ClientContext* context, const ::maarpc::SyncContextKeyRequest* request, ::maarpc::EmptyRequest* response, std::function<void(::grpc::Status)>) override;
      void key(::grpc::ClientContext* context, const ::maarpc::SyncContextKeyRequest* request, ::maarpc::EmptyRequest* response, ::grpc::ClientUnaryReactor* reactor) override;
      void touch_down(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response, std::function<void(::grpc::Status)>) override;
      void touch_down(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response, ::grpc::ClientUnaryReactor* reactor) override;
      void touch_move(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response, std::function<void(::grpc::Status)>) override;
      void touch_move(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response, ::grpc::ClientUnaryReactor* reactor) override;
      void touch_up(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response, std::function<void(::grpc::Status)>) override;
      void touch_up(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response, ::grpc::ClientUnaryReactor* reactor) override;
      void screencap(::grpc::ClientContext* context, const ::maarpc::SyncContextScreencapRequest* request, ::maarpc::EmptyResponse* response, std::function<void(::grpc::Status)>) override;
      void screencap(::grpc::ClientContext* context, const ::maarpc::SyncContextScreencapRequest* request, ::maarpc::EmptyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void task_result(::grpc::ClientContext* context, const ::maarpc::HandleStringRequest* request, ::maarpc::StringResponse* response, std::function<void(::grpc::Status)>) override;
      void task_result(::grpc::ClientContext* context, const ::maarpc::HandleStringRequest* request, ::maarpc::StringResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>* Asyncrun_taskRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextRunTaskRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>* PrepareAsyncrun_taskRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextRunTaskRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::SyncContextRunRecognizerResponse>* Asyncrun_recognizerRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextRunRecognizerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::SyncContextRunRecognizerResponse>* PrepareAsyncrun_recognizerRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextRunRecognizerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>* Asyncrun_actionRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextRunActionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>* PrepareAsyncrun_actionRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextRunActionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>* AsyncclickRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextClickRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>* PrepareAsyncclickRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextClickRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>* AsyncswipeRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextSwipeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>* PrepareAsyncswipeRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextSwipeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>* AsynckeyRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>* PrepareAsynckeyRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>* Asynctouch_downRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>* PrepareAsynctouch_downRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>* Asynctouch_moveRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>* PrepareAsynctouch_moveRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>* Asynctouch_upRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyRequest>* PrepareAsynctouch_upRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextTouchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>* AsyncscreencapRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextScreencapRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>* PrepareAsyncscreencapRaw(::grpc::ClientContext* context, const ::maarpc::SyncContextScreencapRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::StringResponse>* Asynctask_resultRaw(::grpc::ClientContext* context, const ::maarpc::HandleStringRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::StringResponse>* PrepareAsynctask_resultRaw(::grpc::ClientContext* context, const ::maarpc::HandleStringRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_run_task_;
    const ::grpc::internal::RpcMethod rpcmethod_run_recognizer_;
    const ::grpc::internal::RpcMethod rpcmethod_run_action_;
    const ::grpc::internal::RpcMethod rpcmethod_click_;
    const ::grpc::internal::RpcMethod rpcmethod_swipe_;
    const ::grpc::internal::RpcMethod rpcmethod_key_;
    const ::grpc::internal::RpcMethod rpcmethod_touch_down_;
    const ::grpc::internal::RpcMethod rpcmethod_touch_move_;
    const ::grpc::internal::RpcMethod rpcmethod_touch_up_;
    const ::grpc::internal::RpcMethod rpcmethod_screencap_;
    const ::grpc::internal::RpcMethod rpcmethod_task_result_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status run_task(::grpc::ServerContext* context, const ::maarpc::SyncContextRunTaskRequest* request, ::maarpc::EmptyResponse* response);
    virtual ::grpc::Status run_recognizer(::grpc::ServerContext* context, const ::maarpc::SyncContextRunRecognizerRequest* request, ::maarpc::SyncContextRunRecognizerResponse* response);
    virtual ::grpc::Status run_action(::grpc::ServerContext* context, const ::maarpc::SyncContextRunActionRequest* request, ::maarpc::EmptyResponse* response);
    virtual ::grpc::Status click(::grpc::ServerContext* context, const ::maarpc::SyncContextClickRequest* request, ::maarpc::EmptyRequest* response);
    virtual ::grpc::Status swipe(::grpc::ServerContext* context, const ::maarpc::SyncContextSwipeRequest* request, ::maarpc::EmptyRequest* response);
    virtual ::grpc::Status key(::grpc::ServerContext* context, const ::maarpc::SyncContextKeyRequest* request, ::maarpc::EmptyRequest* response);
    virtual ::grpc::Status touch_down(::grpc::ServerContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response);
    virtual ::grpc::Status touch_move(::grpc::ServerContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response);
    virtual ::grpc::Status touch_up(::grpc::ServerContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response);
    virtual ::grpc::Status screencap(::grpc::ServerContext* context, const ::maarpc::SyncContextScreencapRequest* request, ::maarpc::EmptyResponse* response);
    virtual ::grpc::Status task_result(::grpc::ServerContext* context, const ::maarpc::HandleStringRequest* request, ::maarpc::StringResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_run_task : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_run_task() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_run_task() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status run_task(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunTaskRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestrun_task(::grpc::ServerContext* context, ::maarpc::SyncContextRunTaskRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::EmptyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_run_recognizer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_run_recognizer() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_run_recognizer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status run_recognizer(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunRecognizerRequest* /*request*/, ::maarpc::SyncContextRunRecognizerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestrun_recognizer(::grpc::ServerContext* context, ::maarpc::SyncContextRunRecognizerRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::SyncContextRunRecognizerResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_run_action : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_run_action() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_run_action() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status run_action(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunActionRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestrun_action(::grpc::ServerContext* context, ::maarpc::SyncContextRunActionRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::EmptyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_click : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_click() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_click() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status click(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextClickRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestclick(::grpc::ServerContext* context, ::maarpc::SyncContextClickRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::EmptyRequest>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_swipe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_swipe() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_swipe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status swipe(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextSwipeRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestswipe(::grpc::ServerContext* context, ::maarpc::SyncContextSwipeRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::EmptyRequest>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_key : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_key() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_key() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status key(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextKeyRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestkey(::grpc::ServerContext* context, ::maarpc::SyncContextKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::EmptyRequest>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_touch_down : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_touch_down() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_touch_down() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status touch_down(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requesttouch_down(::grpc::ServerContext* context, ::maarpc::SyncContextTouchRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::EmptyRequest>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_touch_move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_touch_move() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_touch_move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status touch_move(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requesttouch_move(::grpc::ServerContext* context, ::maarpc::SyncContextTouchRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::EmptyRequest>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_touch_up : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_touch_up() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_touch_up() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status touch_up(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requesttouch_up(::grpc::ServerContext* context, ::maarpc::SyncContextTouchRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::EmptyRequest>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_screencap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_screencap() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_screencap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status screencap(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextScreencapRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestscreencap(::grpc::ServerContext* context, ::maarpc::SyncContextScreencapRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::EmptyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_task_result : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_task_result() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_task_result() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status task_result(::grpc::ServerContext* /*context*/, const ::maarpc::HandleStringRequest* /*request*/, ::maarpc::StringResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requesttask_result(::grpc::ServerContext* context, ::maarpc::HandleStringRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::StringResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_run_task<WithAsyncMethod_run_recognizer<WithAsyncMethod_run_action<WithAsyncMethod_click<WithAsyncMethod_swipe<WithAsyncMethod_key<WithAsyncMethod_touch_down<WithAsyncMethod_touch_move<WithAsyncMethod_touch_up<WithAsyncMethod_screencap<WithAsyncMethod_task_result<Service > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_run_task : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_run_task() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextRunTaskRequest, ::maarpc::EmptyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::SyncContextRunTaskRequest* request, ::maarpc::EmptyResponse* response) { return this->run_task(context, request, response); }));}
    void SetMessageAllocatorFor_run_task(
        ::grpc::MessageAllocator< ::maarpc::SyncContextRunTaskRequest, ::maarpc::EmptyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextRunTaskRequest, ::maarpc::EmptyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_run_task() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status run_task(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunTaskRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* run_task(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::SyncContextRunTaskRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_run_recognizer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_run_recognizer() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextRunRecognizerRequest, ::maarpc::SyncContextRunRecognizerResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::SyncContextRunRecognizerRequest* request, ::maarpc::SyncContextRunRecognizerResponse* response) { return this->run_recognizer(context, request, response); }));}
    void SetMessageAllocatorFor_run_recognizer(
        ::grpc::MessageAllocator< ::maarpc::SyncContextRunRecognizerRequest, ::maarpc::SyncContextRunRecognizerResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextRunRecognizerRequest, ::maarpc::SyncContextRunRecognizerResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_run_recognizer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status run_recognizer(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunRecognizerRequest* /*request*/, ::maarpc::SyncContextRunRecognizerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* run_recognizer(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::SyncContextRunRecognizerRequest* /*request*/, ::maarpc::SyncContextRunRecognizerResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_run_action : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_run_action() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextRunActionRequest, ::maarpc::EmptyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::SyncContextRunActionRequest* request, ::maarpc::EmptyResponse* response) { return this->run_action(context, request, response); }));}
    void SetMessageAllocatorFor_run_action(
        ::grpc::MessageAllocator< ::maarpc::SyncContextRunActionRequest, ::maarpc::EmptyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextRunActionRequest, ::maarpc::EmptyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_run_action() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status run_action(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunActionRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* run_action(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::SyncContextRunActionRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_click : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_click() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextClickRequest, ::maarpc::EmptyRequest>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::SyncContextClickRequest* request, ::maarpc::EmptyRequest* response) { return this->click(context, request, response); }));}
    void SetMessageAllocatorFor_click(
        ::grpc::MessageAllocator< ::maarpc::SyncContextClickRequest, ::maarpc::EmptyRequest>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextClickRequest, ::maarpc::EmptyRequest>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_click() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status click(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextClickRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* click(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::SyncContextClickRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_swipe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_swipe() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextSwipeRequest, ::maarpc::EmptyRequest>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::SyncContextSwipeRequest* request, ::maarpc::EmptyRequest* response) { return this->swipe(context, request, response); }));}
    void SetMessageAllocatorFor_swipe(
        ::grpc::MessageAllocator< ::maarpc::SyncContextSwipeRequest, ::maarpc::EmptyRequest>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextSwipeRequest, ::maarpc::EmptyRequest>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_swipe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status swipe(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextSwipeRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* swipe(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::SyncContextSwipeRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_key : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_key() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextKeyRequest, ::maarpc::EmptyRequest>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::SyncContextKeyRequest* request, ::maarpc::EmptyRequest* response) { return this->key(context, request, response); }));}
    void SetMessageAllocatorFor_key(
        ::grpc::MessageAllocator< ::maarpc::SyncContextKeyRequest, ::maarpc::EmptyRequest>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextKeyRequest, ::maarpc::EmptyRequest>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_key() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status key(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextKeyRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* key(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::SyncContextKeyRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_touch_down : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_touch_down() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextTouchRequest, ::maarpc::EmptyRequest>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response) { return this->touch_down(context, request, response); }));}
    void SetMessageAllocatorFor_touch_down(
        ::grpc::MessageAllocator< ::maarpc::SyncContextTouchRequest, ::maarpc::EmptyRequest>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextTouchRequest, ::maarpc::EmptyRequest>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_touch_down() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status touch_down(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* touch_down(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_touch_move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_touch_move() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextTouchRequest, ::maarpc::EmptyRequest>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response) { return this->touch_move(context, request, response); }));}
    void SetMessageAllocatorFor_touch_move(
        ::grpc::MessageAllocator< ::maarpc::SyncContextTouchRequest, ::maarpc::EmptyRequest>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextTouchRequest, ::maarpc::EmptyRequest>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_touch_move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status touch_move(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* touch_move(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_touch_up : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_touch_up() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextTouchRequest, ::maarpc::EmptyRequest>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::SyncContextTouchRequest* request, ::maarpc::EmptyRequest* response) { return this->touch_up(context, request, response); }));}
    void SetMessageAllocatorFor_touch_up(
        ::grpc::MessageAllocator< ::maarpc::SyncContextTouchRequest, ::maarpc::EmptyRequest>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextTouchRequest, ::maarpc::EmptyRequest>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_touch_up() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status touch_up(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* touch_up(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_screencap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_screencap() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextScreencapRequest, ::maarpc::EmptyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::SyncContextScreencapRequest* request, ::maarpc::EmptyResponse* response) { return this->screencap(context, request, response); }));}
    void SetMessageAllocatorFor_screencap(
        ::grpc::MessageAllocator< ::maarpc::SyncContextScreencapRequest, ::maarpc::EmptyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::SyncContextScreencapRequest, ::maarpc::EmptyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_screencap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status screencap(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextScreencapRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* screencap(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::SyncContextScreencapRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_task_result : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_task_result() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleStringRequest, ::maarpc::StringResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::HandleStringRequest* request, ::maarpc::StringResponse* response) { return this->task_result(context, request, response); }));}
    void SetMessageAllocatorFor_task_result(
        ::grpc::MessageAllocator< ::maarpc::HandleStringRequest, ::maarpc::StringResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleStringRequest, ::maarpc::StringResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_task_result() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status task_result(::grpc::ServerContext* /*context*/, const ::maarpc::HandleStringRequest* /*request*/, ::maarpc::StringResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* task_result(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::HandleStringRequest* /*request*/, ::maarpc::StringResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_run_task<WithCallbackMethod_run_recognizer<WithCallbackMethod_run_action<WithCallbackMethod_click<WithCallbackMethod_swipe<WithCallbackMethod_key<WithCallbackMethod_touch_down<WithCallbackMethod_touch_move<WithCallbackMethod_touch_up<WithCallbackMethod_screencap<WithCallbackMethod_task_result<Service > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_run_task : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_run_task() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_run_task() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status run_task(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunTaskRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_run_recognizer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_run_recognizer() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_run_recognizer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status run_recognizer(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunRecognizerRequest* /*request*/, ::maarpc::SyncContextRunRecognizerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_run_action : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_run_action() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_run_action() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status run_action(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunActionRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_click : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_click() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_click() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status click(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextClickRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_swipe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_swipe() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_swipe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status swipe(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextSwipeRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_key : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_key() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_key() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status key(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextKeyRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_touch_down : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_touch_down() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_touch_down() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status touch_down(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_touch_move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_touch_move() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_touch_move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status touch_move(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_touch_up : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_touch_up() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_touch_up() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status touch_up(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_screencap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_screencap() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_screencap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status screencap(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextScreencapRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_task_result : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_task_result() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_task_result() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status task_result(::grpc::ServerContext* /*context*/, const ::maarpc::HandleStringRequest* /*request*/, ::maarpc::StringResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_run_task : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_run_task() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_run_task() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status run_task(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunTaskRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestrun_task(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_run_recognizer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_run_recognizer() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_run_recognizer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status run_recognizer(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunRecognizerRequest* /*request*/, ::maarpc::SyncContextRunRecognizerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestrun_recognizer(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_run_action : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_run_action() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_run_action() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status run_action(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunActionRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestrun_action(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_click : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_click() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_click() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status click(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextClickRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestclick(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_swipe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_swipe() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_swipe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status swipe(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextSwipeRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestswipe(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_key : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_key() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_key() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status key(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextKeyRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestkey(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_touch_down : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_touch_down() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_touch_down() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status touch_down(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requesttouch_down(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_touch_move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_touch_move() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_touch_move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status touch_move(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requesttouch_move(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_touch_up : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_touch_up() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_touch_up() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status touch_up(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requesttouch_up(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_screencap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_screencap() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_screencap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status screencap(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextScreencapRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestscreencap(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_task_result : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_task_result() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_task_result() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status task_result(::grpc::ServerContext* /*context*/, const ::maarpc::HandleStringRequest* /*request*/, ::maarpc::StringResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requesttask_result(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_run_task : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_run_task() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->run_task(context, request, response); }));
    }
    ~WithRawCallbackMethod_run_task() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status run_task(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunTaskRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* run_task(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_run_recognizer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_run_recognizer() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->run_recognizer(context, request, response); }));
    }
    ~WithRawCallbackMethod_run_recognizer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status run_recognizer(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunRecognizerRequest* /*request*/, ::maarpc::SyncContextRunRecognizerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* run_recognizer(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_run_action : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_run_action() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->run_action(context, request, response); }));
    }
    ~WithRawCallbackMethod_run_action() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status run_action(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunActionRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* run_action(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_click : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_click() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->click(context, request, response); }));
    }
    ~WithRawCallbackMethod_click() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status click(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextClickRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* click(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_swipe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_swipe() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->swipe(context, request, response); }));
    }
    ~WithRawCallbackMethod_swipe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status swipe(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextSwipeRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* swipe(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_key : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_key() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->key(context, request, response); }));
    }
    ~WithRawCallbackMethod_key() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status key(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextKeyRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* key(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_touch_down : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_touch_down() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->touch_down(context, request, response); }));
    }
    ~WithRawCallbackMethod_touch_down() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status touch_down(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* touch_down(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_touch_move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_touch_move() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->touch_move(context, request, response); }));
    }
    ~WithRawCallbackMethod_touch_move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status touch_move(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* touch_move(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_touch_up : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_touch_up() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->touch_up(context, request, response); }));
    }
    ~WithRawCallbackMethod_touch_up() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status touch_up(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* touch_up(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_screencap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_screencap() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->screencap(context, request, response); }));
    }
    ~WithRawCallbackMethod_screencap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status screencap(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextScreencapRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* screencap(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_task_result : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_task_result() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->task_result(context, request, response); }));
    }
    ~WithRawCallbackMethod_task_result() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status task_result(::grpc::ServerContext* /*context*/, const ::maarpc::HandleStringRequest* /*request*/, ::maarpc::StringResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* task_result(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_run_task : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_run_task() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::SyncContextRunTaskRequest, ::maarpc::EmptyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::SyncContextRunTaskRequest, ::maarpc::EmptyResponse>* streamer) {
                       return this->Streamedrun_task(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_run_task() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status run_task(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunTaskRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedrun_task(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::SyncContextRunTaskRequest,::maarpc::EmptyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_run_recognizer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_run_recognizer() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::SyncContextRunRecognizerRequest, ::maarpc::SyncContextRunRecognizerResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::SyncContextRunRecognizerRequest, ::maarpc::SyncContextRunRecognizerResponse>* streamer) {
                       return this->Streamedrun_recognizer(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_run_recognizer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status run_recognizer(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunRecognizerRequest* /*request*/, ::maarpc::SyncContextRunRecognizerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedrun_recognizer(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::SyncContextRunRecognizerRequest,::maarpc::SyncContextRunRecognizerResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_run_action : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_run_action() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::SyncContextRunActionRequest, ::maarpc::EmptyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::SyncContextRunActionRequest, ::maarpc::EmptyResponse>* streamer) {
                       return this->Streamedrun_action(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_run_action() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status run_action(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextRunActionRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedrun_action(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::SyncContextRunActionRequest,::maarpc::EmptyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_click : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_click() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::SyncContextClickRequest, ::maarpc::EmptyRequest>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::SyncContextClickRequest, ::maarpc::EmptyRequest>* streamer) {
                       return this->Streamedclick(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_click() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status click(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextClickRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedclick(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::SyncContextClickRequest,::maarpc::EmptyRequest>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_swipe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_swipe() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::SyncContextSwipeRequest, ::maarpc::EmptyRequest>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::SyncContextSwipeRequest, ::maarpc::EmptyRequest>* streamer) {
                       return this->Streamedswipe(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_swipe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status swipe(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextSwipeRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedswipe(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::SyncContextSwipeRequest,::maarpc::EmptyRequest>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_key : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_key() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::SyncContextKeyRequest, ::maarpc::EmptyRequest>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::SyncContextKeyRequest, ::maarpc::EmptyRequest>* streamer) {
                       return this->Streamedkey(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_key() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status key(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextKeyRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedkey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::SyncContextKeyRequest,::maarpc::EmptyRequest>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_touch_down : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_touch_down() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::SyncContextTouchRequest, ::maarpc::EmptyRequest>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::SyncContextTouchRequest, ::maarpc::EmptyRequest>* streamer) {
                       return this->Streamedtouch_down(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_touch_down() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status touch_down(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedtouch_down(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::SyncContextTouchRequest,::maarpc::EmptyRequest>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_touch_move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_touch_move() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::SyncContextTouchRequest, ::maarpc::EmptyRequest>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::SyncContextTouchRequest, ::maarpc::EmptyRequest>* streamer) {
                       return this->Streamedtouch_move(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_touch_move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status touch_move(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedtouch_move(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::SyncContextTouchRequest,::maarpc::EmptyRequest>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_touch_up : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_touch_up() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::SyncContextTouchRequest, ::maarpc::EmptyRequest>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::SyncContextTouchRequest, ::maarpc::EmptyRequest>* streamer) {
                       return this->Streamedtouch_up(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_touch_up() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status touch_up(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextTouchRequest* /*request*/, ::maarpc::EmptyRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedtouch_up(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::SyncContextTouchRequest,::maarpc::EmptyRequest>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_screencap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_screencap() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::SyncContextScreencapRequest, ::maarpc::EmptyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::SyncContextScreencapRequest, ::maarpc::EmptyResponse>* streamer) {
                       return this->Streamedscreencap(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_screencap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status screencap(::grpc::ServerContext* /*context*/, const ::maarpc::SyncContextScreencapRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedscreencap(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::SyncContextScreencapRequest,::maarpc::EmptyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_task_result : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_task_result() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::HandleStringRequest, ::maarpc::StringResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::HandleStringRequest, ::maarpc::StringResponse>* streamer) {
                       return this->Streamedtask_result(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_task_result() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status task_result(::grpc::ServerContext* /*context*/, const ::maarpc::HandleStringRequest* /*request*/, ::maarpc::StringResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedtask_result(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::HandleStringRequest,::maarpc::StringResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_run_task<WithStreamedUnaryMethod_run_recognizer<WithStreamedUnaryMethod_run_action<WithStreamedUnaryMethod_click<WithStreamedUnaryMethod_swipe<WithStreamedUnaryMethod_key<WithStreamedUnaryMethod_touch_down<WithStreamedUnaryMethod_touch_move<WithStreamedUnaryMethod_touch_up<WithStreamedUnaryMethod_screencap<WithStreamedUnaryMethod_task_result<Service > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_run_task<WithStreamedUnaryMethod_run_recognizer<WithStreamedUnaryMethod_run_action<WithStreamedUnaryMethod_click<WithStreamedUnaryMethod_swipe<WithStreamedUnaryMethod_key<WithStreamedUnaryMethod_touch_down<WithStreamedUnaryMethod_touch_move<WithStreamedUnaryMethod_touch_up<WithStreamedUnaryMethod_screencap<WithStreamedUnaryMethod_task_result<Service > > > > > > > > > > > StreamedService;
};

}  // namespace maarpc


#endif  // GRPC_sync_2econtext_2eproto__INCLUDED
