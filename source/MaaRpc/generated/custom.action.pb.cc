// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: custom.action.proto

#include "custom.action.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace maarpc {
PROTOBUF_CONSTEXPR CustomActionInit::CustomActionInit(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.act_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct CustomActionInitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomActionInitDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomActionInitDefaultTypeInternal() {}
  union {
    CustomActionInit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomActionInitDefaultTypeInternal _CustomActionInit_default_instance_;
PROTOBUF_CONSTEXPR CustomActionSubmit::CustomActionSubmit(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.cmd_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ok_)*/false} {}
struct CustomActionSubmitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomActionSubmitDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomActionSubmitDefaultTypeInternal() {}
  union {
    CustomActionSubmit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomActionSubmitDefaultTypeInternal _CustomActionSubmit_default_instance_;
PROTOBUF_CONSTEXPR CustomActionRequest::CustomActionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.payload_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct CustomActionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomActionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomActionRequestDefaultTypeInternal() {}
  union {
    CustomActionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomActionRequestDefaultTypeInternal _CustomActionRequest_default_instance_;
PROTOBUF_CONSTEXPR CustomActionRunParam::CustomActionRunParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.context_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.task_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.param_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.detail_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.box_)*/nullptr} {}
struct CustomActionRunParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomActionRunParamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomActionRunParamDefaultTypeInternal() {}
  union {
    CustomActionRunParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomActionRunParamDefaultTypeInternal _CustomActionRunParam_default_instance_;
PROTOBUF_CONSTEXPR CustomActionResponse::CustomActionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.act_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.cmd_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.command_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct CustomActionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomActionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomActionResponseDefaultTypeInternal() {}
  union {
    CustomActionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomActionResponseDefaultTypeInternal _CustomActionResponse_default_instance_;
}  // namespace maarpc
static ::_pb::Metadata file_level_metadata_custom_2eaction_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_custom_2eaction_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_custom_2eaction_2eproto = nullptr;

const uint32_t TableStruct_custom_2eaction_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionInit, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionInit, _impl_.handle_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionInit, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionInit, _impl_.act_id_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionSubmit, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionSubmit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionSubmit, _impl_.handle_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionSubmit, _impl_.cmd_id_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionSubmit, _impl_.ok_),
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionRequest, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionRequest, _impl_.payload_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionRunParam, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionRunParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionRunParam, _impl_.context_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionRunParam, _impl_.task_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionRunParam, _impl_.param_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionRunParam, _impl_.box_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionRunParam, _impl_.detail_),
  0,
  1,
  2,
  4,
  3,
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionResponse, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionResponse, _impl_.act_id_),
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionResponse, _impl_.cmd_id_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::maarpc::CustomActionResponse, _impl_.command_),
  0,
  1,
  ~0u,
  ~0u,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, -1, sizeof(::maarpc::CustomActionInit)},
  { 12, 21, -1, sizeof(::maarpc::CustomActionSubmit)},
  { 24, -1, -1, sizeof(::maarpc::CustomActionRequest)},
  { 33, 44, -1, sizeof(::maarpc::CustomActionRunParam)},
  { 49, 60, -1, sizeof(::maarpc::CustomActionResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::maarpc::_CustomActionInit_default_instance_._instance,
  &::maarpc::_CustomActionSubmit_default_instance_._instance,
  &::maarpc::_CustomActionRequest_default_instance_._instance,
  &::maarpc::_CustomActionRunParam_default_instance_._instance,
  &::maarpc::_CustomActionResponse_default_instance_._instance,
};

const char descriptor_table_protodef_custom_2eaction_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023custom.action.proto\022\006maarpc\032\013types.pro"
  "to\"n\n\020CustomActionInit\022\023\n\006handle\030\001 \001(\tH\000"
  "\210\001\001\022\021\n\004name\030\002 \001(\tH\001\210\001\001\022\023\n\006act_id\030\003 \001(\tH\002"
  "\210\001\001B\t\n\007_handleB\007\n\005_nameB\t\n\007_act_id\"l\n\022Cu"
  "stomActionSubmit\022\023\n\006handle\030\001 \001(\tH\000\210\001\001\022\023\n"
  "\006cmd_id\030\002 \001(\tH\001\210\001\001\022\017\n\002ok\030\003 \001(\010H\002\210\001\001B\t\n\007_"
  "handleB\t\n\007_cmd_idB\005\n\003_ok\"x\n\023CustomAction"
  "Request\022(\n\004init\030\001 \001(\0132\030.maarpc.CustomAct"
  "ionInitH\000\022,\n\006submit\030\002 \001(\0132\032.maarpc.Custo"
  "mActionSubmitH\000B\t\n\007payload\"\272\001\n\024CustomAct"
  "ionRunParam\022\024\n\007context\030\001 \001(\tH\000\210\001\001\022\021\n\004tas"
  "k\030\002 \001(\tH\001\210\001\001\022\022\n\005param\030\003 \001(\tH\002\210\001\001\022\036\n\003box\030"
  "\004 \001(\0132\014.maarpc.RectH\003\210\001\001\022\023\n\006detail\030\005 \001(\t"
  "H\004\210\001\001B\n\n\010_contextB\007\n\005_taskB\010\n\006_paramB\006\n\004"
  "_boxB\t\n\007_detail\"\236\001\n\024CustomActionResponse"
  "\022\023\n\006act_id\030\001 \001(\tH\001\210\001\001\022\023\n\006cmd_id\030\002 \001(\tH\002\210"
  "\001\001\022+\n\003run\030e \001(\0132\034.maarpc.CustomActionRun"
  "ParamH\000\022\016\n\004stop\030f \001(\010H\000B\t\n\007commandB\t\n\007_a"
  "ct_idB\t\n\007_cmd_idb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_custom_2eaction_2eproto_deps[1] = {
  &::descriptor_table_types_2eproto,
};
static ::_pbi::once_flag descriptor_table_custom_2eaction_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_custom_2eaction_2eproto = {
    false, false, 744, descriptor_table_protodef_custom_2eaction_2eproto,
    "custom.action.proto",
    &descriptor_table_custom_2eaction_2eproto_once, descriptor_table_custom_2eaction_2eproto_deps, 1, 5,
    schemas, file_default_instances, TableStruct_custom_2eaction_2eproto::offsets,
    file_level_metadata_custom_2eaction_2eproto, file_level_enum_descriptors_custom_2eaction_2eproto,
    file_level_service_descriptors_custom_2eaction_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_custom_2eaction_2eproto_getter() {
  return &descriptor_table_custom_2eaction_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_custom_2eaction_2eproto(&descriptor_table_custom_2eaction_2eproto);
namespace maarpc {

// ===================================================================

class CustomActionInit::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomActionInit>()._impl_._has_bits_);
  static void set_has_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_act_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CustomActionInit::CustomActionInit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.CustomActionInit)
}
CustomActionInit::CustomActionInit(const CustomActionInit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomActionInit* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.act_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_handle()) {
    _this->_impl_.handle_.Set(from._internal_handle(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.act_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.act_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_act_id()) {
    _this->_impl_.act_id_.Set(from._internal_act_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.CustomActionInit)
}

inline void CustomActionInit::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.act_id_){}
  };
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.act_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.act_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CustomActionInit::~CustomActionInit() {
  // @@protoc_insertion_point(destructor:maarpc.CustomActionInit)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomActionInit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.handle_.Destroy();
  _impl_.name_.Destroy();
  _impl_.act_id_.Destroy();
}

void CustomActionInit::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomActionInit::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.CustomActionInit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.handle_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.act_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomActionInit::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomActionInit.handle"));
        } else
          goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomActionInit.name"));
        } else
          goto handle_unusual;
        continue;
      // optional string act_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_act_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomActionInit.act_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomActionInit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.CustomActionInit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string handle = 1;
  if (_internal_has_handle()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_handle().data(), static_cast<int>(this->_internal_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomActionInit.handle");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_handle(), target);
  }

  // optional string name = 2;
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomActionInit.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // optional string act_id = 3;
  if (_internal_has_act_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_act_id().data(), static_cast<int>(this->_internal_act_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomActionInit.act_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_act_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.CustomActionInit)
  return target;
}

size_t CustomActionInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.CustomActionInit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string handle = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_handle());
    }

    // optional string name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string act_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_act_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomActionInit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomActionInit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomActionInit::GetClassData() const { return &_class_data_; }


void CustomActionInit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomActionInit*>(&to_msg);
  auto& from = static_cast<const CustomActionInit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.CustomActionInit)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_handle(from._internal_handle());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_act_id(from._internal_act_id());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomActionInit::CopyFrom(const CustomActionInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.CustomActionInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomActionInit::IsInitialized() const {
  return true;
}

void CustomActionInit::InternalSwap(CustomActionInit* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.handle_, lhs_arena,
      &other->_impl_.handle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.act_id_, lhs_arena,
      &other->_impl_.act_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomActionInit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_custom_2eaction_2eproto_getter, &descriptor_table_custom_2eaction_2eproto_once,
      file_level_metadata_custom_2eaction_2eproto[0]);
}

// ===================================================================

class CustomActionSubmit::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomActionSubmit>()._impl_._has_bits_);
  static void set_has_handle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_cmd_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ok(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CustomActionSubmit::CustomActionSubmit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.CustomActionSubmit)
}
CustomActionSubmit::CustomActionSubmit(const CustomActionSubmit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomActionSubmit* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.cmd_id_){}
    , decltype(_impl_.ok_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_handle()) {
    _this->_impl_.handle_.Set(from._internal_handle(), 
      _this->GetArenaForAllocation());
  }
  _impl_.cmd_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cmd_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_cmd_id()) {
    _this->_impl_.cmd_id_.Set(from._internal_cmd_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.ok_ = from._impl_.ok_;
  // @@protoc_insertion_point(copy_constructor:maarpc.CustomActionSubmit)
}

inline void CustomActionSubmit::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.handle_){}
    , decltype(_impl_.cmd_id_){}
    , decltype(_impl_.ok_){false}
  };
  _impl_.handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.cmd_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cmd_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CustomActionSubmit::~CustomActionSubmit() {
  // @@protoc_insertion_point(destructor:maarpc.CustomActionSubmit)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomActionSubmit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.handle_.Destroy();
  _impl_.cmd_id_.Destroy();
}

void CustomActionSubmit::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomActionSubmit::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.CustomActionSubmit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.handle_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.cmd_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.ok_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomActionSubmit::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomActionSubmit.handle"));
        } else
          goto handle_unusual;
        continue;
      // optional string cmd_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_cmd_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomActionSubmit.cmd_id"));
        } else
          goto handle_unusual;
        continue;
      // optional bool ok = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_ok(&has_bits);
          _impl_.ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomActionSubmit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.CustomActionSubmit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string handle = 1;
  if (_internal_has_handle()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_handle().data(), static_cast<int>(this->_internal_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomActionSubmit.handle");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_handle(), target);
  }

  // optional string cmd_id = 2;
  if (_internal_has_cmd_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cmd_id().data(), static_cast<int>(this->_internal_cmd_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomActionSubmit.cmd_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_cmd_id(), target);
  }

  // optional bool ok = 3;
  if (_internal_has_ok()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.CustomActionSubmit)
  return target;
}

size_t CustomActionSubmit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.CustomActionSubmit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string handle = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_handle());
    }

    // optional string cmd_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_cmd_id());
    }

    // optional bool ok = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomActionSubmit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomActionSubmit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomActionSubmit::GetClassData() const { return &_class_data_; }


void CustomActionSubmit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomActionSubmit*>(&to_msg);
  auto& from = static_cast<const CustomActionSubmit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.CustomActionSubmit)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_handle(from._internal_handle());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_cmd_id(from._internal_cmd_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.ok_ = from._impl_.ok_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomActionSubmit::CopyFrom(const CustomActionSubmit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.CustomActionSubmit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomActionSubmit::IsInitialized() const {
  return true;
}

void CustomActionSubmit::InternalSwap(CustomActionSubmit* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.handle_, lhs_arena,
      &other->_impl_.handle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.cmd_id_, lhs_arena,
      &other->_impl_.cmd_id_, rhs_arena
  );
  swap(_impl_.ok_, other->_impl_.ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomActionSubmit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_custom_2eaction_2eproto_getter, &descriptor_table_custom_2eaction_2eproto_once,
      file_level_metadata_custom_2eaction_2eproto[1]);
}

// ===================================================================

class CustomActionRequest::_Internal {
 public:
  static const ::maarpc::CustomActionInit& init(const CustomActionRequest* msg);
  static const ::maarpc::CustomActionSubmit& submit(const CustomActionRequest* msg);
};

const ::maarpc::CustomActionInit&
CustomActionRequest::_Internal::init(const CustomActionRequest* msg) {
  return *msg->_impl_.payload_.init_;
}
const ::maarpc::CustomActionSubmit&
CustomActionRequest::_Internal::submit(const CustomActionRequest* msg) {
  return *msg->_impl_.payload_.submit_;
}
void CustomActionRequest::set_allocated_init(::maarpc::CustomActionInit* init) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (init) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(init);
    if (message_arena != submessage_arena) {
      init = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, init, submessage_arena);
    }
    set_has_init();
    _impl_.payload_.init_ = init;
  }
  // @@protoc_insertion_point(field_set_allocated:maarpc.CustomActionRequest.init)
}
void CustomActionRequest::set_allocated_submit(::maarpc::CustomActionSubmit* submit) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (submit) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(submit);
    if (message_arena != submessage_arena) {
      submit = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, submit, submessage_arena);
    }
    set_has_submit();
    _impl_.payload_.submit_ = submit;
  }
  // @@protoc_insertion_point(field_set_allocated:maarpc.CustomActionRequest.submit)
}
CustomActionRequest::CustomActionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.CustomActionRequest)
}
CustomActionRequest::CustomActionRequest(const CustomActionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomActionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kInit: {
      _this->_internal_mutable_init()->::maarpc::CustomActionInit::MergeFrom(
          from._internal_init());
      break;
    }
    case kSubmit: {
      _this->_internal_mutable_submit()->::maarpc::CustomActionSubmit::MergeFrom(
          from._internal_submit());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.CustomActionRequest)
}

inline void CustomActionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_payload();
}

CustomActionRequest::~CustomActionRequest() {
  // @@protoc_insertion_point(destructor:maarpc.CustomActionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomActionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
}

void CustomActionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomActionRequest::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:maarpc.CustomActionRequest)
  switch (payload_case()) {
    case kInit: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.init_;
      }
      break;
    }
    case kSubmit: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.submit_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


void CustomActionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.CustomActionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomActionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .maarpc.CustomActionInit init = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_init(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .maarpc.CustomActionSubmit submit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_submit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomActionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.CustomActionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .maarpc.CustomActionInit init = 1;
  if (_internal_has_init()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::init(this),
        _Internal::init(this).GetCachedSize(), target, stream);
  }

  // .maarpc.CustomActionSubmit submit = 2;
  if (_internal_has_submit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::submit(this),
        _Internal::submit(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.CustomActionRequest)
  return target;
}

size_t CustomActionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.CustomActionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (payload_case()) {
    // .maarpc.CustomActionInit init = 1;
    case kInit: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.init_);
      break;
    }
    // .maarpc.CustomActionSubmit submit = 2;
    case kSubmit: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.submit_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomActionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomActionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomActionRequest::GetClassData() const { return &_class_data_; }


void CustomActionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomActionRequest*>(&to_msg);
  auto& from = static_cast<const CustomActionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.CustomActionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kInit: {
      _this->_internal_mutable_init()->::maarpc::CustomActionInit::MergeFrom(
          from._internal_init());
      break;
    }
    case kSubmit: {
      _this->_internal_mutable_submit()->::maarpc::CustomActionSubmit::MergeFrom(
          from._internal_submit());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomActionRequest::CopyFrom(const CustomActionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.CustomActionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomActionRequest::IsInitialized() const {
  return true;
}

void CustomActionRequest::InternalSwap(CustomActionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomActionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_custom_2eaction_2eproto_getter, &descriptor_table_custom_2eaction_2eproto_once,
      file_level_metadata_custom_2eaction_2eproto[2]);
}

// ===================================================================

class CustomActionRunParam::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomActionRunParam>()._impl_._has_bits_);
  static void set_has_context(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_task(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_param(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::maarpc::Rect& box(const CustomActionRunParam* msg);
  static void set_has_box(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_detail(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::maarpc::Rect&
CustomActionRunParam::_Internal::box(const CustomActionRunParam* msg) {
  return *msg->_impl_.box_;
}
void CustomActionRunParam::clear_box() {
  if (_impl_.box_ != nullptr) _impl_.box_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
CustomActionRunParam::CustomActionRunParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.CustomActionRunParam)
}
CustomActionRunParam::CustomActionRunParam(const CustomActionRunParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomActionRunParam* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.context_){}
    , decltype(_impl_.task_){}
    , decltype(_impl_.param_){}
    , decltype(_impl_.detail_){}
    , decltype(_impl_.box_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.context_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.context_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_context()) {
    _this->_impl_.context_.Set(from._internal_context(), 
      _this->GetArenaForAllocation());
  }
  _impl_.task_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.task_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_task()) {
    _this->_impl_.task_.Set(from._internal_task(), 
      _this->GetArenaForAllocation());
  }
  _impl_.param_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.param_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_param()) {
    _this->_impl_.param_.Set(from._internal_param(), 
      _this->GetArenaForAllocation());
  }
  _impl_.detail_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.detail_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_detail()) {
    _this->_impl_.detail_.Set(from._internal_detail(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_box()) {
    _this->_impl_.box_ = new ::maarpc::Rect(*from._impl_.box_);
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.CustomActionRunParam)
}

inline void CustomActionRunParam::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.context_){}
    , decltype(_impl_.task_){}
    , decltype(_impl_.param_){}
    , decltype(_impl_.detail_){}
    , decltype(_impl_.box_){nullptr}
  };
  _impl_.context_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.context_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.task_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.task_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.param_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.param_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.detail_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.detail_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CustomActionRunParam::~CustomActionRunParam() {
  // @@protoc_insertion_point(destructor:maarpc.CustomActionRunParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomActionRunParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.context_.Destroy();
  _impl_.task_.Destroy();
  _impl_.param_.Destroy();
  _impl_.detail_.Destroy();
  if (this != internal_default_instance()) delete _impl_.box_;
}

void CustomActionRunParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomActionRunParam::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.CustomActionRunParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.context_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.task_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.param_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.detail_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.box_ != nullptr);
      _impl_.box_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomActionRunParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string context = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_context();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomActionRunParam.context"));
        } else
          goto handle_unusual;
        continue;
      // optional string task = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_task();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomActionRunParam.task"));
        } else
          goto handle_unusual;
        continue;
      // optional string param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_param();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomActionRunParam.param"));
        } else
          goto handle_unusual;
        continue;
      // optional .maarpc.Rect box = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_box(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string detail = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_detail();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomActionRunParam.detail"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomActionRunParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.CustomActionRunParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string context = 1;
  if (_internal_has_context()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_context().data(), static_cast<int>(this->_internal_context().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomActionRunParam.context");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_context(), target);
  }

  // optional string task = 2;
  if (_internal_has_task()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_task().data(), static_cast<int>(this->_internal_task().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomActionRunParam.task");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_task(), target);
  }

  // optional string param = 3;
  if (_internal_has_param()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_param().data(), static_cast<int>(this->_internal_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomActionRunParam.param");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_param(), target);
  }

  // optional .maarpc.Rect box = 4;
  if (_internal_has_box()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::box(this),
        _Internal::box(this).GetCachedSize(), target, stream);
  }

  // optional string detail = 5;
  if (_internal_has_detail()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_detail().data(), static_cast<int>(this->_internal_detail().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomActionRunParam.detail");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_detail(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.CustomActionRunParam)
  return target;
}

size_t CustomActionRunParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.CustomActionRunParam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string context = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_context());
    }

    // optional string task = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_task());
    }

    // optional string param = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_param());
    }

    // optional string detail = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_detail());
    }

    // optional .maarpc.Rect box = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.box_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomActionRunParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomActionRunParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomActionRunParam::GetClassData() const { return &_class_data_; }


void CustomActionRunParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomActionRunParam*>(&to_msg);
  auto& from = static_cast<const CustomActionRunParam&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.CustomActionRunParam)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_context(from._internal_context());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_task(from._internal_task());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_param(from._internal_param());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_detail(from._internal_detail());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_box()->::maarpc::Rect::MergeFrom(
          from._internal_box());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomActionRunParam::CopyFrom(const CustomActionRunParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.CustomActionRunParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomActionRunParam::IsInitialized() const {
  return true;
}

void CustomActionRunParam::InternalSwap(CustomActionRunParam* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.context_, lhs_arena,
      &other->_impl_.context_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.task_, lhs_arena,
      &other->_impl_.task_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.param_, lhs_arena,
      &other->_impl_.param_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.detail_, lhs_arena,
      &other->_impl_.detail_, rhs_arena
  );
  swap(_impl_.box_, other->_impl_.box_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomActionRunParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_custom_2eaction_2eproto_getter, &descriptor_table_custom_2eaction_2eproto_once,
      file_level_metadata_custom_2eaction_2eproto[3]);
}

// ===================================================================

class CustomActionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CustomActionResponse>()._impl_._has_bits_);
  static void set_has_act_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_cmd_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::maarpc::CustomActionRunParam& run(const CustomActionResponse* msg);
};

const ::maarpc::CustomActionRunParam&
CustomActionResponse::_Internal::run(const CustomActionResponse* msg) {
  return *msg->_impl_.command_.run_;
}
void CustomActionResponse::set_allocated_run(::maarpc::CustomActionRunParam* run) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_command();
  if (run) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(run);
    if (message_arena != submessage_arena) {
      run = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, run, submessage_arena);
    }
    set_has_run();
    _impl_.command_.run_ = run;
  }
  // @@protoc_insertion_point(field_set_allocated:maarpc.CustomActionResponse.run)
}
CustomActionResponse::CustomActionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:maarpc.CustomActionResponse)
}
CustomActionResponse::CustomActionResponse(const CustomActionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CustomActionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.act_id_){}
    , decltype(_impl_.cmd_id_){}
    , decltype(_impl_.command_){}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.act_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.act_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_act_id()) {
    _this->_impl_.act_id_.Set(from._internal_act_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.cmd_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cmd_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_cmd_id()) {
    _this->_impl_.cmd_id_.Set(from._internal_cmd_id(), 
      _this->GetArenaForAllocation());
  }
  clear_has_command();
  switch (from.command_case()) {
    case kRun: {
      _this->_internal_mutable_run()->::maarpc::CustomActionRunParam::MergeFrom(
          from._internal_run());
      break;
    }
    case kStop: {
      _this->_internal_set_stop(from._internal_stop());
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:maarpc.CustomActionResponse)
}

inline void CustomActionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.act_id_){}
    , decltype(_impl_.cmd_id_){}
    , decltype(_impl_.command_){}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.act_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.act_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.cmd_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cmd_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_command();
}

CustomActionResponse::~CustomActionResponse() {
  // @@protoc_insertion_point(destructor:maarpc.CustomActionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CustomActionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.act_id_.Destroy();
  _impl_.cmd_id_.Destroy();
  if (has_command()) {
    clear_command();
  }
}

void CustomActionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CustomActionResponse::clear_command() {
// @@protoc_insertion_point(one_of_clear_start:maarpc.CustomActionResponse)
  switch (command_case()) {
    case kRun: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.command_.run_;
      }
      break;
    }
    case kStop: {
      // No need to clear
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = COMMAND_NOT_SET;
}


void CustomActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:maarpc.CustomActionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.act_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.cmd_id_.ClearNonDefaultToEmpty();
    }
  }
  clear_command();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CustomActionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string act_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_act_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomActionResponse.act_id"));
        } else
          goto handle_unusual;
        continue;
      // optional string cmd_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_cmd_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "maarpc.CustomActionResponse.cmd_id"));
        } else
          goto handle_unusual;
        continue;
      // .maarpc.CustomActionRunParam run = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_run(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool stop = 102;
      case 102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _internal_set_stop(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CustomActionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:maarpc.CustomActionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string act_id = 1;
  if (_internal_has_act_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_act_id().data(), static_cast<int>(this->_internal_act_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomActionResponse.act_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_act_id(), target);
  }

  // optional string cmd_id = 2;
  if (_internal_has_cmd_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cmd_id().data(), static_cast<int>(this->_internal_cmd_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "maarpc.CustomActionResponse.cmd_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_cmd_id(), target);
  }

  // .maarpc.CustomActionRunParam run = 101;
  if (_internal_has_run()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(101, _Internal::run(this),
        _Internal::run(this).GetCachedSize(), target, stream);
  }

  // bool stop = 102;
  if (_internal_has_stop()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(102, this->_internal_stop(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:maarpc.CustomActionResponse)
  return target;
}

size_t CustomActionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:maarpc.CustomActionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string act_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_act_id());
    }

    // optional string cmd_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_cmd_id());
    }

  }
  switch (command_case()) {
    // .maarpc.CustomActionRunParam run = 101;
    case kRun: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.command_.run_);
      break;
    }
    // bool stop = 102;
    case kStop: {
      total_size += 2 + 1;
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CustomActionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CustomActionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CustomActionResponse::GetClassData() const { return &_class_data_; }


void CustomActionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CustomActionResponse*>(&to_msg);
  auto& from = static_cast<const CustomActionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:maarpc.CustomActionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_act_id(from._internal_act_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_cmd_id(from._internal_cmd_id());
    }
  }
  switch (from.command_case()) {
    case kRun: {
      _this->_internal_mutable_run()->::maarpc::CustomActionRunParam::MergeFrom(
          from._internal_run());
      break;
    }
    case kStop: {
      _this->_internal_set_stop(from._internal_stop());
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CustomActionResponse::CopyFrom(const CustomActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:maarpc.CustomActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomActionResponse::IsInitialized() const {
  return true;
}

void CustomActionResponse::InternalSwap(CustomActionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.act_id_, lhs_arena,
      &other->_impl_.act_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.cmd_id_, lhs_arena,
      &other->_impl_.cmd_id_, rhs_arena
  );
  swap(_impl_.command_, other->_impl_.command_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CustomActionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_custom_2eaction_2eproto_getter, &descriptor_table_custom_2eaction_2eproto_once,
      file_level_metadata_custom_2eaction_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace maarpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::maarpc::CustomActionInit*
Arena::CreateMaybeMessage< ::maarpc::CustomActionInit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::CustomActionInit >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::CustomActionSubmit*
Arena::CreateMaybeMessage< ::maarpc::CustomActionSubmit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::CustomActionSubmit >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::CustomActionRequest*
Arena::CreateMaybeMessage< ::maarpc::CustomActionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::CustomActionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::CustomActionRunParam*
Arena::CreateMaybeMessage< ::maarpc::CustomActionRunParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::CustomActionRunParam >(arena);
}
template<> PROTOBUF_NOINLINE ::maarpc::CustomActionResponse*
Arena::CreateMaybeMessage< ::maarpc::CustomActionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::maarpc::CustomActionResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
