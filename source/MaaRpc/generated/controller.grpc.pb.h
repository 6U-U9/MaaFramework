// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: controller.proto
#ifndef GRPC_controller_2eproto__INCLUDED
#define GRPC_controller_2eproto__INCLUDED

#include "controller.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace maarpc {

class Controller final {
 public:
  static constexpr char const* service_full_name() {
    return "maarpc.Controller";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status create_adb(::grpc::ClientContext* context, const ::maarpc::AdbControllerRequest& request, ::maarpc::HandleResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::HandleResponse>> Asynccreate_adb(::grpc::ClientContext* context, const ::maarpc::AdbControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::HandleResponse>>(Asynccreate_adbRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::HandleResponse>> PrepareAsynccreate_adb(::grpc::ClientContext* context, const ::maarpc::AdbControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::HandleResponse>>(PrepareAsynccreate_adbRaw(context, request, cq));
    }
    virtual ::grpc::Status destroy(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::maarpc::EmptyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>> Asyncdestroy(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>>(AsyncdestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>> PrepareAsyncdestroy(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>>(PrepareAsyncdestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>> create_custom(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>>(create_customRaw(context));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>> Asynccreate_custom(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>>(Asynccreate_customRaw(context, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>> PrepareAsynccreate_custom(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>>(PrepareAsynccreate_customRaw(context, cq));
    }
    virtual ::grpc::Status set_option(::grpc::ClientContext* context, const ::maarpc::ControllerSetOptionRequest& request, ::maarpc::EmptyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>> Asyncset_option(::grpc::ClientContext* context, const ::maarpc::ControllerSetOptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>>(Asyncset_optionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>> PrepareAsyncset_option(::grpc::ClientContext* context, const ::maarpc::ControllerSetOptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>>(PrepareAsyncset_optionRaw(context, request, cq));
    }
    virtual ::grpc::Status post_connection(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::maarpc::IIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>> Asyncpost_connection(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>>(Asyncpost_connectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>> PrepareAsyncpost_connection(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>>(PrepareAsyncpost_connectionRaw(context, request, cq));
    }
    virtual ::grpc::Status post_click(::grpc::ClientContext* context, const ::maarpc::ControllerPostClickRequest& request, ::maarpc::IIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>> Asyncpost_click(::grpc::ClientContext* context, const ::maarpc::ControllerPostClickRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>>(Asyncpost_clickRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>> PrepareAsyncpost_click(::grpc::ClientContext* context, const ::maarpc::ControllerPostClickRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>>(PrepareAsyncpost_clickRaw(context, request, cq));
    }
    virtual ::grpc::Status post_swipe(::grpc::ClientContext* context, const ::maarpc::ControllerPostSwipeRequest& request, ::maarpc::IIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>> Asyncpost_swipe(::grpc::ClientContext* context, const ::maarpc::ControllerPostSwipeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>>(Asyncpost_swipeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>> PrepareAsyncpost_swipe(::grpc::ClientContext* context, const ::maarpc::ControllerPostSwipeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>>(PrepareAsyncpost_swipeRaw(context, request, cq));
    }
    virtual ::grpc::Status post_press_key(::grpc::ClientContext* context, const ::maarpc::ControllerPostKeyRequest& request, ::maarpc::IIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>> Asyncpost_press_key(::grpc::ClientContext* context, const ::maarpc::ControllerPostKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>>(Asyncpost_press_keyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>> PrepareAsyncpost_press_key(::grpc::ClientContext* context, const ::maarpc::ControllerPostKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>>(PrepareAsyncpost_press_keyRaw(context, request, cq));
    }
    virtual ::grpc::Status post_touch_down(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::maarpc::IIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>> Asyncpost_touch_down(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>>(Asyncpost_touch_downRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>> PrepareAsyncpost_touch_down(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>>(PrepareAsyncpost_touch_downRaw(context, request, cq));
    }
    virtual ::grpc::Status post_touch_move(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::maarpc::IIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>> Asyncpost_touch_move(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>>(Asyncpost_touch_moveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>> PrepareAsyncpost_touch_move(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>>(PrepareAsyncpost_touch_moveRaw(context, request, cq));
    }
    virtual ::grpc::Status post_touch_up(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::maarpc::IIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>> Asyncpost_touch_up(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>>(Asyncpost_touch_upRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>> PrepareAsyncpost_touch_up(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>>(PrepareAsyncpost_touch_upRaw(context, request, cq));
    }
    virtual ::grpc::Status post_screencap(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::maarpc::IIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>> Asyncpost_screencap(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>>(Asyncpost_screencapRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>> PrepareAsyncpost_screencap(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>>(PrepareAsyncpost_screencapRaw(context, request, cq));
    }
    virtual ::grpc::Status status(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::maarpc::StatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StatusResponse>> Asyncstatus(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StatusResponse>>(AsyncstatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StatusResponse>> PrepareAsyncstatus(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StatusResponse>>(PrepareAsyncstatusRaw(context, request, cq));
    }
    virtual ::grpc::Status wait(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::maarpc::StatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StatusResponse>> Asyncwait(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StatusResponse>>(AsyncwaitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StatusResponse>> PrepareAsyncwait(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StatusResponse>>(PrepareAsyncwaitRaw(context, request, cq));
    }
    virtual ::grpc::Status connected(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::maarpc::BoolResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::BoolResponse>> Asyncconnected(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::BoolResponse>>(AsyncconnectedRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::BoolResponse>> PrepareAsyncconnected(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::BoolResponse>>(PrepareAsyncconnectedRaw(context, request, cq));
    }
    virtual ::grpc::Status image(::grpc::ClientContext* context, const ::maarpc::HandleHandleRequest& request, ::maarpc::EmptyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>> Asyncimage(::grpc::ClientContext* context, const ::maarpc::HandleHandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>>(AsyncimageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>> PrepareAsyncimage(::grpc::ClientContext* context, const ::maarpc::HandleHandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>>(PrepareAsyncimageRaw(context, request, cq));
    }
    virtual ::grpc::Status uuid(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::maarpc::StringResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StringResponse>> Asyncuuid(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StringResponse>>(AsyncuuidRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StringResponse>> PrepareAsyncuuid(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StringResponse>>(PrepareAsyncuuidRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void create_adb(::grpc::ClientContext* context, const ::maarpc::AdbControllerRequest* request, ::maarpc::HandleResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void create_adb(::grpc::ClientContext* context, const ::maarpc::AdbControllerRequest* request, ::maarpc::HandleResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void destroy(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::EmptyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void destroy(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::EmptyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void create_custom(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::maarpc::CustomControllerRequest,::maarpc::CustomControllerResponse>* reactor) = 0;
      virtual void set_option(::grpc::ClientContext* context, const ::maarpc::ControllerSetOptionRequest* request, ::maarpc::EmptyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void set_option(::grpc::ClientContext* context, const ::maarpc::ControllerSetOptionRequest* request, ::maarpc::EmptyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void post_connection(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::IIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void post_connection(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::IIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void post_click(::grpc::ClientContext* context, const ::maarpc::ControllerPostClickRequest* request, ::maarpc::IIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void post_click(::grpc::ClientContext* context, const ::maarpc::ControllerPostClickRequest* request, ::maarpc::IIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void post_swipe(::grpc::ClientContext* context, const ::maarpc::ControllerPostSwipeRequest* request, ::maarpc::IIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void post_swipe(::grpc::ClientContext* context, const ::maarpc::ControllerPostSwipeRequest* request, ::maarpc::IIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void post_press_key(::grpc::ClientContext* context, const ::maarpc::ControllerPostKeyRequest* request, ::maarpc::IIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void post_press_key(::grpc::ClientContext* context, const ::maarpc::ControllerPostKeyRequest* request, ::maarpc::IIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void post_touch_down(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void post_touch_down(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void post_touch_move(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void post_touch_move(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void post_touch_up(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void post_touch_up(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void post_screencap(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::IIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void post_screencap(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::IIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void status(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest* request, ::maarpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void status(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest* request, ::maarpc::StatusResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void wait(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest* request, ::maarpc::StatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void wait(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest* request, ::maarpc::StatusResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void connected(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::BoolResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void connected(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::BoolResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void image(::grpc::ClientContext* context, const ::maarpc::HandleHandleRequest* request, ::maarpc::EmptyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void image(::grpc::ClientContext* context, const ::maarpc::HandleHandleRequest* request, ::maarpc::EmptyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void uuid(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::StringResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void uuid(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::StringResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::HandleResponse>* Asynccreate_adbRaw(::grpc::ClientContext* context, const ::maarpc::AdbControllerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::HandleResponse>* PrepareAsynccreate_adbRaw(::grpc::ClientContext* context, const ::maarpc::AdbControllerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>* AsyncdestroyRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>* PrepareAsyncdestroyRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderWriterInterface< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>* create_customRaw(::grpc::ClientContext* context) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>* Asynccreate_customRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>* PrepareAsynccreate_customRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>* Asyncset_optionRaw(::grpc::ClientContext* context, const ::maarpc::ControllerSetOptionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>* PrepareAsyncset_optionRaw(::grpc::ClientContext* context, const ::maarpc::ControllerSetOptionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>* Asyncpost_connectionRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>* PrepareAsyncpost_connectionRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>* Asyncpost_clickRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostClickRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>* PrepareAsyncpost_clickRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostClickRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>* Asyncpost_swipeRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostSwipeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>* PrepareAsyncpost_swipeRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostSwipeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>* Asyncpost_press_keyRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>* PrepareAsyncpost_press_keyRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>* Asyncpost_touch_downRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>* PrepareAsyncpost_touch_downRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>* Asyncpost_touch_moveRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>* PrepareAsyncpost_touch_moveRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>* Asyncpost_touch_upRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>* PrepareAsyncpost_touch_upRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>* Asyncpost_screencapRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::IIdResponse>* PrepareAsyncpost_screencapRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StatusResponse>* AsyncstatusRaw(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StatusResponse>* PrepareAsyncstatusRaw(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StatusResponse>* AsyncwaitRaw(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StatusResponse>* PrepareAsyncwaitRaw(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::BoolResponse>* AsyncconnectedRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::BoolResponse>* PrepareAsyncconnectedRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>* AsyncimageRaw(::grpc::ClientContext* context, const ::maarpc::HandleHandleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::EmptyResponse>* PrepareAsyncimageRaw(::grpc::ClientContext* context, const ::maarpc::HandleHandleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StringResponse>* AsyncuuidRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::maarpc::StringResponse>* PrepareAsyncuuidRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status create_adb(::grpc::ClientContext* context, const ::maarpc::AdbControllerRequest& request, ::maarpc::HandleResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::HandleResponse>> Asynccreate_adb(::grpc::ClientContext* context, const ::maarpc::AdbControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::HandleResponse>>(Asynccreate_adbRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::HandleResponse>> PrepareAsynccreate_adb(::grpc::ClientContext* context, const ::maarpc::AdbControllerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::HandleResponse>>(PrepareAsynccreate_adbRaw(context, request, cq));
    }
    ::grpc::Status destroy(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::maarpc::EmptyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>> Asyncdestroy(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>>(AsyncdestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>> PrepareAsyncdestroy(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>>(PrepareAsyncdestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriter< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>> create_custom(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriter< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>>(create_customRaw(context));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>> Asynccreate_custom(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>>(Asynccreate_customRaw(context, cq, tag));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>> PrepareAsynccreate_custom(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>>(PrepareAsynccreate_customRaw(context, cq));
    }
    ::grpc::Status set_option(::grpc::ClientContext* context, const ::maarpc::ControllerSetOptionRequest& request, ::maarpc::EmptyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>> Asyncset_option(::grpc::ClientContext* context, const ::maarpc::ControllerSetOptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>>(Asyncset_optionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>> PrepareAsyncset_option(::grpc::ClientContext* context, const ::maarpc::ControllerSetOptionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>>(PrepareAsyncset_optionRaw(context, request, cq));
    }
    ::grpc::Status post_connection(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::maarpc::IIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>> Asyncpost_connection(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>>(Asyncpost_connectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>> PrepareAsyncpost_connection(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>>(PrepareAsyncpost_connectionRaw(context, request, cq));
    }
    ::grpc::Status post_click(::grpc::ClientContext* context, const ::maarpc::ControllerPostClickRequest& request, ::maarpc::IIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>> Asyncpost_click(::grpc::ClientContext* context, const ::maarpc::ControllerPostClickRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>>(Asyncpost_clickRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>> PrepareAsyncpost_click(::grpc::ClientContext* context, const ::maarpc::ControllerPostClickRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>>(PrepareAsyncpost_clickRaw(context, request, cq));
    }
    ::grpc::Status post_swipe(::grpc::ClientContext* context, const ::maarpc::ControllerPostSwipeRequest& request, ::maarpc::IIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>> Asyncpost_swipe(::grpc::ClientContext* context, const ::maarpc::ControllerPostSwipeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>>(Asyncpost_swipeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>> PrepareAsyncpost_swipe(::grpc::ClientContext* context, const ::maarpc::ControllerPostSwipeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>>(PrepareAsyncpost_swipeRaw(context, request, cq));
    }
    ::grpc::Status post_press_key(::grpc::ClientContext* context, const ::maarpc::ControllerPostKeyRequest& request, ::maarpc::IIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>> Asyncpost_press_key(::grpc::ClientContext* context, const ::maarpc::ControllerPostKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>>(Asyncpost_press_keyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>> PrepareAsyncpost_press_key(::grpc::ClientContext* context, const ::maarpc::ControllerPostKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>>(PrepareAsyncpost_press_keyRaw(context, request, cq));
    }
    ::grpc::Status post_touch_down(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::maarpc::IIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>> Asyncpost_touch_down(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>>(Asyncpost_touch_downRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>> PrepareAsyncpost_touch_down(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>>(PrepareAsyncpost_touch_downRaw(context, request, cq));
    }
    ::grpc::Status post_touch_move(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::maarpc::IIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>> Asyncpost_touch_move(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>>(Asyncpost_touch_moveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>> PrepareAsyncpost_touch_move(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>>(PrepareAsyncpost_touch_moveRaw(context, request, cq));
    }
    ::grpc::Status post_touch_up(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::maarpc::IIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>> Asyncpost_touch_up(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>>(Asyncpost_touch_upRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>> PrepareAsyncpost_touch_up(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>>(PrepareAsyncpost_touch_upRaw(context, request, cq));
    }
    ::grpc::Status post_screencap(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::maarpc::IIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>> Asyncpost_screencap(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>>(Asyncpost_screencapRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>> PrepareAsyncpost_screencap(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>>(PrepareAsyncpost_screencapRaw(context, request, cq));
    }
    ::grpc::Status status(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::maarpc::StatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::StatusResponse>> Asyncstatus(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::StatusResponse>>(AsyncstatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::StatusResponse>> PrepareAsyncstatus(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::StatusResponse>>(PrepareAsyncstatusRaw(context, request, cq));
    }
    ::grpc::Status wait(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::maarpc::StatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::StatusResponse>> Asyncwait(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::StatusResponse>>(AsyncwaitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::StatusResponse>> PrepareAsyncwait(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::StatusResponse>>(PrepareAsyncwaitRaw(context, request, cq));
    }
    ::grpc::Status connected(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::maarpc::BoolResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::BoolResponse>> Asyncconnected(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::BoolResponse>>(AsyncconnectedRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::BoolResponse>> PrepareAsyncconnected(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::BoolResponse>>(PrepareAsyncconnectedRaw(context, request, cq));
    }
    ::grpc::Status image(::grpc::ClientContext* context, const ::maarpc::HandleHandleRequest& request, ::maarpc::EmptyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>> Asyncimage(::grpc::ClientContext* context, const ::maarpc::HandleHandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>>(AsyncimageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>> PrepareAsyncimage(::grpc::ClientContext* context, const ::maarpc::HandleHandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>>(PrepareAsyncimageRaw(context, request, cq));
    }
    ::grpc::Status uuid(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::maarpc::StringResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::StringResponse>> Asyncuuid(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::StringResponse>>(AsyncuuidRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::StringResponse>> PrepareAsyncuuid(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::maarpc::StringResponse>>(PrepareAsyncuuidRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void create_adb(::grpc::ClientContext* context, const ::maarpc::AdbControllerRequest* request, ::maarpc::HandleResponse* response, std::function<void(::grpc::Status)>) override;
      void create_adb(::grpc::ClientContext* context, const ::maarpc::AdbControllerRequest* request, ::maarpc::HandleResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void destroy(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::EmptyResponse* response, std::function<void(::grpc::Status)>) override;
      void destroy(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::EmptyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void create_custom(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::maarpc::CustomControllerRequest,::maarpc::CustomControllerResponse>* reactor) override;
      void set_option(::grpc::ClientContext* context, const ::maarpc::ControllerSetOptionRequest* request, ::maarpc::EmptyResponse* response, std::function<void(::grpc::Status)>) override;
      void set_option(::grpc::ClientContext* context, const ::maarpc::ControllerSetOptionRequest* request, ::maarpc::EmptyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void post_connection(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::IIdResponse* response, std::function<void(::grpc::Status)>) override;
      void post_connection(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::IIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void post_click(::grpc::ClientContext* context, const ::maarpc::ControllerPostClickRequest* request, ::maarpc::IIdResponse* response, std::function<void(::grpc::Status)>) override;
      void post_click(::grpc::ClientContext* context, const ::maarpc::ControllerPostClickRequest* request, ::maarpc::IIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void post_swipe(::grpc::ClientContext* context, const ::maarpc::ControllerPostSwipeRequest* request, ::maarpc::IIdResponse* response, std::function<void(::grpc::Status)>) override;
      void post_swipe(::grpc::ClientContext* context, const ::maarpc::ControllerPostSwipeRequest* request, ::maarpc::IIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void post_press_key(::grpc::ClientContext* context, const ::maarpc::ControllerPostKeyRequest* request, ::maarpc::IIdResponse* response, std::function<void(::grpc::Status)>) override;
      void post_press_key(::grpc::ClientContext* context, const ::maarpc::ControllerPostKeyRequest* request, ::maarpc::IIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void post_touch_down(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response, std::function<void(::grpc::Status)>) override;
      void post_touch_down(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void post_touch_move(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response, std::function<void(::grpc::Status)>) override;
      void post_touch_move(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void post_touch_up(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response, std::function<void(::grpc::Status)>) override;
      void post_touch_up(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void post_screencap(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::IIdResponse* response, std::function<void(::grpc::Status)>) override;
      void post_screencap(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::IIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void status(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest* request, ::maarpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void status(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest* request, ::maarpc::StatusResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void wait(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest* request, ::maarpc::StatusResponse* response, std::function<void(::grpc::Status)>) override;
      void wait(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest* request, ::maarpc::StatusResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void connected(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::BoolResponse* response, std::function<void(::grpc::Status)>) override;
      void connected(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::BoolResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void image(::grpc::ClientContext* context, const ::maarpc::HandleHandleRequest* request, ::maarpc::EmptyResponse* response, std::function<void(::grpc::Status)>) override;
      void image(::grpc::ClientContext* context, const ::maarpc::HandleHandleRequest* request, ::maarpc::EmptyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void uuid(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::StringResponse* response, std::function<void(::grpc::Status)>) override;
      void uuid(::grpc::ClientContext* context, const ::maarpc::HandleRequest* request, ::maarpc::StringResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::maarpc::HandleResponse>* Asynccreate_adbRaw(::grpc::ClientContext* context, const ::maarpc::AdbControllerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::HandleResponse>* PrepareAsynccreate_adbRaw(::grpc::ClientContext* context, const ::maarpc::AdbControllerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>* AsyncdestroyRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>* PrepareAsyncdestroyRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReaderWriter< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>* create_customRaw(::grpc::ClientContext* context) override;
    ::grpc::ClientAsyncReaderWriter< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>* Asynccreate_customRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReaderWriter< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>* PrepareAsynccreate_customRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>* Asyncset_optionRaw(::grpc::ClientContext* context, const ::maarpc::ControllerSetOptionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>* PrepareAsyncset_optionRaw(::grpc::ClientContext* context, const ::maarpc::ControllerSetOptionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>* Asyncpost_connectionRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>* PrepareAsyncpost_connectionRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>* Asyncpost_clickRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostClickRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>* PrepareAsyncpost_clickRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostClickRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>* Asyncpost_swipeRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostSwipeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>* PrepareAsyncpost_swipeRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostSwipeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>* Asyncpost_press_keyRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>* PrepareAsyncpost_press_keyRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>* Asyncpost_touch_downRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>* PrepareAsyncpost_touch_downRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>* Asyncpost_touch_moveRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>* PrepareAsyncpost_touch_moveRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>* Asyncpost_touch_upRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>* PrepareAsyncpost_touch_upRaw(::grpc::ClientContext* context, const ::maarpc::ControllerPostTouchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>* Asyncpost_screencapRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::IIdResponse>* PrepareAsyncpost_screencapRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::StatusResponse>* AsyncstatusRaw(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::StatusResponse>* PrepareAsyncstatusRaw(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::StatusResponse>* AsyncwaitRaw(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::StatusResponse>* PrepareAsyncwaitRaw(::grpc::ClientContext* context, const ::maarpc::HandleIIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::BoolResponse>* AsyncconnectedRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::BoolResponse>* PrepareAsyncconnectedRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>* AsyncimageRaw(::grpc::ClientContext* context, const ::maarpc::HandleHandleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::EmptyResponse>* PrepareAsyncimageRaw(::grpc::ClientContext* context, const ::maarpc::HandleHandleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::StringResponse>* AsyncuuidRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::maarpc::StringResponse>* PrepareAsyncuuidRaw(::grpc::ClientContext* context, const ::maarpc::HandleRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_create_adb_;
    const ::grpc::internal::RpcMethod rpcmethod_destroy_;
    const ::grpc::internal::RpcMethod rpcmethod_create_custom_;
    const ::grpc::internal::RpcMethod rpcmethod_set_option_;
    const ::grpc::internal::RpcMethod rpcmethod_post_connection_;
    const ::grpc::internal::RpcMethod rpcmethod_post_click_;
    const ::grpc::internal::RpcMethod rpcmethod_post_swipe_;
    const ::grpc::internal::RpcMethod rpcmethod_post_press_key_;
    const ::grpc::internal::RpcMethod rpcmethod_post_touch_down_;
    const ::grpc::internal::RpcMethod rpcmethod_post_touch_move_;
    const ::grpc::internal::RpcMethod rpcmethod_post_touch_up_;
    const ::grpc::internal::RpcMethod rpcmethod_post_screencap_;
    const ::grpc::internal::RpcMethod rpcmethod_status_;
    const ::grpc::internal::RpcMethod rpcmethod_wait_;
    const ::grpc::internal::RpcMethod rpcmethod_connected_;
    const ::grpc::internal::RpcMethod rpcmethod_image_;
    const ::grpc::internal::RpcMethod rpcmethod_uuid_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status create_adb(::grpc::ServerContext* context, const ::maarpc::AdbControllerRequest* request, ::maarpc::HandleResponse* response);
    virtual ::grpc::Status destroy(::grpc::ServerContext* context, const ::maarpc::HandleRequest* request, ::maarpc::EmptyResponse* response);
    virtual ::grpc::Status create_custom(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::maarpc::CustomControllerResponse, ::maarpc::CustomControllerRequest>* stream);
    virtual ::grpc::Status set_option(::grpc::ServerContext* context, const ::maarpc::ControllerSetOptionRequest* request, ::maarpc::EmptyResponse* response);
    virtual ::grpc::Status post_connection(::grpc::ServerContext* context, const ::maarpc::HandleRequest* request, ::maarpc::IIdResponse* response);
    virtual ::grpc::Status post_click(::grpc::ServerContext* context, const ::maarpc::ControllerPostClickRequest* request, ::maarpc::IIdResponse* response);
    virtual ::grpc::Status post_swipe(::grpc::ServerContext* context, const ::maarpc::ControllerPostSwipeRequest* request, ::maarpc::IIdResponse* response);
    virtual ::grpc::Status post_press_key(::grpc::ServerContext* context, const ::maarpc::ControllerPostKeyRequest* request, ::maarpc::IIdResponse* response);
    virtual ::grpc::Status post_touch_down(::grpc::ServerContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response);
    virtual ::grpc::Status post_touch_move(::grpc::ServerContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response);
    virtual ::grpc::Status post_touch_up(::grpc::ServerContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response);
    virtual ::grpc::Status post_screencap(::grpc::ServerContext* context, const ::maarpc::HandleRequest* request, ::maarpc::IIdResponse* response);
    virtual ::grpc::Status status(::grpc::ServerContext* context, const ::maarpc::HandleIIdRequest* request, ::maarpc::StatusResponse* response);
    virtual ::grpc::Status wait(::grpc::ServerContext* context, const ::maarpc::HandleIIdRequest* request, ::maarpc::StatusResponse* response);
    virtual ::grpc::Status connected(::grpc::ServerContext* context, const ::maarpc::HandleRequest* request, ::maarpc::BoolResponse* response);
    virtual ::grpc::Status image(::grpc::ServerContext* context, const ::maarpc::HandleHandleRequest* request, ::maarpc::EmptyResponse* response);
    virtual ::grpc::Status uuid(::grpc::ServerContext* context, const ::maarpc::HandleRequest* request, ::maarpc::StringResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_create_adb : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_create_adb() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_create_adb() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create_adb(::grpc::ServerContext* /*context*/, const ::maarpc::AdbControllerRequest* /*request*/, ::maarpc::HandleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcreate_adb(::grpc::ServerContext* context, ::maarpc::AdbControllerRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::HandleResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_destroy() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdestroy(::grpc::ServerContext* context, ::maarpc::HandleRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::EmptyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_create_custom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_create_custom() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_create_custom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create_custom(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::maarpc::CustomControllerResponse, ::maarpc::CustomControllerRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcreate_custom(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::maarpc::CustomControllerResponse, ::maarpc::CustomControllerRequest>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(2, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_set_option : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_set_option() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_set_option() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status set_option(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerSetOptionRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestset_option(::grpc::ServerContext* context, ::maarpc::ControllerSetOptionRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::EmptyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_post_connection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_post_connection() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_post_connection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_connection(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpost_connection(::grpc::ServerContext* context, ::maarpc::HandleRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::IIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_post_click : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_post_click() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_post_click() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_click(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostClickRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpost_click(::grpc::ServerContext* context, ::maarpc::ControllerPostClickRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::IIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_post_swipe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_post_swipe() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_post_swipe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_swipe(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostSwipeRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpost_swipe(::grpc::ServerContext* context, ::maarpc::ControllerPostSwipeRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::IIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_post_press_key : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_post_press_key() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_post_press_key() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_press_key(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostKeyRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpost_press_key(::grpc::ServerContext* context, ::maarpc::ControllerPostKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::IIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_post_touch_down : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_post_touch_down() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_post_touch_down() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_touch_down(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpost_touch_down(::grpc::ServerContext* context, ::maarpc::ControllerPostTouchRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::IIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_post_touch_move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_post_touch_move() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_post_touch_move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_touch_move(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpost_touch_move(::grpc::ServerContext* context, ::maarpc::ControllerPostTouchRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::IIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_post_touch_up : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_post_touch_up() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_post_touch_up() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_touch_up(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpost_touch_up(::grpc::ServerContext* context, ::maarpc::ControllerPostTouchRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::IIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_post_screencap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_post_screencap() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_post_screencap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_screencap(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpost_screencap(::grpc::ServerContext* context, ::maarpc::HandleRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::IIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_status : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_status() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_status() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status status(::grpc::ServerContext* /*context*/, const ::maarpc::HandleIIdRequest* /*request*/, ::maarpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requeststatus(::grpc::ServerContext* context, ::maarpc::HandleIIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::StatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_wait : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_wait() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_wait() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status wait(::grpc::ServerContext* /*context*/, const ::maarpc::HandleIIdRequest* /*request*/, ::maarpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestwait(::grpc::ServerContext* context, ::maarpc::HandleIIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::StatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_connected : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_connected() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_connected() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status connected(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::BoolResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestconnected(::grpc::ServerContext* context, ::maarpc::HandleRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::BoolResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_image : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_image() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_image() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status image(::grpc::ServerContext* /*context*/, const ::maarpc::HandleHandleRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestimage(::grpc::ServerContext* context, ::maarpc::HandleHandleRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::EmptyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_uuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_uuid() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_uuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status uuid(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::StringResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestuuid(::grpc::ServerContext* context, ::maarpc::HandleRequest* request, ::grpc::ServerAsyncResponseWriter< ::maarpc::StringResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_create_adb<WithAsyncMethod_destroy<WithAsyncMethod_create_custom<WithAsyncMethod_set_option<WithAsyncMethod_post_connection<WithAsyncMethod_post_click<WithAsyncMethod_post_swipe<WithAsyncMethod_post_press_key<WithAsyncMethod_post_touch_down<WithAsyncMethod_post_touch_move<WithAsyncMethod_post_touch_up<WithAsyncMethod_post_screencap<WithAsyncMethod_status<WithAsyncMethod_wait<WithAsyncMethod_connected<WithAsyncMethod_image<WithAsyncMethod_uuid<Service > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_create_adb : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_create_adb() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::AdbControllerRequest, ::maarpc::HandleResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::AdbControllerRequest* request, ::maarpc::HandleResponse* response) { return this->create_adb(context, request, response); }));}
    void SetMessageAllocatorFor_create_adb(
        ::grpc::MessageAllocator< ::maarpc::AdbControllerRequest, ::maarpc::HandleResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::AdbControllerRequest, ::maarpc::HandleResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_create_adb() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create_adb(::grpc::ServerContext* /*context*/, const ::maarpc::AdbControllerRequest* /*request*/, ::maarpc::HandleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* create_adb(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::AdbControllerRequest* /*request*/, ::maarpc::HandleResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_destroy() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleRequest, ::maarpc::EmptyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::HandleRequest* request, ::maarpc::EmptyResponse* response) { return this->destroy(context, request, response); }));}
    void SetMessageAllocatorFor_destroy(
        ::grpc::MessageAllocator< ::maarpc::HandleRequest, ::maarpc::EmptyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleRequest, ::maarpc::EmptyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_create_custom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_create_custom() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackBidiHandler< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->create_custom(context); }));
    }
    ~WithCallbackMethod_create_custom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create_custom(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::maarpc::CustomControllerResponse, ::maarpc::CustomControllerRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::maarpc::CustomControllerRequest, ::maarpc::CustomControllerResponse>* create_custom(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_set_option : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_set_option() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::ControllerSetOptionRequest, ::maarpc::EmptyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::ControllerSetOptionRequest* request, ::maarpc::EmptyResponse* response) { return this->set_option(context, request, response); }));}
    void SetMessageAllocatorFor_set_option(
        ::grpc::MessageAllocator< ::maarpc::ControllerSetOptionRequest, ::maarpc::EmptyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::ControllerSetOptionRequest, ::maarpc::EmptyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_set_option() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status set_option(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerSetOptionRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* set_option(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::ControllerSetOptionRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_post_connection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_post_connection() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleRequest, ::maarpc::IIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::HandleRequest* request, ::maarpc::IIdResponse* response) { return this->post_connection(context, request, response); }));}
    void SetMessageAllocatorFor_post_connection(
        ::grpc::MessageAllocator< ::maarpc::HandleRequest, ::maarpc::IIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleRequest, ::maarpc::IIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_post_connection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_connection(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* post_connection(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::IIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_post_click : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_post_click() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::ControllerPostClickRequest, ::maarpc::IIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::ControllerPostClickRequest* request, ::maarpc::IIdResponse* response) { return this->post_click(context, request, response); }));}
    void SetMessageAllocatorFor_post_click(
        ::grpc::MessageAllocator< ::maarpc::ControllerPostClickRequest, ::maarpc::IIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::ControllerPostClickRequest, ::maarpc::IIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_post_click() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_click(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostClickRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* post_click(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::ControllerPostClickRequest* /*request*/, ::maarpc::IIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_post_swipe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_post_swipe() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::ControllerPostSwipeRequest, ::maarpc::IIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::ControllerPostSwipeRequest* request, ::maarpc::IIdResponse* response) { return this->post_swipe(context, request, response); }));}
    void SetMessageAllocatorFor_post_swipe(
        ::grpc::MessageAllocator< ::maarpc::ControllerPostSwipeRequest, ::maarpc::IIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::ControllerPostSwipeRequest, ::maarpc::IIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_post_swipe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_swipe(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostSwipeRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* post_swipe(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::ControllerPostSwipeRequest* /*request*/, ::maarpc::IIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_post_press_key : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_post_press_key() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::ControllerPostKeyRequest, ::maarpc::IIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::ControllerPostKeyRequest* request, ::maarpc::IIdResponse* response) { return this->post_press_key(context, request, response); }));}
    void SetMessageAllocatorFor_post_press_key(
        ::grpc::MessageAllocator< ::maarpc::ControllerPostKeyRequest, ::maarpc::IIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::ControllerPostKeyRequest, ::maarpc::IIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_post_press_key() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_press_key(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostKeyRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* post_press_key(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::ControllerPostKeyRequest* /*request*/, ::maarpc::IIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_post_touch_down : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_post_touch_down() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::ControllerPostTouchRequest, ::maarpc::IIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response) { return this->post_touch_down(context, request, response); }));}
    void SetMessageAllocatorFor_post_touch_down(
        ::grpc::MessageAllocator< ::maarpc::ControllerPostTouchRequest, ::maarpc::IIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::ControllerPostTouchRequest, ::maarpc::IIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_post_touch_down() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_touch_down(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* post_touch_down(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_post_touch_move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_post_touch_move() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::ControllerPostTouchRequest, ::maarpc::IIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response) { return this->post_touch_move(context, request, response); }));}
    void SetMessageAllocatorFor_post_touch_move(
        ::grpc::MessageAllocator< ::maarpc::ControllerPostTouchRequest, ::maarpc::IIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::ControllerPostTouchRequest, ::maarpc::IIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_post_touch_move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_touch_move(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* post_touch_move(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_post_touch_up : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_post_touch_up() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::ControllerPostTouchRequest, ::maarpc::IIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::ControllerPostTouchRequest* request, ::maarpc::IIdResponse* response) { return this->post_touch_up(context, request, response); }));}
    void SetMessageAllocatorFor_post_touch_up(
        ::grpc::MessageAllocator< ::maarpc::ControllerPostTouchRequest, ::maarpc::IIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::ControllerPostTouchRequest, ::maarpc::IIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_post_touch_up() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_touch_up(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* post_touch_up(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_post_screencap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_post_screencap() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleRequest, ::maarpc::IIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::HandleRequest* request, ::maarpc::IIdResponse* response) { return this->post_screencap(context, request, response); }));}
    void SetMessageAllocatorFor_post_screencap(
        ::grpc::MessageAllocator< ::maarpc::HandleRequest, ::maarpc::IIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleRequest, ::maarpc::IIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_post_screencap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_screencap(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* post_screencap(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::IIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_status : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_status() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleIIdRequest, ::maarpc::StatusResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::HandleIIdRequest* request, ::maarpc::StatusResponse* response) { return this->status(context, request, response); }));}
    void SetMessageAllocatorFor_status(
        ::grpc::MessageAllocator< ::maarpc::HandleIIdRequest, ::maarpc::StatusResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleIIdRequest, ::maarpc::StatusResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_status() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status status(::grpc::ServerContext* /*context*/, const ::maarpc::HandleIIdRequest* /*request*/, ::maarpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* status(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::HandleIIdRequest* /*request*/, ::maarpc::StatusResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_wait : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_wait() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleIIdRequest, ::maarpc::StatusResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::HandleIIdRequest* request, ::maarpc::StatusResponse* response) { return this->wait(context, request, response); }));}
    void SetMessageAllocatorFor_wait(
        ::grpc::MessageAllocator< ::maarpc::HandleIIdRequest, ::maarpc::StatusResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleIIdRequest, ::maarpc::StatusResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_wait() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status wait(::grpc::ServerContext* /*context*/, const ::maarpc::HandleIIdRequest* /*request*/, ::maarpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* wait(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::HandleIIdRequest* /*request*/, ::maarpc::StatusResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_connected : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_connected() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleRequest, ::maarpc::BoolResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::HandleRequest* request, ::maarpc::BoolResponse* response) { return this->connected(context, request, response); }));}
    void SetMessageAllocatorFor_connected(
        ::grpc::MessageAllocator< ::maarpc::HandleRequest, ::maarpc::BoolResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleRequest, ::maarpc::BoolResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_connected() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status connected(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::BoolResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* connected(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::BoolResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_image : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_image() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleHandleRequest, ::maarpc::EmptyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::HandleHandleRequest* request, ::maarpc::EmptyResponse* response) { return this->image(context, request, response); }));}
    void SetMessageAllocatorFor_image(
        ::grpc::MessageAllocator< ::maarpc::HandleHandleRequest, ::maarpc::EmptyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleHandleRequest, ::maarpc::EmptyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_image() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status image(::grpc::ServerContext* /*context*/, const ::maarpc::HandleHandleRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* image(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::HandleHandleRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_uuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_uuid() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleRequest, ::maarpc::StringResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::maarpc::HandleRequest* request, ::maarpc::StringResponse* response) { return this->uuid(context, request, response); }));}
    void SetMessageAllocatorFor_uuid(
        ::grpc::MessageAllocator< ::maarpc::HandleRequest, ::maarpc::StringResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::maarpc::HandleRequest, ::maarpc::StringResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_uuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status uuid(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::StringResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* uuid(
      ::grpc::CallbackServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::StringResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_create_adb<WithCallbackMethod_destroy<WithCallbackMethod_create_custom<WithCallbackMethod_set_option<WithCallbackMethod_post_connection<WithCallbackMethod_post_click<WithCallbackMethod_post_swipe<WithCallbackMethod_post_press_key<WithCallbackMethod_post_touch_down<WithCallbackMethod_post_touch_move<WithCallbackMethod_post_touch_up<WithCallbackMethod_post_screencap<WithCallbackMethod_status<WithCallbackMethod_wait<WithCallbackMethod_connected<WithCallbackMethod_image<WithCallbackMethod_uuid<Service > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_create_adb : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_create_adb() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_create_adb() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create_adb(::grpc::ServerContext* /*context*/, const ::maarpc::AdbControllerRequest* /*request*/, ::maarpc::HandleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_destroy() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_create_custom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_create_custom() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_create_custom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create_custom(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::maarpc::CustomControllerResponse, ::maarpc::CustomControllerRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_set_option : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_set_option() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_set_option() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status set_option(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerSetOptionRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_post_connection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_post_connection() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_post_connection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_connection(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_post_click : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_post_click() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_post_click() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_click(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostClickRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_post_swipe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_post_swipe() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_post_swipe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_swipe(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostSwipeRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_post_press_key : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_post_press_key() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_post_press_key() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_press_key(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostKeyRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_post_touch_down : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_post_touch_down() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_post_touch_down() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_touch_down(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_post_touch_move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_post_touch_move() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_post_touch_move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_touch_move(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_post_touch_up : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_post_touch_up() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_post_touch_up() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_touch_up(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_post_screencap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_post_screencap() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_post_screencap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_screencap(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_status : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_status() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_status() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status status(::grpc::ServerContext* /*context*/, const ::maarpc::HandleIIdRequest* /*request*/, ::maarpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_wait : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_wait() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_wait() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status wait(::grpc::ServerContext* /*context*/, const ::maarpc::HandleIIdRequest* /*request*/, ::maarpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_connected : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_connected() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_connected() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status connected(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::BoolResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_image : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_image() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_image() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status image(::grpc::ServerContext* /*context*/, const ::maarpc::HandleHandleRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_uuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_uuid() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_uuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status uuid(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::StringResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_create_adb : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_create_adb() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_create_adb() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create_adb(::grpc::ServerContext* /*context*/, const ::maarpc::AdbControllerRequest* /*request*/, ::maarpc::HandleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcreate_adb(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_destroy() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdestroy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_create_custom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_create_custom() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_create_custom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create_custom(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::maarpc::CustomControllerResponse, ::maarpc::CustomControllerRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcreate_custom(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(2, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_set_option : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_set_option() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_set_option() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status set_option(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerSetOptionRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestset_option(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_post_connection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_post_connection() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_post_connection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_connection(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpost_connection(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_post_click : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_post_click() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_post_click() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_click(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostClickRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpost_click(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_post_swipe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_post_swipe() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_post_swipe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_swipe(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostSwipeRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpost_swipe(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_post_press_key : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_post_press_key() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_post_press_key() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_press_key(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostKeyRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpost_press_key(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_post_touch_down : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_post_touch_down() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_post_touch_down() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_touch_down(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpost_touch_down(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_post_touch_move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_post_touch_move() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_post_touch_move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_touch_move(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpost_touch_move(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_post_touch_up : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_post_touch_up() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_post_touch_up() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_touch_up(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpost_touch_up(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_post_screencap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_post_screencap() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_post_screencap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_screencap(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpost_screencap(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_status : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_status() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_status() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status status(::grpc::ServerContext* /*context*/, const ::maarpc::HandleIIdRequest* /*request*/, ::maarpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requeststatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_wait : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_wait() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_wait() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status wait(::grpc::ServerContext* /*context*/, const ::maarpc::HandleIIdRequest* /*request*/, ::maarpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestwait(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_connected : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_connected() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_connected() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status connected(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::BoolResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestconnected(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_image : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_image() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_image() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status image(::grpc::ServerContext* /*context*/, const ::maarpc::HandleHandleRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestimage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_uuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_uuid() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_uuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status uuid(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::StringResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestuuid(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_create_adb : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_create_adb() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->create_adb(context, request, response); }));
    }
    ~WithRawCallbackMethod_create_adb() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create_adb(::grpc::ServerContext* /*context*/, const ::maarpc::AdbControllerRequest* /*request*/, ::maarpc::HandleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* create_adb(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_destroy() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->destroy(context, request, response); }));
    }
    ~WithRawCallbackMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_create_custom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_create_custom() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackBidiHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->create_custom(context); }));
    }
    ~WithRawCallbackMethod_create_custom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create_custom(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::maarpc::CustomControllerResponse, ::maarpc::CustomControllerRequest>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* create_custom(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_set_option : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_set_option() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->set_option(context, request, response); }));
    }
    ~WithRawCallbackMethod_set_option() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status set_option(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerSetOptionRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* set_option(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_post_connection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_post_connection() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->post_connection(context, request, response); }));
    }
    ~WithRawCallbackMethod_post_connection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_connection(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* post_connection(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_post_click : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_post_click() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->post_click(context, request, response); }));
    }
    ~WithRawCallbackMethod_post_click() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_click(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostClickRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* post_click(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_post_swipe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_post_swipe() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->post_swipe(context, request, response); }));
    }
    ~WithRawCallbackMethod_post_swipe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_swipe(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostSwipeRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* post_swipe(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_post_press_key : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_post_press_key() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->post_press_key(context, request, response); }));
    }
    ~WithRawCallbackMethod_post_press_key() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_press_key(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostKeyRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* post_press_key(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_post_touch_down : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_post_touch_down() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->post_touch_down(context, request, response); }));
    }
    ~WithRawCallbackMethod_post_touch_down() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_touch_down(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* post_touch_down(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_post_touch_move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_post_touch_move() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->post_touch_move(context, request, response); }));
    }
    ~WithRawCallbackMethod_post_touch_move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_touch_move(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* post_touch_move(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_post_touch_up : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_post_touch_up() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->post_touch_up(context, request, response); }));
    }
    ~WithRawCallbackMethod_post_touch_up() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_touch_up(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* post_touch_up(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_post_screencap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_post_screencap() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->post_screencap(context, request, response); }));
    }
    ~WithRawCallbackMethod_post_screencap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status post_screencap(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* post_screencap(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_status : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_status() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->status(context, request, response); }));
    }
    ~WithRawCallbackMethod_status() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status status(::grpc::ServerContext* /*context*/, const ::maarpc::HandleIIdRequest* /*request*/, ::maarpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* status(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_wait : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_wait() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->wait(context, request, response); }));
    }
    ~WithRawCallbackMethod_wait() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status wait(::grpc::ServerContext* /*context*/, const ::maarpc::HandleIIdRequest* /*request*/, ::maarpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* wait(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_connected : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_connected() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->connected(context, request, response); }));
    }
    ~WithRawCallbackMethod_connected() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status connected(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::BoolResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* connected(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_image : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_image() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->image(context, request, response); }));
    }
    ~WithRawCallbackMethod_image() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status image(::grpc::ServerContext* /*context*/, const ::maarpc::HandleHandleRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* image(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_uuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_uuid() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->uuid(context, request, response); }));
    }
    ~WithRawCallbackMethod_uuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status uuid(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::StringResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* uuid(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_create_adb : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_create_adb() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::AdbControllerRequest, ::maarpc::HandleResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::AdbControllerRequest, ::maarpc::HandleResponse>* streamer) {
                       return this->Streamedcreate_adb(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_create_adb() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status create_adb(::grpc::ServerContext* /*context*/, const ::maarpc::AdbControllerRequest* /*request*/, ::maarpc::HandleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedcreate_adb(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::AdbControllerRequest,::maarpc::HandleResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_destroy() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::HandleRequest, ::maarpc::EmptyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::HandleRequest, ::maarpc::EmptyResponse>* streamer) {
                       return this->Streameddestroy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streameddestroy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::HandleRequest,::maarpc::EmptyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_set_option : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_set_option() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::ControllerSetOptionRequest, ::maarpc::EmptyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::ControllerSetOptionRequest, ::maarpc::EmptyResponse>* streamer) {
                       return this->Streamedset_option(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_set_option() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status set_option(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerSetOptionRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedset_option(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::ControllerSetOptionRequest,::maarpc::EmptyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_post_connection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_post_connection() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::HandleRequest, ::maarpc::IIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::HandleRequest, ::maarpc::IIdResponse>* streamer) {
                       return this->Streamedpost_connection(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_post_connection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status post_connection(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedpost_connection(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::HandleRequest,::maarpc::IIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_post_click : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_post_click() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::ControllerPostClickRequest, ::maarpc::IIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::ControllerPostClickRequest, ::maarpc::IIdResponse>* streamer) {
                       return this->Streamedpost_click(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_post_click() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status post_click(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostClickRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedpost_click(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::ControllerPostClickRequest,::maarpc::IIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_post_swipe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_post_swipe() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::ControllerPostSwipeRequest, ::maarpc::IIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::ControllerPostSwipeRequest, ::maarpc::IIdResponse>* streamer) {
                       return this->Streamedpost_swipe(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_post_swipe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status post_swipe(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostSwipeRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedpost_swipe(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::ControllerPostSwipeRequest,::maarpc::IIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_post_press_key : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_post_press_key() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::ControllerPostKeyRequest, ::maarpc::IIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::ControllerPostKeyRequest, ::maarpc::IIdResponse>* streamer) {
                       return this->Streamedpost_press_key(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_post_press_key() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status post_press_key(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostKeyRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedpost_press_key(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::ControllerPostKeyRequest,::maarpc::IIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_post_touch_down : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_post_touch_down() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::ControllerPostTouchRequest, ::maarpc::IIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::ControllerPostTouchRequest, ::maarpc::IIdResponse>* streamer) {
                       return this->Streamedpost_touch_down(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_post_touch_down() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status post_touch_down(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedpost_touch_down(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::ControllerPostTouchRequest,::maarpc::IIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_post_touch_move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_post_touch_move() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::ControllerPostTouchRequest, ::maarpc::IIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::ControllerPostTouchRequest, ::maarpc::IIdResponse>* streamer) {
                       return this->Streamedpost_touch_move(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_post_touch_move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status post_touch_move(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedpost_touch_move(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::ControllerPostTouchRequest,::maarpc::IIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_post_touch_up : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_post_touch_up() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::ControllerPostTouchRequest, ::maarpc::IIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::ControllerPostTouchRequest, ::maarpc::IIdResponse>* streamer) {
                       return this->Streamedpost_touch_up(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_post_touch_up() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status post_touch_up(::grpc::ServerContext* /*context*/, const ::maarpc::ControllerPostTouchRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedpost_touch_up(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::ControllerPostTouchRequest,::maarpc::IIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_post_screencap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_post_screencap() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::HandleRequest, ::maarpc::IIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::HandleRequest, ::maarpc::IIdResponse>* streamer) {
                       return this->Streamedpost_screencap(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_post_screencap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status post_screencap(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::IIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedpost_screencap(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::HandleRequest,::maarpc::IIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_status : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_status() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::HandleIIdRequest, ::maarpc::StatusResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::HandleIIdRequest, ::maarpc::StatusResponse>* streamer) {
                       return this->Streamedstatus(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_status() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status status(::grpc::ServerContext* /*context*/, const ::maarpc::HandleIIdRequest* /*request*/, ::maarpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedstatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::HandleIIdRequest,::maarpc::StatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_wait : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_wait() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::HandleIIdRequest, ::maarpc::StatusResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::HandleIIdRequest, ::maarpc::StatusResponse>* streamer) {
                       return this->Streamedwait(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_wait() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status wait(::grpc::ServerContext* /*context*/, const ::maarpc::HandleIIdRequest* /*request*/, ::maarpc::StatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedwait(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::HandleIIdRequest,::maarpc::StatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_connected : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_connected() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::HandleRequest, ::maarpc::BoolResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::HandleRequest, ::maarpc::BoolResponse>* streamer) {
                       return this->Streamedconnected(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_connected() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status connected(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::BoolResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedconnected(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::HandleRequest,::maarpc::BoolResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_image : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_image() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::HandleHandleRequest, ::maarpc::EmptyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::HandleHandleRequest, ::maarpc::EmptyResponse>* streamer) {
                       return this->Streamedimage(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_image() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status image(::grpc::ServerContext* /*context*/, const ::maarpc::HandleHandleRequest* /*request*/, ::maarpc::EmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedimage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::HandleHandleRequest,::maarpc::EmptyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_uuid : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_uuid() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::maarpc::HandleRequest, ::maarpc::StringResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::maarpc::HandleRequest, ::maarpc::StringResponse>* streamer) {
                       return this->Streameduuid(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_uuid() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status uuid(::grpc::ServerContext* /*context*/, const ::maarpc::HandleRequest* /*request*/, ::maarpc::StringResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streameduuid(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::maarpc::HandleRequest,::maarpc::StringResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_create_adb<WithStreamedUnaryMethod_destroy<WithStreamedUnaryMethod_set_option<WithStreamedUnaryMethod_post_connection<WithStreamedUnaryMethod_post_click<WithStreamedUnaryMethod_post_swipe<WithStreamedUnaryMethod_post_press_key<WithStreamedUnaryMethod_post_touch_down<WithStreamedUnaryMethod_post_touch_move<WithStreamedUnaryMethod_post_touch_up<WithStreamedUnaryMethod_post_screencap<WithStreamedUnaryMethod_status<WithStreamedUnaryMethod_wait<WithStreamedUnaryMethod_connected<WithStreamedUnaryMethod_image<WithStreamedUnaryMethod_uuid<Service > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_create_adb<WithStreamedUnaryMethod_destroy<WithStreamedUnaryMethod_set_option<WithStreamedUnaryMethod_post_connection<WithStreamedUnaryMethod_post_click<WithStreamedUnaryMethod_post_swipe<WithStreamedUnaryMethod_post_press_key<WithStreamedUnaryMethod_post_touch_down<WithStreamedUnaryMethod_post_touch_move<WithStreamedUnaryMethod_post_touch_up<WithStreamedUnaryMethod_post_screencap<WithStreamedUnaryMethod_status<WithStreamedUnaryMethod_wait<WithStreamedUnaryMethod_connected<WithStreamedUnaryMethod_image<WithStreamedUnaryMethod_uuid<Service > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace maarpc


#endif  // GRPC_controller_2eproto__INCLUDED
