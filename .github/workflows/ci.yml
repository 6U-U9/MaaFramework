name: ci

on:
  push:
    tags:
      - 'v*'
    branches:
      - '**'
    paths:
      - '.github/workflows/ci.yml'
      - '3rdparty/include/**'
      - 'MaaDeps/**'
      - 'include/**'
      - 'source/**'
      - 'sample/**'
      - 'cmake/**'
      - 'CMakeLists.txt'
      - '*.sln'
  pull_request:
    branches:
      - '**'
    paths:
      - '.github/workflows/ci.yml'
      - '3rdparty/include/**'
      - 'MaaDeps/**'
      - 'include/**'
      - 'source/**'
      - 'sample/**'
      - 'cmake/**'
      - 'CMakeLists.txt'
      - '*.sln'
  workflow_dispatch:

jobs:
  meta:
      runs-on: ubuntu-latest
      outputs:
        tag: ${{ steps.set_tag.outputs.tag }}
      steps:
        - uses: actions/checkout@v3
        - id: set_tag
          run: |
            echo tag=$(git describe --tags --match "v*" ${{ github.ref }} || git rev-parse --short HEAD) | tee -a $GITHUB_OUTPUT
    
  windows:
    needs: meta
    strategy:
      matrix:
        include:
          - msbuild_target: x64
            lowercase_target: x64
          - msbuild_target: ARM64
            lowercase_target: arm64
    env:
      MAABUILDER_TARGET_PLATFORM: ${{ matrix.msbuild_target }}
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      # Download host arch tools for Thrift of CustomThriftController
      - name: Download host tools from MaaDeps
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 maadeps-download.py x64-windows

      - name: Bootstrap MaaDeps
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 maadeps-download.py ${{ matrix.lowercase_target }}-windows

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1

      - name: Build MAA
        run: |
          MSBUILD MAA.sln /t:rebuild /p:MAA_VERSION="${{ needs.meta.outputs.tag }}" /p:Configuration="Release" /p:Platform="${{ matrix.msbuild_target }}" /m

      - name: Install
        shell: bash
        run: |
          cp -r docs ${{ matrix.msbuild_target }}/Release
          rm -rf ${{ matrix.msbuild_target }}/MaaThriftController

      - uses: actions/upload-artifact@v3
        with:
          name: MAA-win-${{ matrix.lowercase_target }}
          path: ${{ matrix.msbuild_target }}/Release

  windows-cmake:
    needs: meta
    strategy:
      matrix:
        include:
          - msbuild_target: x64
            lowercase_target: x64
          - msbuild_target: ARM64
            lowercase_target: arm64
    env:
      MAABUILDER_TARGET_PLATFORM: ${{ matrix.msbuild_target }}
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - uses: lukka/get-cmake@latest

      # Download host arch tools for Thrift of CustomThriftController
      - name: Download host tools from MaaDeps
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 maadeps-download.py x64-windows

      - name: Bootstrap MaaDeps
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 maadeps-download.py ${{ matrix.lowercase_target }}-windows

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1

      - name: Build MAA
        uses: lukka/run-cmake@v10
        with:
          # cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          # workflowPreset: 'workflow-name'
          configurePreset: "NinjaMulti"
          # configurePresetAdditionalArgs: "['-DENABLE_YOUR_FEATURE=1']"
          buildPreset: "NinjaMulti - Release"
          # buildPresetAdditionalArgs: "['--config Release']"
          # testPreset: 'ninja-multi-vcpkg'
          # testPresetAdditionalArgs: "['--config Release']"

  ubuntu:
    runs-on: ubuntu-latest
    needs: meta
    strategy:
      matrix:
        arch: [aarch64, x86_64]
    container: archlinux:base-devel
    steps:
      - uses: actions/checkout@v3

      - name: Install dep
        run: |
          pacman -Sy
          pacman -S --noconfirm cmake python ccache

      - name: Install cross compile toolchains
        if: ${{ matrix.arch != 'x86_64' }}
        run: |
          pacman -Sy
          pacman -S --noconfirm aarch64-linux-gnu-gcc

      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          remove_stale_cache: false

      # Download host arch tools for Thrift of CustomThriftController
      - name: Download host tools from MaaDeps
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 maadeps-download.py x64-linux

      - name: Bootstrap MaaDeps
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 maadeps-download.py ${{ matrix.arch == 'x86_64' && 'x64' || 'arm64' }}-linux

      - name: Build MAA
        env:
          CC: ${{ matrix.arch == 'x86_64' && 'ccache gcc' || 'ccache aarch64-linux-gnu-gcc' }}
          CXX: ${{ matrix.arch == 'x86_64' && 'ccache g++' || 'ccache aarch64-linux-gnu-g++' }}
        run: |
          mkdir -p build
          cmake -B build \
            -DMAADEPS_TRIPLET='maa-${{ matrix.arch == 'x86_64' && 'x64' || 'arm64' }}-linux' \
            -DINSTALL_THIRD_LIBS=ON \
            -DINSTALL_RESOURCE=ON \
            -DINSTALL_PYTHON=ON \
            -DMAA_VERSION='${{ needs.meta.outputs.tag }}'
          cmake --build build --parallel $(nproc --all)

          mkdir -p install
          cmake --install build --prefix install

      - name: Copy docs
        run: |
          cp -r docs install/docs

      - uses: actions/upload-artifact@v3
        with:
          name: MAA-linux-${{ matrix.arch }}
          path: 'install'

  # macOS:
  #   runs-on: macos-13
  #   needs: meta
  #   strategy:
  #     matrix:
  #       arch: [arm64, x86_64]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install Dependencies
  #       run: brew install ninja
  #     - name: Bootstrap MaaDeps
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         [[ ${{ matrix.arch }} = "arm64" ]] && triplet="arm64-osx" || triplet="x64-osx"
  #         python3 maadeps-download.py ${triplet}
  #     - name: Configure MaaFramework
  #       run: |
  #         cmake -B build -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES='${{ matrix.arch }}' -DMAA_VERSION='${{ needs.meta.outputs.tag }}'
  #     - name: Build MaaFramework
  #       run: |
  #         cmake --build build
  #         cmake --install build --prefix install

  #     - name: Copy docs
  #       run: |
  #         cp -r docs install/docs
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: MaaFramework-macos-${{ matrix.arch }}
  #         path: 'install/*.dylib'

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [meta, windows, ubuntu]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: assets
      - run: |
          cd assets
          for f in *; do
            (cd $f && zip -r ../$f-${{ needs.meta.outputs.tag }}.zip .)
          done
      - uses: softprops/action-gh-release@v1
        with:
          files: assets/*.zip
          tag_name: ${{ needs.meta.outputs.tag }}
