syntax = "proto3";

package maarpc;

import "types.proto";

message SyncContextRunTaskRequest {
  optional Handle handle = 1;
  optional string task = 2;
  optional string param = 3;
}

message SyncContextRunRecognizerRequest {
  optional Handle handle = 1;
  optional string task = 2;
  optional string param = 3;
  optional Handle image = 4;
}

message SyncContextRunRecognizerResponse {
  optional bool match = 1;
  optional Rect box = 2;
  optional string detail = 3;
  optional RpcStatus status = 101;
}

message SyncContextRunActionRequest {
  optional Handle handle = 1;
  optional string task = 2;
  optional string param = 3;
  optional Rect box = 4;
  optional string detail = 5;
}

message SyncContextClickRequest {
  optional Handle handle = 1;
  optional ClickParam param = 2;
}

message SyncContextSwipeRequest {
  optional Handle handle = 1;
  optional SwipeParam param = 2;
}

message SyncContextKeyRequest {
  optional Handle handle = 1;
  optional KeyParam param = 2;
}

message SyncContextTouchRequest {
  optional Handle handle = 1;
  optional TouchParam param = 2;
}

message SyncContextScreencapRequest {
  optional Handle handle = 1;
  optional Handle image = 2;
}

service MaaFrameworkSyncContext {
  rpc run_task(SyncContextRunTaskRequest) returns (EmptyResponse);
  rpc run_recognizer(SyncContextRunRecognizerRequest)
      returns (SyncContextRunRecognizerResponse);
  rpc run_action(SyncContextRunActionRequest) returns (EmptyResponse);

  rpc click(SyncContextClickRequest) returns (EmptyRequest);
  rpc swipe(SyncContextSwipeRequest) returns (EmptyRequest);
  rpc key(SyncContextKeyRequest) returns (EmptyRequest);
  rpc touch_down(SyncContextTouchRequest) returns (EmptyRequest);
  rpc touch_move(SyncContextTouchRequest) returns (EmptyRequest);
  rpc touch_up(SyncContextTouchRequest) returns (EmptyRequest);

  rpc screencap(SyncContextScreencapRequest) returns (EmptyResponse);
  rpc task_result(HandleStringRequest) returns (StringResponse);
}
